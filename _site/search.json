[
  
    {
      "title"    : "Tổng kết buổi 2",
      "category" : "",
      "tags"     : "Programming language and Learning",
      "url"      : "/cpp-buoi2",
      "date"     : "Nov 21, 2021",
      "content"  : "  Số lượng thành viên tham gia: 26Link slide buổi họcLink recordLink bài tập lớp buổi 2 CPPLink btvn buổi 2 CPPNội dung chia sẻ:  Giới thiệu về mảng  Giới thiệu về các vòng lặp:          Vòng lặp for.      Vòng lặp while do.      Vòng lặp do while.        Một số lệnh thường dùng trong vòng lặp:          break      continue      Mảng  Định nghĩa: Mảng là tập hợp các phần tử cùng kiểu được lưu trữ tuần tự trong bộ nhớ.  Cách khai báo: Type arrayName[dimension];    - Ví dụ: int a[5]; char a[26];  Truy cập vào phần tử thứ i của mảng: arrayName[i]  Lưu ý:          Chỉ số mảng bắt đầu từ 0, 1, 2, 3, 4, … , n-1      Nếu gọi phần tử không nằm trong mảng thì sẽ nhận về giá trị bất kì(Buffer overflow).        Mảng hai chiều: type arrayName[dimesion][dimesion];Vòng lặp ForCấu trúc:for(initialization; condition; incrementation){        	Statement 1;        	Statement 2;}Ví dụ:for(int i=1;i&amp;lt;=n;i++){        	res+=1;        	cout&amp;lt;&amp;lt;res&amp;lt;&amp;lt;” “;}Giải thích ví dụ:Đầu tiên t khai báo biến điểm và gán giá trị: int i = 1;Điều kiện để vòng for chạy là i&amp;lt;=5; tức là i còn nhỏ hơn hoặc bằng 5 thì còn chạy.Tăng i sau mỗi lần thực hiện các câu lệnh ở trong {}.Vòng lặp while doCấu trúc:while (condition){        	Statement(s);        	Updation;}Ví dụ:cin&amp;gt;&amp;gt;x; sl=0;while (x&amp;gt;0){        	x/=10;        	sl++;}Giải thích ví dụ:Đầu tiên nhập x và gán sl=0;Vòng while sẽ xét điều kiện trước rồi mới thực hiện các câu lệnh trong {}, tức là x &amp;gt; 0 tức là x còn lớn hơn 0 thì còn thực hiện các câu lệnh trong ngoặc.Vòng lặp do whileCấu trúc:do{ } while (condition)Ví dụ:n=-5;do{	n++;}while(n&amp;gt;0)Giải thích ví dụ:Đầu tiên gán n=-5Vòng do while sẽ thực hiện các câu lệnh trong {} trước rồi mới xét điều kiệnLệnh thường dùng:  Break; - thoái khỏi vòng lặp.  Continue; bỏ qua các câu lệnh phía dưới trong vòng lặp và nhảy tới lần lặp tiếp theo.Bảng xếp hạng Hackerrank:Code bài tập trên lớp:Số nguyên tốĐịnh nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó. Hãy viết một chương trình kiểm tra xem một số nhập từ bàn phím có phải số nguyên tố không.Input Format:một số tự nhiên NConstraintsSubtask 1 (80% testcases): N &amp;lt; 100000000Subtask 2 (20% testcases): N &amp;lt; 10000000000000000Output FormatIn ra YES nếu đầu vào là số nguyên tố, NO nếu đầu vào không phải là số nguyên tố.Sample Input 0:11Sample Output 0:YESSolution// from kh280174#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */       long N, b=0;    cin &amp;gt;&amp;gt; N;    if(N==2){cout&amp;lt;&amp;lt;&quot;YES&quot;; return 0;};    if(N&amp;lt;2){cout&amp;lt;&amp;lt;&quot;NO&quot;; return 0;};    if(N&amp;gt;2){        for( int i=2; i&amp;lt;=sqrt(N); i++){        if(N%i==0){b=1;};    }};    if(b==1){cout&amp;lt;&amp;lt;&quot;NO&quot;;}    else cout&amp;lt;&amp;lt;&quot;YES&quot;;    return 0;     return 0;}Vẽ hình chữ nhậtVẽ một hình chữ nhật nằm thẳng đứng (độ cao sẽ là chiều dài của hình chữ nhật), từ hai số N, M đại diện cho kích thước của hình đấy.Input Format:N, MConstraints1 &amp;lt; N, M &amp;lt; 1000Output Formathình chữ nhật vẽ bằng ký tự “*“Sample Input 05 7Sample Output 0:***********************************Solution// from tranduybthv#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    int a,b;    cin &amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;    if(a&amp;gt;b){        int temp = a;        a=b;        b=temp;    }    for(int i =0; i&amp;lt;b;i++ ){        for(int j =0; j&amp;lt;a;j++ ){            cout &amp;lt;&amp;lt;&quot;*&quot;;        }        cout &amp;lt;&amp;lt;endl;    }       return 0;}Christmas treeVẽ một cây thông noel, có độ cao của phần lá là N, và phần gốc có độ cao cùng với độ rộng là số lẻ gần với N/4 nhất (nếu tồn tại hai số lẻ cùng khoảng cách đến N/4 thì chọn số lớn hơn);Input Format:Một số nguyên N là độ cao của phần lá.Constraints1 &amp;lt; N &amp;lt; 1000Output FormatMột cây thông được vẽ bằng những dấu *Sample Input 012Sample Output 0:           *          ***         *****        *******       *********      ***********     *************    ***************   *****************  ******************* ********************************************          ***          ***          ***Sample Input 017Sample Output 0:                *               ***              *****             *******            *********           ***********          *************         ***************        *****************       *******************      *********************     ***********************    *************************   ***************************  ***************************** ****************************************************************              *****              *****              *****              *****              *****Solution// from nguyenkhanhly111#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    int n;    cin&amp;gt;&amp;gt;n;    for(int i=0; i&amp;lt;n; i++)    {        for(int j=1; j&amp;lt;n-i; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}        for(int j=0; j&amp;lt;i*2+1; j++) {cout&amp;lt;&amp;lt;&quot;*&quot;;}        for(int j=1; j&amp;lt;n-i; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}          cout&amp;lt;&amp;lt;&quot;\n&quot;;    }    int than_cay = int(n/4) + int(int(n/4)%2 == 0);    for(int i=0; i&amp;lt;than_cay; i++)    {        for(int j=0; j&amp;lt;n-int(than_cay/2)-1; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}        for(int j=0; j&amp;lt;than_cay; j++) {cout&amp;lt;&amp;lt;&quot;*&quot;;}        cout&amp;lt;&amp;lt;&quot;\n&quot;;    }        return 0;}Đường Link hữu ích:Массивы в C++A Simple Guide to For, While, and Do While Loops in C++Stop Using i++ in Your Loops",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-21T04:48:45+03:00'>21 Nov 2021</time><a class='article__image' href='/cpp-buoi2'> <img src='/images/cpp_banner.jpeg' alt='Tổng kết buổi 2'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/cpp-buoi2'>Tổng kết buổi 2</a> </h2><p class='article__excerpt'>ManhLab</p></div></div></div>"
    } ,
  
    {
      "title"    : "Master Google Search",
      "category" : "",
      "tags"     : "Programming language and Tools",
      "url"      : "/google-search",
      "date"     : "Nov 19, 2021",
      "content"  : "  Hello xin chào tất cả các bạn. Mình là Mạnh, cũng như các sinh viên khác mình sử dụng google rất nhiều. Sau quá trình googlelist nhiều năm, mình đã luyện được khá nhiều bí kíp võ công, giúp bản thân thành công xử lý các tiên sinh khó tính ở trường. Bí kíp này mình sẽ giữ cho riêng mình và không chia sẻ cho ai hết nhé. Tạm biệt các bạn! Kết bài đi anh Tuấn ơi!   Hê lô mọi người! Mình là Tuấn, mình mới trộm được quyển bí kíp của Mạnh. Nay mạnh dạn chia sẻ cho mọi người, mọi người thấy hay vui lòng gửi ít tiền vào tk: 210397290703Ông lớn công nghệ Google hiện nay sở hữu công cụ tìm kiếm lớn nhất trên thế giới. Bất cứ thông tin, hình ảnh, video, địa điểm bạn hoàn toàn có thể sử dụng bộ tìm kiếm trên Google, kết quả sẽ có chỉ sau vài giây nhanh nhất. Và thao tác nhập nội dung tìm kiếm trên thanh Search của Google thì chắc chắn ai cũng biết. Tuy nhiên, nếu chúng ta muốn tìm những kết quả phức tạp hơn, chính xác hơn thì cần đến một vài những thủ thuật cần thiết trên GoogleSearching using Site:Với sử dụng site trong tìm kiếm cho phép bạn thực hiện tìm kiếm trên google cho một trang web cụ thể. bạn cũng có thể sử dụng điều này để kiểm tra xem trang web của bạn có trên google tìm kiếm hay không. Thông thường ta thường sử dụng để tìm kiếm trên các trang uy tín như: medium, stackoverflow, geeksforgeeks.org,….      Search site / GoogleSearch using quotation:Bạn cũng có thể sử dụng dấu ngoặc kép để lấy nội dung chính xác hơn. Thông thường, khi bạn gõ tìm một nội dung bất kỳ, Google sẽ gợi ý đến những chủ đề có từ khóa liên quan. Khi dùng phương pháp này kết quả  yêu cầu chính xác cụm từ cần search.      Search using quotation / GoogleKhông biết sao chứ mình tìm thì nó lại ra lensovieta mọi người ạ!Missing words or Phrases:Bạn có thể sử dụng dấu * (dấu hoa thị) để điền các từ và cụm từ còn thiếu. Nó rất hữu ích bất cứ khi nào bạn đang cố gắng tìm kiếm một bài hát và bạn không nhớ lời bài hát.      Search * / GoogleExcluding a word:Sử dụng ‘-’ để loại trừ các từ và cụm từ khỏi tìm kiếm. Kết quả sẽ hiển thị tất cả các trang web và liên kết không có chữ.Nếu các bạn không thêm -nguyên vào phía sau thì kết quả sẽ thu được như sau:      Excluding a word / Facebook      Excluding a word / GoogleFileType Operator: Tìm theo loại tệpNếu bạn muốn tìm 1 quyển sách mà nó vẫn đang chơi trò trốn tìm với bạn bạn thì mẹo nhỏ sau đây sẽ hữu ích với bạn. Toán tử này cung cấp cho bạn sức mạnh để tìm kiếm tệp cho một loại tệp cụ thể. Nó rất hữu ích khi bạn đang tìm kiếm pdf hoặc các tệp tin được định dạng ở các loại khác như PPT, XSL.      Search filetype / GoogleThực hành tìm một quyển sách      Search book / GoogleThực hành tìm mã nguồn      Search code / GoogleThực hành giải quyết lỗi trong chương trình      Search error / GoogleThực hành tìm một bài hát dựa theo lời      Search song / GoogleĐây là một số thủ thuật tìm kiếm mà mình biết. Nếu bạn còn các cách tìm thông tin hiệu quả khác nữa thì đừng ngần ngại chia sẻ vào comment dưới bài viết nhé.  Cảm ơn các bạn đã đọc hết bài viết này!",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-19T04:48:45+03:00'>19 Nov 2021</time><a class='article__image' href='/google-search'> <img src='/images/maxresdefault.jpeg' alt='Master Google Search'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/google-search'>Master Google Search</a> </h2><p class='article__excerpt'>ManhLab+Đinh Ngọc Tuấn</p></div></div></div>"
    } ,
  
    {
      "title"    : "Giới thiệu về Github",
      "category" : "",
      "tags"     : "Programming language and Tools",
      "url"      : "/github",
      "date"     : "Nov 15, 2021",
      "content"  : "GitHub là gì?GitHub là một hệ thống quản lý dự án và phiên bản code, hoạt động giống như một mạng xã hội cho lập trình viên. Các lập trình viên có thể clone lại mã nguồn từ một repository và Github chính là một dịch vụ máy chủ repository công cộng, mỗi người có thể tạo tài khoản trên đó để tạo ra các kho chứa của riêng mình để có thể làm việc.GitHub là một dịch vụ nổi tiếng cung cấp kho lưu trữ mã nguồn Git cho các dự án phần mềm. GitHub có đầy đủ những tính năng của Git, ngoài ra nó còn bổ sung những tính năng về social để các developer tương tác với nhau.  Vài thông tin về Git:Là công cụ giúp quản lý source code tổ chức theo dạng dữ liệu phân tán.Giúp đồng bộ source code của team lên 1 server.Hỗ trợ các thao tác kiểm tra source code trong quá trình làm việc (diff, check modifications, show history, merge source, …)Một vài khái niệm và lệnh cơ bản của Git bạn cần nắm vững.Ở trong bài này, chúng ta sẽ không đi sâu vào tất cả các khái niệm và lệnh của git, mà chỉ giới thiệu các khái niệm, lệnh cơ bản hay được lập trình viên sử dụng khi phát triển các dự án phần mềm theo team. Trong quá trình hướng dẫn các lớp học cơ bản, chúng mình sẽ xen kẽ demo thực tế cách sử dụng git để tạo repository trên github và hướng dẫn mọi người làm việc với nó.Một vài khái niệm cơ bản của git:  Repository: Kho quản lý dữ liệu, là nơi lưu trữ các dữ liệu, mã nguồn của project.  Branch: được hiểu như là nhánh, thể hiện sự phân chia các version khi 2 version đó có sự sai khác nhất định và 2 version đều có sự khác nhau.  Commit: là một điểm trên cây công việc (Work Tree ) hay gọi là cây phát triển công việc  Clone: được gọi là nhân bản, hay thực hiện nhân bản. Sử dụng để clone các project, repository trên các hệ thống chạy trên cơ sở là git, ví dụ như: bitbucket, github, gitlab, cor(1 sản phẩm mã nguồn mở cho phép người dùng tự tạo git server cho riêng mình trên vps, server),…  Remote: sử dụng để điều khiển các nhánh từ một repository trên git server, đối xử với các nhánh trên remote tương tự như đối xử với các nhánh trên local  .gitignore: file mặc định của git sử dụng để loại bỏ (ignore) các thư mục, file mà mình không muốn push lên git serverMột vài lệnh cơ bản của git:            Lệnh      Mô tả                  git init      Khởi tạo kho lưu trữ git local              git clone ssh://git@github.com/[username]/[repository-name].git      Tạo bản sao tại git local từ repository trên github              git add [file-name.txt]      Thêm tệp vào git hiện tại              git commit –m “[commit mesage]”      Thêm bình luận về mục đã được thay đổi ở nhánh git hiện tại              git branch -b [branch name]      Tạo một nhánh mới có tên xác định và chuyển sang nhánh đó              git remote add origin ssh://git@github.com/[username]/[repository-name].git      Thêm repository trên github              git pull      Cập nhật repository local hiện tại đến sự thay đổi mới nhất (đến commit mới nhất)              git push origin [branch name]      Đẩy 1 nhánh có tên xác định lên repository trên github              git checkout [branch name]      Chuyển sang nhánh khác      Thực hành tạo và push dự án lên github khi làm việc với hệ điều hành window:Điều đầu tiên các bạn cần làm đó là tạo tài khoản trên GitHub:      Signup/GithubCác bạn vào trang web Sign up github. Nhập đầy đủ thông tin tài khoản của bạn.Sau đó các bạn cần cài đặt git trên window:Các bạn có thể làm theo bài viết nàyBước chuẩn bị đã xong, chúng ta cùng tạo 1 project nhỏ và push lên github nhé.B1: Bạn tạo repo (repository) trên github bằng nút new      Signup/GithubB2: Bạn đặt tên cho repo của mình và bấm nút create repository      Signup/GithubB3: Sau khi tạo repo xong sẽ hiện ra như thế này. Đây cũng chính là hướng dẫn giúp bạn tạo 1 repo local và push lên gihub. Chúng ta sẽ đi cụ thể hơn ở bước sau nhé.      Signup/GithubB4: Bạn tạo 1 thư mục mới ở trên máy tính &amp;gt; Vào thư mục &amp;gt; Bấm chuột phải vào khoảng không thì sẽ ra như này (nếu bạn đã cài git thành công).      Signup/GithubB5: Bạn chọn Git Bash Here và sẽ mở ra cửa sổ sau.      Signup/GithubB6: Chúng ta sẽ thêm vài file đơn giản vào thư mục để thử push lên github nhé.      Signup/GithubB7: Bây giờ thì các bạn gõ và gõ theo mình..=))      Signup/GithubB8: Đã xong! Bây giờ thì bạn vào github, refresh lại trang có repo Hello mình vừa tạo và kiểm tra nhé. Kết quả sẽ được như sau.      Signup/Github(*)README.md: Về cơ bản, là một tệp văn bản hoạt động như một tài liệu cho một dự án hoặc thư mục. Có thể cho rằng phần quan trọng nhất của bất kì dự án nguồn mở nào là README. Một README tốt không chỉ thông báo cho mọi người dự án làm gì và dự án đó dành cho ai và còn cả cách họ sử dụng và đóng góp cho nó.Lợi ích của Github đối với lập trình viên.  Quản lý source code dễ dàng:Khi bạn tạo một repo (repository), toàn bộ source code của repo đó được lưu trên GitHub. Tại đây, bạn có thể coi lại quá trình mình đã làm việc thông qua các comment sau mỗi lần commit. Và cái hay ở đây, là nhiều người có thể cùng làm một repo.Lợi ích đầu tiên, chính là bạn biết được ai đã commit và commit cái gì. Tiếp theo, source của bạn có thể phát triển theo nhiều nhánh. Nguyên tắc làm việc với các nhánh như sau: Bạn có thể rẽ nhiều nhánh để phát triển project. Nhưng cuối cùng, bạn phải merge (hợp nhất) lại vào nhánh MASTER để ra được project hoàn chỉnh.  Github giúp cải thiện kỹ năng code:Có hàng ngàn hàng vạn cách để học, học trên Github sẽ là một ý kiến không tồi trong thời đại này. Với hàng vạn open source projects, hàng trăm ngàn contributors, hàng tỉ commit mỗi ngày thì chỉ bằng việc xem. So sánh, học tập từ những thay đổi đó đã đem lại cho bạn hàng tá điều hay để cải thiện kỹ năng code của bản thân mình.  Github là một kho tài nguyên tuyệt vời:Với chức năng Explore, bạn có thể theo dõi, tìm kiếm những open source projects theo đúng technology pattern mà bạn ưa thích. Github hỗ trợ code search không kể nó ở dưới dạng một project riêng biệt hay là website. Ngoài ra, nền tảng này cũng có SEO khá tốt nên người dùng có thể tìm kiếm bất kỳ code string nào được chia sẻ public.  Github chứng tỏ bạn là ai:Chẳng thể phủ nhận những lời hay ý đẹp bạn viết trong CV là cần thiết. Nhưng Source code luôn là minh chứng tốt nhất để thể hiện bạn là developer thực thụ. Khi viết CV bạn nên đầu tư cho mình một tài khoản Git thật ấn tượng và đưa đường dẫn vào CV. Có thể nói, 1 phần GitHub “nho nhỏ” trong CV có thể đánh bóng vị trí của bạn, nổi bật hơn những ứng cử viên khácTóm lại, Github là gì?GitHub là sự kết hợp giữa 2 từ, Git – hệ thống quản lý dự án và phiên bản code và Hub – một mạng xã hội cho lập trình viên. GitHub được sử dụng chủ yếu cho dự án có nhiều người cùng hợp tác và cần giám sát toàn bộ thay đổi của dự án, cũng như để  khôi phục code khi cần thiết.NGUỒN:GitHub là gì? Những lợi ích GitHub mang lại cho lập trình viênGitHub là gì? Sử dụng GitHub để làm gì? Và các thuật ngữ cần biết",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-15T04:48:45+03:00'>15 Nov 2021</time><a class='article__image' href='/github'> <img src='/images/github.png' alt='Giới thiệu về Github'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/github'>Giới thiệu về Github</a> </h2><p class='article__excerpt'>Triệu Tâm</p></div></div></div>"
    } ,
  
    {
      "title"    : "Tổng kết buổi 1",
      "category" : "",
      "tags"     : "Programming language and Learning",
      "url"      : "/cpp-buoi1",
      "date"     : "Nov 14, 2021",
      "content"  : "  Số lượng thành viên tham gia: 27Link slide buổi họcLink recordLink bài tập lớp buổi 1 CPPLink btvn buổi 1 CPPNội dung chia sẻ:  Tổng quan về C++ và ứng dụng.  Cấu trúc 1 chương trình C++ cơ bản.  Ghi nhớ cách khai báo biến, cấu trúc lệnh if else và swicth.  Một số thư viện cần nhớ:          #include &amp;lt;bits/stdc++.h&amp;gt; - thư viện gọi tất cả các thư viện.      iostream- thư viện chứ hàm cin, cout,…      math.h - thư viện chứa hàm sqrt(tính căn bậc 2), abs(trị tuyệt đối), sin(tính sin),…      stdio.h - thư viện chứa printf, scanf,…      iomanip - thư viện chứa setprecision,…        Cách in số thực y làm tròn sau dấy phẩy x chữ số: cout&amp;lt;&amp;lt;fixed&amp;lt;&amp;lt;setprecision(x)&amp;lt;&amp;lt;y;Ưu điểm của C++  C++ là một ngôn ngữ hiệu năng cao.  Nhiều ứng dụng - từ Học máy đến xây dựng trò chơi trong Unity và Unreal đến mô phỏng toán học thời gian thực, đến lập trình các hợp đồng thông minh Blockchain. Nếu bạn chưa biết Tensorflow, một trong những thư viện Máy học được sử dụng rộng rãi nhất trên thế giới sử dụng C++ làm ngôn ngữ lập trình phụ trợ để tăng tốc độ thực thi.  Quản lý bộ nhớ - C++ cung cấp cho người dùng quyền kiểm soát hoàn toàn, đó là một lợi thế và một bất lợi vì điều này làm tăng trách nhiệm của người dùng trong việc quản lý bộ nhớ thay vì được quản lý bởi bộ thu gom rác.  Hỗ trợ Thư viện - thư viện tiêu chuẩn cho các vùng chứa khác nhau như sets, map, hash, v.v.  Ngôn ngữ lập trình hướng đối tượng - bốn nguyên tắc của lập trình hướng đối tượng là đóng gói, trừu tượng hóa, kế thừa và đa hình. Nhìn chung, điều này giúp tránh trùng lặp mã và tăng khả năng tái sử dụng mã.          Tính năng đóng gói làm cho dữ liệu trừu tượng hóa (bảo mật hoặc quyền riêng tư đối với dữ liệu) có thể thực hiện được với sự trợ giúp của một lớp.      Kế thừa được sử dụng để cung cấp khái niệm về khả năng tái sử dụng mã.      Tính đa hình làm cho một ngôn ngữ có thể thực hiện các tác vụ khác nhau ở các trường hợp khác nhau.      Tính trừu tượng thể hiện thông tin cần thiết trong một chương trình mà không cần trình bày chi tiết.      Người sáng tạoNăm 1983, Bjarne Stroustrup phát hành C++, ông là nhân viên của Bell AT&amp;amp;T và bắt đầu làm việc trên ngôn ngữ “C với các lớp”. Giờ đây, C++ phát triển thêm nhiều tính năng mở rộng và được ứng dụng rộng rãi trong nhiều lĩnh vực.Nói về Bell AT&amp;amp;T Labs là một trong những nơi ươm mầm những phát kiến lớn nhất của lĩnh vực Công nghệ thông tin và truyền thông thế kỉ 20.C++Nó là một ngôn ngữ cấp cao được thiết kế để phát triển ứng dụng nhanh chóng. Bạn không cần phải học C để sử dụng C ++.Một dự án C++Nó sẽ luôn có hai giai đoạn: biên dịch mã thành một hoặc nhiều tệp object và sau đó liên kết các tệp object thành tệp thực thi. Điều này có nghĩa là trình biên dịch C++ của bạn sẽ cung cấp một công cụ khác, được gọi là trình liên kết.Ngữ nghĩa của cppỞ cấp độ rất cơ bản, một project C ++ sẽ chỉ chứa một file: mã nguồn C++, thường có phần mở rộng là cpp, viết tắt của c plus plus.Bắt đầu với hàm mainMột trong những phần này là hàm main() là hàm chạy đầu tiên. Hiện tại, tất cả những gì bạn cần biết là mọi ứng dụng C ++ đều có một hàm main().#include &amp;lt;iostream&amp;gt;// The entry point of the program int main() {     std::cout &amp;lt;&amp;lt; “Hello, world!”;    return 0; }Chia nhỏ cú phápDòng đầu tiên bắt đầu bằng #include. #include cho phép tái sử dụng mã được viết sẵn tại thư viện trong chương trình của bạn.#include &amp;lt;iostream&amp;gt;int main() {     std::cout &amp;lt;&amp;lt; “Hello, world!”;     return 0;}  dấu ngoặc nhọn (&amp;lt;&amp;gt;) chỉ ra rằng trình biên dịch nên tìm thư viện cung cấp sẵn.  Comment - dòng bắt đầu bằng //. Một cách khác có thể được bắt đầu bằng /* và kết thúc bằng */ và mọi thứ giữa hai ký hiệu này là một comment, bao gồm cả ngắt dòng. Tất cả kí tự ở giữa comment sẽ không được chạy.  Dấu ngoặc nhọn - ** chia tách khối mã {}**, trong trường hợp này được sử dụng cho hàm main để chia tách với các phần khác của chương trình. Tưởng tượng chương trình như sự lắp ghép của các khối, thì {} sẽ chia tách các khối đó với nhau, giúp chương trình biết được mã nào là của khối nào.  Dấu ngoặc trống (), hiện tại hàm này không có tham số. Nhưng thông thường, điều này được sử dụng để khai báo các tham số được truyền cho hàm.  Hàm int main(), là điểm bắt đầu của ứng dụng c++ của bạn phải trả về int(tức là một số nguyên).chức năng chính là một câu lệnh đơn bắt đầu bằng std và kết thúc bằng dấu chấm phẩy (;)câu lệnh đơn in ra chuỗi Hello, world!.  chuỗi được đặt trong dấu ngoặc kép (″ ″).  chuỗi được đưa vào std::cout bằng cách sử dụng toán tử « cho phép dữ liệu được in ra.Sử dụng std namespace thay thếTrong trường hợp này, std là viết tắt của standard namespace. Điều đó bao gồm cout, cin, string, vector, map, v.v. Vì vậy, phổ biến là thêm “using namespace std” ở đầu mã nguồn để bạn không phải nhập lại tiền tố std::. namespace là tên được đặt cho các phần của mã giúp giảm nguy cơ xung đột đặt tên.Before using Namespace#include &amp;lt;iostream&amp;gt;int main() {     std::cout &amp;lt;&amp;lt; “Hello, world!”; }After using Namespace including Breakdown of the Syntax//Preprocessor directive#include &amp;lt;iostream&amp;gt;// Entry point of the program int main() {     /*Tell the compiler what namespace to search with namespace std;*/   using namespace std;/* Write to the screen using std::cout*/   cout &amp;lt;&amp;lt; “Hello, world!”&amp;lt;&amp;lt; endl;//Returns a value    return 0; }Chúc mừng bạn đã thực hiện chương trình đầu tiên. Stay hungry! Stay foolishBảng xếp hạng Hackerrank:Code bài tập trên lớp:Tặng hoaTrong CLB ITMO Brain thì anh Trần Đức Mạnh ( a.k.a Mi sa Chan) nổi tiếng là nhiều tiền và đẹp trai, đặc biệt là rất biết quan tâm đến các bạn nữ. Hôm nay là ngày 14 tháng 11 - “Ngày bệnh dư đường thế giới” hay còn gọi là “ngày quốc tế đáo thái đường” (World Diabetes Day), anh Mạnh quyết tâm thể hiện sự ngọt ngào của mình và quyết định sẽ mua hoa tặng tất cả các người yêu của anh.Anh Mạnh có N người yêu và dự định mua X bông hoa, mỗi bông hoa có giá là P. Ở Saint Petersburg hoa rất đắt, sinh hoạt phí kỳ này thì đang chậm nên anh Mạnh phải lên kế hoạch đầu tư hợp lý. Các bạn hãy giúp anh tính số tiền trung bình mà anh đầu tư cho mỗi cô người yêu nhé !Input Format:3 số nguyên n, x, p nằm trên cùng 1 dòngConstraints1 ≤ n ≤ 10ˆ31 ≤ x ≤ 10ˆ61 ≤ p ≤ 10ˆ6Output FormatSố thực duy nhất là số tiền trung bình mà anh Mạnh đầu tư cho mỗi cô người yêu.Sample Input 0:4 6 200Sample Output 0:300Solution// from danghoangducbinh#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    double n, x, p;    cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; x &amp;gt;&amp;gt; p;    double a = x*(p/n) ;    cout &amp;lt;&amp;lt; fixed &amp;lt;&amp;lt; (a);    return 0;}Đếm nghiệmSau màn tặng hoa thể hiện đầy đủ sự giàu có và khả năng thấu hiểu chị em, anh Mạnh đã ghi điểm rất lớn trong lòng các bạn nữ trong CLB ITMO BRAIN. Tuy nhiên các bạn nữ trong CLB chúng ta đều là những người xinh đẹp và thông minh, ai cũng có tiêu chuẩn chọn người yêu rất cao. Ngoài đẹp trai, cao 1m90, nhiều tiền, … anh Mạnh cần phải chứng minh trí tuệ của mình. TN (Thị Nở) - một ứng cử viên tiềm năng cho vị trí người yêu đưa ra cho anh một câu đố:Với mỗi số nguyên n bạn TN nói ra, anh phải trả lời chính xác số nghiệm thực của phương trình sau:Anh Mạnh rất bận, còn rất nhiều mục tiêu theo đuổi nữa, không chỉ mình TN. Nên bạn hãy giúp anh Mạnh viết 1 chương trình tự động trả lời câu hỏi của TN nhé!Input Format:Gồm 1 số nguyên n trên 1 dòng duy nhấtConstraints1 ≤ n ≤ 10ˆ9Output FormatSố nguyên duy nhất là số nghiệm thực của phương trình đã choSample Input 02Sample Output 0:0Solution// from tle15112002#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    cout &amp;lt;&amp;lt; 0;    return 0;}Mai làm gìKhánh Huyền là người đam mê đỏ đen và luôn quyết định ngày mai của mình bằng việc tung xúc xắc. Đầu tiên Huyền tung xúc xắc để quyết định xem có đi học hay không. Nếu xúc xắc ra chẵn thì nghỉ học hoặc ngược lại thì đi học. Nếu đi học, Huyền lại tung xúc xắc tiếp, chẵn thì làm bài, lẻ thì không làm bài. Nếu nghỉ học, Huyền tung xúc xắc ra chẵn thì xem phim, lẻ thì gội đầu.Input Format:2 số nguyên x và y - là 2 số Huyền nhận được sau 2 lần tung xúc xắc.Constraints0 &amp;lt; x &amp;lt; 7; 0 &amp;lt; y &amp;lt; 7Output FormatIn ra màn hình kết quả ứng với từng số: “nghi hoc”, “di hoc”, “lam bai”, “khong lam bai”, “xem phim”, “goi dau” và các kết quả được ngăn cách bởi chữ ‘va’.Sample Input 06 1Sample Output 0:nghi hoc va goi dauSolution// from kh280174#include &amp;lt;cmath&amp;gt;#include &amp;lt;cstdio&amp;gt;#include &amp;lt;vector&amp;gt;#include &amp;lt;iostream&amp;gt;#include &amp;lt;algorithm&amp;gt;using namespace std;int main() {    /* Enter your code here. Read input from STDIN. Print output to STDOUT */       int x, y;    cin &amp;gt;&amp;gt; x &amp;gt;&amp;gt; y;    if(x%2==1){        if(y%2==1){cout&amp;lt;&amp;lt;&quot;di hoc va khong lam bai&quot;;}        else cout&amp;lt;&amp;lt;&quot;di hoc va lam bai&quot;;    };    if(x%2==0){        if(y%2==1){cout&amp;lt;&amp;lt;&quot;nghi hoc va goi dau&quot;;}        else cout&amp;lt;&amp;lt;&quot;nghi hoc va xem phim &quot;;    };        return 0;}Đường Link hữu ích:Main functionCpp type6.096 Introduction to C++: Introduction",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-14T04:48:45+03:00'>14 Nov 2021</time><a class='article__image' href='/cpp-buoi1'> <img src='/images/cpp_banner.jpeg' alt='Tổng kết buổi 1'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/cpp-buoi1'>Tổng kết buổi 1</a> </h2><p class='article__excerpt'>ManhLab</p></div></div></div>"
    } ,
  
    {
      "title"    : "Cơ điện tử và kỹ thuật Robot",
      "category" : "",
      "tags"     : "итмо_факультет",
      "url"      : "/robotics",
      "date"     : "Nov 10, 2021",
      "content"  : "      Đinh Ngọc Tuấn / Facebook  Hế Lô mọi người, Mình là Tuấn (Đinh Ngọc Tuấn) hiện đang là sinh viên năm 2 chuyên ngành Cơ điện tử và kỹ thuật Robot (15.03.06) trường đại học ITMO.Trước khi chia sẻ một số kiến thức về chuyên ngành mình xin được tâm sự đôi chút về lý do tại sao mình lại chọn chuyên ngành Cơ điện tử và robot. Hồi còn bé mình rất thích xem cuộc thi Robocon Việt Nam chiếu trên sóng truyền hình kênh VTV2. Cuộc thi đó đã tạo cho mình niềm đam mê về robot. Lúc đó mình rất muốn sau này tạo ra được những con robot giống như mấy anh đi thi vậy.Nhưng mà đời không như là mơ, đã có một thời gian mình loay hoay tìm lối đi cho riêng mình. Sau nhiều lần thất bại, may mắn đến với mình khi mình được nhận học bổng du học tại nước Nga xinh đẹp này. Thấy chữ cơ điện tử và kỹ thuật robot là khoái rồi nên mình chọn luôn. Từ những nhận định trong quá trình học tập và tìm hiểu của bản thân về ngành học, mình xin được chia sẻ một số điều mình biết về ngành học của mình và những tư tưởng học tập mà mình đã đúc kết được trong suốt thời gian qua. Hy vọng sẽ giúp các bạn một cái nhìn rõ hơn về ngành học của mình và tiếp thêm  động lực học tập cho các bạn.Vậy thế nào là cơ điện tử và robot?Cơ điện tử là một quá trình cấu hình bao gồm sự kết hợp của Kỹ thuật cơ khí, Kỹ thuật điện, Kỹ thuật điều khiển và Kỹ thuật máy tính. Cơ điện tử là một điểm nối mà lĩnh vực kỹ thuật hợp tác. Người máy (Rô bốt)  có thể được coi là một tập hợp con của Cơ điện tử vì nó liên quan đến các lĩnh vực kỹ thuật cơ khí, điện tử và máy tính này. Sự khác biệt chính là đầu vào được “cung cấp” cho các hệ thống cơ điện tử trong khi các hệ thống robot tự “thu nhận” đầu vào.Bạn sẽ học cách xử lý một lượng lớn dữ liệu và tạo ra các hệ thống có ý nghĩa về dữ liệu trong thời gian thực để một cơ sở sản xuất hoàn toàn tự động có thể hoạt động một cách an toàn và hiệu quả hoặc một chiếc ô tô có thể lái hoàn toàn tự động. Các kỹ sư người máy và cơ điện tử đang có nhu cầu cao khi nhu cầu về các chuyên gia trong lĩnh vực này ngày càng tăng. Chúng cần thiết trong các ngành công nghiệp sản xuất và hàng không vũ trụ tiên tiến cũng như các nhà sản xuất robot và phân tích dữ liệu.Khi các máy móc tự động hóa và tự động hóa ngày càng trở nên quan trọng trong xã hội của chúng ta, người máy - và ngành mẹ của nó, cơ điện tử - trở nên quan trọng hơn bao giờ hết.Đối tượng nên quan tâm: Những ai yêu thích các loại thiết bị cơ khí, điện tử, máy tính, rô bốt, ô tô.Nếu bạn để ý thì trên trường tại Kronversky có máy bán cà phê tự động, đó là một sản phẩm những kỹ sư cơ điện tử và robot có thể làm ra. Sẽ tuyệt vời hơn nữa nếu bạn có thể ứng dụng AI và ML vào các sản phẩm này. Hãy tưởng tượng có một cỗ máy bán cà phê có thể nhận dạng khuôn mặt của bạn, giao tiếp với bạn bằng giọng nói và ghi nhớ những loại cafe bạn thích…vân vân và mây mây .      Sophia / WikipediaHoặc một ví dụ khác là người máy Sophia - được thiết kế và phát triển bởi công ty công nghệ Mỹ Hanson Robotics có trụ sở đặt tại Hồng Kông. Sophia được thiết kế để suy nghĩ và cử động sao cho giống với con người nhất đồng thời được trang bị trí tuệ thông minh nhân tạo. Mục đích chế tạo Sophia; theo nhà sản xuất; là nhằm phát minh ra một robot có ý thức, có sự sáng tạo và có khả năng hoạt động như bất kỳ con người nào để giúp đỡ chính con người trong các vấn đề cuộc sống thường ngày như: phục vụ chăm sóc sức khỏe, hỗ trợ điều trị y tế, giáo dục cùng nhiều các dịch vụ khác. Người máy sofia là bằng chứng cho sự phát triển về AI trong tương lai. Trong tương lai ứng dụng của robotics kết hợp với AI sẽ giúp giải quyết các vấn đề của nhân loại như chăm sóc y tế, giao thông hay các vấn đề trong kinh doanh như tăng năng suất.Vậy đơn vị chức năng của robotics là gì ?  Body Structure -  Hầu hết các  robot đều có cấu trúc cơ thể dựa trên mục đích sử dụng và chức năng của nó.  Muscle Systems - Các cơ cấu phổ biến như bánh răng, thiết bị truyền động khí nén, cơ nhân tạo và cơ đẩy.Sensory Systems - Hệ thống “sensory Systems” đơn giản sử dụng các thiết bị như máy dò chuyển động đơn giản, trong khi hệ thống “Sensory Systems” phức tạp sử dụng camera quang học cho phép robot không chỉ nhìn thấy môi trường xung quanh mà còn tương tác với môi trường dựa trên môi trường xung quanh.  Power Source - Hai hình thức cung cấp năng lượng điện phổ biến nhất cho rô bốt là ổ cắm điện nối đất cho rô bốt cố định hoặc bộ pin bên trong cho rô bốt di động.  Brain System - Hệ thống “não bộ” của robot có liên quan chặt chẽ và hoạt động cùng với hệ thống giác quan. Hệ thống não của robot cũng có thể rất đơn giản hoặc rất phức tạp, tùy thuộc vào chức năng của robot. Một hệ thống “não bộ” đơn giản sẽ gửi tín hiệu đến hệ thống cơ của rô-bốt yêu cầu nó dừng lại nếu hệ thống cảm giác được phát hiện được kích hoạt. Một hệ thống “não bộ” phức tạp sẽ cho phép một robot xác định các đối tượng trong môi trường xung quanh nó, dựa trên thông tin thu thập được bởi các hệ thống giác quan. Sau đó “hệ thống não bộ” sẽ gửi tín hiệu đến hệ thống cơ dựa trên thông tin đó, cho phép robot tương tác với các vật thể xung quanh nó.Học tập tại ITMO như thế nào?Để học tập hiệu quả các bạn nên chuẩn bị cho mình một nền tảng toán học, vật lý thật vững chắc. Ví dụ như năm đầu tiên trong môn giới thiệu chuyên ngành cần hiểu rất rõ về Đại số tuyến tính, các hàm toán học ứng dụng trong lập trình nhúng cho robot như hàm Lyapunov (Lyapunov functions), Cơ học Lagrange và kiến thức về Vật lý phần cơ học. Tìm hiểu về lập trình C/C++ để rèn luyện tư duy và hiểu về lập trình.  Tìm hiểu cách làm việc với Simulink hay Xcos trong Matlab, Scilab.Chúng ta sẽ được làm quen với các môn cơ bản liên quan đến chuyên ngành của mình.  Các môn liên quan đến lập trình như : Lập trình java, lập trình C. Môn VPD (Введение в профессиональную деятельность) nơi mà bạn sẽ được quen với lắp ráp và lập trình nhúng cho robot (cụ thể là Mindstorms EV3). Mình rất thích môn VPD và nó cũng là môn ngốn rất nhiều thời gian của mình khi học năm nhất đại học.  Ngoài ra bạn sẽ làm quen kiến thức cơ bản về AI (Artificial intelligence), ML(Machine Learning) qua các môn học Ứng dụng trí tuệ nhân tạo (прикладной искусственный интеллект) và môn Máy học (Машинное обучение) cùng một số môn đại cương khác.Từ năm 2021, Mã ngành 15.03.06(Cơ điện tử và kỹ thuật robot) chia làm 3 chuyên ngành nhỏ sau:  Мехатроника.  Интеллектуальная робототехника.  Интеллектуальная робототехника (проектная).Các bạn có thể tìm hiểu các môn học với từng chuyên ngành bằng file gắn với đường link này.Và mình xin trích một nhận xét của một sinh viên năm 2 cùng ngành mình tên là Georgy Khachatryan như sau:  “Робототехника, в отличие от других специальностей, очень прикладная. С первого курса мы начали собирать роботов, создавать из математические модели и программировать их (на парах ВПД). Этим все не ограничивается, в ИТМО нас знакомят с широким спектром разных общеобразовательных и специальных предметов. Это помогает нам преуспеть как в робототехника, так и в жизни в целом.’’ Tạm dịch :  Robotics, không giống như các chuyên ngành khác, được ứng dụng rất nhiều. Từ năm đầu tiên chúng tôi bắt đầu lắp ráp robot, tạo ra các mô hình toán học từ chúng và lập trình nhúng ( trên các tiết học môn VPD - Введение в профессиональную деятельность). Đó không phải là tất cả, ở ITMO chúng tôi được giới thiệu về nhiều loại giáo dục phổ thông và các môn học đặc biệt khác nhau. Nó giúp chúng tôi thành công trong cả lĩnh vực chế tạo máy và cuộc sống nói chung.Một số kỹ năng mềm quan trọngBên cạnh việc sở hữu nguồn tri thức dồi dào, hiểu biết về cuộc sống, có 4 kỹ năng mềm được đánh giá là vô cùng quan trọng để thành công trong công việc và cuộc sống  - hay còn được gọi tắt là kỹ năng 4C:  Kỹ năng giao tiếp (Communication) - Giao tiếp là hoạt động cơ bản của con người, nảy sinh từ nhu cầu trao đổi truyền đạt thông tin, cảm xúc, suy nghĩ của bản thân thông qua ngôn ngữ. Khi được bồi đắp kỹ năng giao tiếp tốt, các bạn sẽ biết cách lắng nghe và thấu hiểu, đồng thời có khả năng thể hiện các cảm xúc, suy nghĩ của bản thân một cách hiệu quả và tự tin.  Tư duy phản biện (Critical Thinking) : Tư duy phản biện hay tư duy phân tích là một quá trình gồm phân tích, đánh giá thông tin đã có nhằm làm sáng tỏ và khẳng định lại tính chính xác của vấn đề. Tư duy phản biện giúp các bạn có cái nhìn khái quát và khả năng đưa ra chính kiến về nhiều vấn đề, tạo ra những thay đổi tích cực trong suy nghĩ và hành động.  Tính sáng tạo (Creativity):  Mỗi con người luôn tiềm ẩn khả năng sáng tạo không giới hạn. Trong bối cảnh thế giới thay đổi nhanh chóng, kỹ năng sáng tạo được đánh giá là vô cũng cần thiết nhằm đem lại hướng giải quyết vấn đề linh hoạt và tối ưu.  Kỹ năng hợp tác (Collaboration): Để phát triển lâu dài, chúng ta cần làm việc cùng một tập thể và khi đó “Kỹ năng hợp tác” đóng vai trò thành hay bại. Đây cũng là kỹ năng quan trọng khi bạn tham gia vào thị trường lao động và là điều không thể thiếu để hòa nhập với mọi môi trường tổ chức - doanh nghiệp, giúp hoàn thành công việc hiệu quả.Ngoài ra còn có EQ - trí thông minh cảm xúc, kỹ năng tự tin thuyết trình trước đám đông,… Xây dựng cho mình một phong cách tự học phù hợp và hiệu quả với bản thân mình. Không ngừng tìm tòi khám phá cái mới có trọng tâm trọng điểm.Trên đây là một số chia sẻ của mình về mã ngành 15.03.06 - Cơ điện tử và kỹ thuật robot. Hy vọng phần nào đó giúp đỡ mọi người hiểu hơn về chuyên ngành này. Để từ đó xây dựng cho mình một phương pháp học tập đúng đắn và đạt hiệu quả cao. Sau này khi đã có góc nhìn tổng quan và chi tiết, nhiều kinh nghiệm học tập hơn nữa mình sẽ tiếp tục chia sẻ cho mọi người .  Cảm ơn mọi người đã đọc hết bài viết này ! Đừng quên góp ý dưới bình luận để bài viết của mình được đầy đủ và hoàn thiện hơn nhé &amp;lt;3 &amp;lt;3 &amp;lt;3 !Nguồn:Cơ điện tử Học gì và làm gì ? P1,2,3Cơ điện tử: Tự học để thành công (Self-study for your Own success) , 4C kỹ năng mềmАбитуриенту Мехатроника и робототехникаWhat are Mechatronics and Robotics?What do robotics and mechatronics engineers do?Method of Lyapunov FunctionsNgười máy sofiaTham khảo tài liệu của khoa và một số ý kiến của các bạn học người Nga.",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-10T04:48:45+03:00'>10 Nov 2021</time><a class='article__image' href='/robotics'> <img src='/images/itmo2.jpg' alt='Cơ điện tử và kỹ thuật Robot'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/robotics'>Cơ điện tử và kỹ thuật Robot</a> </h2><p class='article__excerpt'>Đinh Ngọc Tuấn</p></div></div></div>"
    } ,
  
    {
      "title"    : "What is Machine Learning (ML)?",
      "category" : "",
      "tags"     : "MachineLearning",
      "url"      : "/intro-to-machinelearning",
      "date"     : "Nov 9, 2021",
      "content"  : "What is Machine Learning (ML)?  “Machine learning algorithms find and apply patterns in data. And they pretty much run the world.” - MIT Technology Review.“Các thuật toán học máy tìm kiếm và áp dụng các mẫu trong dữ liệu. Và chúng điều hành thế giới (của chúng ta) khá nhiều”Chúng ta đã trải qua 3 cuộc cách mạng công nghiệp trong lịch sử và trong những năm gần đây, AI - Trí Tuệ Nhân Tạo, và cụ thể hơn là Machine Learning (ML - Học Máy) nổi lên như một trong những trụ cột chính của cuộc cách mạng công nghiệp lần thứ tư.Học Máy là hướng nghiên cứu tập trung vào việc tạo ra các hệ thống có khả năng học hỏi mà không cần phải lập trình một cách cụ thể. Học hỏi là một kỹ năng quan trọng nhất của một con người, vậy nếu chúng ta muốn tạo ra một hệ thống AI có trí tuệ như con người thì cần phải tạo ra các cỗ máy có khả năng học hỏi dựa trên các kinh nghiệm mà chúng thu thập được trong suốt quá trình hoạt động.Hiện nay Học Máy đã đạt được những thành công vang dội khiến nó trở thành một hướng nghiên cứu chính trong AI, được sử dụng trên toàn thế giới.Vậy sự phát triển của Máy học hiện nay như thế nào?Những dấu ấn đầu tiên của Học máy đến từ cách đây hơn 70 năm, 1950 – Alan Turing tạo ra phép thử Turing (Turing Test) để xác định xem một máy tính có trí thông minh thực sự hay không. Để vượt qua các phép thử, máy tính phải có khả năng đánh lừa một người tin rằng nó cũng là con người. Đến năm 1957 - Frank Rosenblatt thiết kế hệ thần kinh (neural network) đầu tiên cho máy tính mô phỏng các quá trình tư duy của não người. Học máy đạt thành công vang dội khi gần 25 năm trước, năm 1997, ứng dụng của AI đã đặt những bước đầu tiên khi hệ thống Deep Blue do IBM phát triển giành chiến thắng trước kiện tướng cờ vua thế giới khi đó Garry Kasparov. Đến năm 2011 – Google Brain được phát triển, và hệ thần kinh sâu (deep neural network) của nó có thể học để phát hiện và phân loại các đối tượng bằng với khả năng của một chú mèo. Cho đến năm 2014 – Facebook phát triển DeepFace - có thể nhận diện hoặc xác minh các cá nhân trong các bức ảnh ở mức độ ngang với con người.Một cột mốc đáng chú ý vào năm 2016 – Thuật toán AI của Google đã đánh bại một cầu thủ chuyên nghiệp trong trò cờ vây của Trung Quốc, vốn được coi là trò cờ phức tạp nhất thế giới và khó hơn cờ vua gấp nhiều lần. Cùng năm, AlphaGo do Google DeepMind phát triển đã giành chiến thắng bốn trên năm trận đấu Cờ vây với kỳ thủ số 1 thế giới.Ứng dụng của Máy họcAI đang len lỏi vào mọi lĩnh vực trong đời sống mà có thể chúng ta không nhận ra. Xe tự hành của Google và Tesla, hệ thống tự tag khuôn mặt trong ảnh của Facebook, trợ lý ảo Siri của Apple hay đơn giản chỉ là một hệ thống lọc email rác.… chỉ là một vài trong vô vàn những ứng dụng của AI/ML. ML là một phương tiện được kỳ vọng sẽ giúp con người đạt được mục tiêu là có được trí thông minh như con người. Và thực tế thì Học Máy đã mang nhân loại đi rất xa trên quãng đường chinh phục AI.Chinh phục AI mặc dù vẫn là mục đích cuối cùng của các phương pháp ML, nhưng hiện tại ML tập trung vào những mục tiêu ngắn hạn hơn như:  Làm cho máy tính có những khả năng nhận thức cơ bản của con người như nghe, nhìn, hiểu được ngôn ngữ, giải toán, lập trình, …  Hỗ trợ con người trong việc xử lý một khối lượng thông tin khổng lồ mà chúng ta phải đối mặt hàng ngày, hay còn gọi là Big Data.Nói đến ML là nói đến “dự đoán”: từ việc dự đoán nhãn phân loại đến dự đoán hành động cần thực hiện trong bước tiếp theo. Vậy machine learning có thể dự đoán tương lai hay không? Có thể có hoặc không: Machine learning có thể dự đoán được tương lai, nhưng chỉ khi tương lai có mối liên hệ mật thiết với hiện tại.Sự phát triển của AI/ ML và cơ hội tại Việt Nam.Trong bối cảnh phát triển và hội nhập quốc tế, cùng với sự phát triển mạnh mẽ của cuộc cách mạng công nghiệp lần thứ tư, Việt Nam xác định tập trung phát triển công nghệ AI - được dự báo sẽ trở thành ngành công nghệ đột phá nhất trong 10 năm tới.Từ năm 2014, Chính phủ đã xác định AI là công nghệ đột phá, mũi nhọn cần được triển khai nghiên cứu, được đưa vào danh mục công nghệ cao ưu tiên đầu tư phát triển. Gần đây rất nhiều hội thảo, hội nghị khoa học đã được tổ chức dưới sự chủ trì của Chính phủ, với sự tham gia của các tổ chức, chuyên gia trong nước và quốc tế. Qua đó, Lãnh đạo Chính phủ đã đưa ra quan điểm về việc đẩy mạnh triển khai AI và cần thúc đẩy phát triển mạnh mẽ hơn nữa …Bên cạnh những nỗ lực của Nhà nước, AI đã và đang được các tập đoàn, công ty như FPT, Viettel, Vin Big Data… nghiên cứu ứng dụng mạnh mẽ trong nhiều lĩnh vực (y tế, giáo dục, thương mại điện tử…). Năm 2019, Trường Đại học Bách khoa Hà Nội thành lập và tuyển sinh trình độ đại học ngành AI (với số điểm trên 27 điểm) để đảm bảo nguồn nhân lực AI được đào tạo chất lượng với mục tiêu trở thành đơn vị dẫn đầu trong việc đào tạo chuyên gia về AI tại Việt Nam.Có thể thấy, Việt Nam không đứng ngoài cuộc đua của thế giới. Cơ hội cho những ML Engineer là rất rộng mở, không chỉ ở Việt Nam mà còn là bất cứ nơi đâu trên thế giới.Bài viết vừa đề cập tới Máy học là gì, sự phát triển của nó cùng sự ảnh hưởng của nó tới cuộc sống của con người hiện nay như thế nào.  Những bước tiếp theo của Machine Learning là gì? Khó khăn nào xuất hiện khi ML xuất hiện? Cần hay không mối quan tâm về Đạo đức AI? Tất cả sẽ được tiếp tục gửi tới các khác giả của ITMO Brain trong những câu chuyện tiếp theo.ltm from ITMO Brain :))Bạn đọc có thể xem thêm tạiWhat is AI? We drew you a flowchart to work it out | MIT Technology ReviewWhat is machine learning? của MIT Technology ReviewAlphaGo - WikipediaJarvis - trợ lý thông minh cho căn nhà của Mark Zuckerberg",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-09T04:48:45+03:00'>09 Nov 2021</time><a class='article__image' href='/intro-to-machinelearning'> <img src='/images/machinelearning.png' alt='What is Machine Learning (ML)?'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/intro-to-machinelearning'>What is Machine Learning (ML)?</a> </h2><p class='article__excerpt'>Lê Trọng Minh</p></div></div></div>"
    } ,
  
    {
      "title"    : "Công nghệ thông tin và các hệ thống liên lạc",
      "category" : "",
      "tags"     : "итмо_факультет",
      "url"      : "/itmo-ikt",
      "date"     : "Nov 5, 2021",
      "content"  : "Lại một mùa tuyển sinh sắp đến, hẳn rất nhiều bạn học sinh, sinh viên đang băn khoăn, lo lắng về ngành học sắp tới của mình. Để giúp các bạn có những thông tin chính xác, cụ thể về mã ngành 11.03.02 Công nghệ thông tin và các hệ thống liên lạc, cũng như khoa IKT tại Trường Đại học tổng hợp ITMO thì chúng mình có chia sẻ dưới đây những thông tin bổ ích về ngành học. Hãy theo mình để nắm rõ hơn nhé, và mình là Lê Đình Vũ thạc sỹ năm 1, chuyên ngành CNTT và các hệ thống liên lạc trường Đại học ITMO.À trước tiên thì dưới này là tên Mega khoa và tên khoa của chúng mình các bạn nhé, nếu có dự định theo học nhất định hãy ghi nhớ thật kỹ ạ vì biết đâu một ngày các em khóa dưới sẽ hỏi các bạn đấy.1. GIỚI THIỆU CHUNGTrong một thế giới ngày càng gắn kết với nhau, sự tương tác giữa các thiết bị, hệ thống và con người tăng lên đáng kể. Công nghệ thông tin và các hệ thống liên lạc ngày càng khẳng định vai trò của mình ở nhiều phương diện khác nhau trong nhiều lĩnh vực của đời sống.Học tập và nghiên cứu theo hướng ngành Công nghệ thông tin và các hệ thống liên lạc ở ITMO giúp sinh viên có được kiến​​thức lý thuyết và kỹ năng thực hành trong việc thiết kế và phát triển phần mềm cho các hệ thống thông tin liên lạc, đồng thời nắm vững các phương pháp phát triển mô hình hệ thống phức tạp để xử lý dữ liệu thử nghiệm, cũng như có được kỹ năng tạo hệ thống lưu trữ và xử lý dữ liệu.Sinh viên theo học tại khoa IKT chủ yếu học các lý thuyết về nguyên tắc cấu tạo và phương pháp thiết kế của hệ thống truyền thông và mạng truyền thông, được đào tạo các kỹ năng cơ bản về lập trình cũng như xử lý dữ liệu, được tham gia vào thiết kế, phát triển, vận hành và các ứng dụng kỹ thuật của truyền thông hiện đại, hệ thống thông tin và mạng.2. CHUYÊN NGÀNH VÀ NHỮNG TRIỂN VỌNG KHI RA TRƯỜNG2.1. Chương trình đào tạoĐại học ITMO hiện tại có 2 bậc đào tạo cho chuyên ngành Công nghệ thông tin và các hệ thống liên lạc, mã ngành 11.03.02 cho đào tạo cử nhân (hệ 4 năm) và mã ngành 11.04.02 cho thạc sỹ (2 năm). Nhìn chung với mỗi bậc đào tạo trường đều có những chương trình học tập thú vị và bổ ích, tạo môi trường nghiên cứu thuận lợi cho sinh viên. Bạn sẽ được đi học với bạn Nga và các bạn đến từ các quốc gia khác, được hỗ trợ tận tình của giáo viên nên các bạn đừng quá lo lắng.Hiện tại có 6 sinh viên và 4 thạc sỹ đang theo học ngành này và hi vọng sẽ tăng lên trong những năm tiếp theo.Sau khi kết thúc học kì 1 năm 2, sinh viên sẽ được chọn 1 trong 3 chuyên ngành sau: (việc chọn ngành nhỏ này bắt đầu từ năm 2020 nên thực tế mà nói thì mọi người trong khoa cũng không có nhiều kinh nghiệm, nhưng yên tâm mọi người sẽ giúp đỡ các bạn tận tình).  Chuyên ngành 1: Lập trình ứng dụng trong hệ thống thông tin liên lạc          Trong quá trình đào tạo về chuyên ngành, sinh viên có được các kỹ năng lý thuyết và thực hành về thiết kế, phát triển, thử nghiệm và hỗ trợ phần mềm hệ thống thông tin liên lạc, học cách viết code hiệu quả bằng các ngôn ngữ lập trình: Python, Java, C #, C ++, PHP, JavaScript , v.v … Nghiên cứu các phương pháp tiếp cận hiện đại để thiết kế và phát triển cơ sở dữ liệu bằng cách sử dụng các ví dụ về DBMS: Microsoft SQL Server, MySQL, Oracle, v.v., cũng như giới thiệu các công nghệ lập trình hiện đại.        Chuyên ngành 2: Công nghệ mạng và đám mây:          Trong chuyên ngành này, sinh viên có được kiến thức lý thuyết và thực hành trong việc phát triển, triển khai và bảo trì cả cơ sở hạ tầng đám mây nói chung và các dịch vụ đám mây nói riêng (dựa trên các ngôn ngữ lập trình phổ biến: C, C ++, C #, PHP, Java, Python, JavaScript và các công nghệ máy chủ JavaEE, .NET) và trong việc phát triển các ứng dụng web sử dụng các khuôn khổ (Node.js. React, Vue) tương tác với DBMS và các hệ thống khác.        Chuyên ngành 3: Công nghệ không dây          Trong chuyên ngành này, sinh viên có được kiến thức lý thuyết và thực tế trong lĩnh vực truyền thông tin vô tuyến và truyền dữ liệu, xây dựng và thiết kế các loại hệ thống thông tin liên lạc không dây chính: vệ tinh, chuyển tiếp vô tuyến, thông tin liên lạc vô tuyến di động chuyên nghiệp, thông tin liên lạc di động, hệ thống giao thông thông minh và Internet vạn vật (là một mạng lưới tất cả thiết bị thông minh được kết nối với nhau và được điều khiển bởi một thiết bị chính (bộ não)).      2.2. Những yêu cầu cơ bản khi ra trườngSinh viên tốt nghiệp cần có được những kiến thức và khả năng sau:  Nắm vững những lý thuyết cơ bản trong lĩnh vực truyền thông;  Có những hiểu biết về công nghệ truyền thông như sóng ánh sáng, không dây và đa phương tiện;  Nắm vững các phương pháp phân tích và thiết kế hệ thống thông tin liên lạc và mạng lưới truyền thông;  Có khả năng cơ bản về thiết kế, phát triển, vận hành và ứng dụng các hệ thống thông tin liên lạc và mạng lưới truyền thông.2.3. Triển vọng nghề nghiệpXu hướng việc làmSinh viên tốt nghiệp có thể tham gia nghiên cứu, thiết kế, chế tạo, vận hành và vận hành trong lĩnh vực truyền thông, cũng như phát triển và ứng dụng công nghệ truyền thông và bảo trì thiết bị trong các lĩnh vực khác nhau của nền kinh tế quốc dân và công nghiệp quốc phòng. Bạn cũng có thể chọn tiếp tục nghiên cứu về hệ thống thông tin và truyền thông, xử lý tín hiệu và thông tin, ứng dụng máy tính, khoa học và công nghệ thông tin điện tử.Triển vọng việc làmSinh viên tốt nghiệp chuyên ngành này có triển vọng việc làm tốt, sau khi tốt nghiệp, hầu hết sinh viên đều tham gia nghiên cứu, thiết kế, phát triển ứng dụng, phân tích, chế tạo, vận hành và quản lý các hệ thống và thiết bị liên lạc trong lĩnh vực truyền thông, điện tử, công nghệ thông tin, v.v.3. HỌC TẬP, NGHIÊN CỨU TẠI ITMONhững điều mình chia sẻ phía trên chắc hẳn sẽ có bạn nào đó đã vô tình lướt qua và đọc được trên mạng Internet. Vậy nên từ giờ phút này chúng ta bắt đầu vào nội dung chính nhé: Học tập và nghiên cứu theo hướng ngành 11.03.02 Công nghệ thông tin và các hệ thống liên lạc như thế nào tại trường Đại học ITMO?3.1.   	Chuẩn bị kiến thứcĐể chuẩn bị tốt nhất cho 4 năm học tại trường các bạn nên có một hành trang thật tốt và tâm lý vững vàng. Năm dự bị sẽ là bước đà để các bạn hoàn thành tốt những năm học tiếp theo. Và nhìn chung để học tập tốt ở nước Nga, và đặc biệt là những bạn theo ngành của chúng mình thì cần có những kiến thức cơ bản sau:  Tiếng Nga: Bạn phải đọc viết thành thạo sử dụng ổn trong giao tiếp và học tập, nếu có cả tiếng Anh nữa thì càng tốt nhưng đầu tiên phải là tiếng Nga các bạn nhé. Giáo viên rất yêu quý những người nói tốt tiếng Nga. Thầy cô cần hiểu những điều bạn nói trước rồi mới xem xét đến kết quả công việc của bạn phải không nào.  Kiến thức chung về lập trình các loại ngôn ngữ (không cần giỏi nhưng nên biết) vì bước vào năm 1 là bạn sẽ có ngay môn C, C++ và Python))  Nắm chắc các kiến thức về vật lý, đặc biệt phần điện сác bạn ạ. Bước vào năm và năm 2 chúng ta sẽ có 3 học kỳ Lý đại cương và nhiều nhiều môn liên quan đến Vậy lý:v  Và cuối cùng là một tâm thế thoải mái, yêu thích môn học và ngành học. Nếu như bạn thật sự mong muốn có điều gì thì vũ trụ sẽ giúp bạn có được nó. 😋😋😋3.2.   	Chương trình học tậpChúng ta sẽ trải qua 4 năm học với 8 học kỳ tại ITMO. Học kỳ 1 bắt đầu từ 01.09 và kết thúc vào khoảng cuối tháng 1. Học kỳ 2 bắt đầu ngay sau đó, sau kỳ nghỉ 1 tuần, từ ngày 05.02 đến cuối tháng 6. Về cơ bản mỗi học kỳ sẽ có 2 module, tương ứng với 2 tháng. Kết thúc mỗi module cũng là thời điểm sinh viên đến hạn trả lab, bài tập về nhà cũng như làm test trên CDO và test trên lớp.Hình thức học tập:Mỗi môn học sẽ có những hình thức học tập khác nhau, trong đó chủ yếu sẽ có leksi, prak và lab. Giáo viên sẽ giảng bài vào các tiết leksi, hướng dẫn làm bài tập vào tiết prak và nhận trả bài vào các tiết lab. Tuy nhiên có một số môn như môn Toán, Vật lý hay môn Sử thì chúng ta chỉ có leksi và prak, vậy nên tiết trả bài sẽ là tiết prak các bạn nhé.Ngoài ra chúng ta sẽ có thêm các bài tập lớn và các nhiệm vụ khác mà giáo viên giao cho, tùy từng môn học mà các bạn nên cân nhắc và phân bố thời gian hợp lý.Cuối mỗi module sẽ có các bài test trên lớp và test CDO. Phòng CDO là nơi test tập trung cho tất cả các sinh viên (ở địa chỉ Kronverskiy 49 – trụ sở chính của trường, phòng 101). Các bạn đăng ký trước lịch test trên hệ thống de.ifmo.ru và đến test theo lịch.Cách thức tính điểm:Các bạn sẽ có 3 dạng chính là môn thi, môn zachot và môn zachot tính điểm.Cả 3 dạng môn học này đều có hệ số điểm 100. Các bạn sẽ cần tối thiểu 60 điểm để qua môn và đạt được điểm 3 (hoàn thành môn học). Với môn thi và môn zachot tính điểm thì các bạn được đánh giá điểm 3,4 và 5. Có thêm 2 mốc điểm mà các bạn cần chú ý:  Điểm 4: cho các bạn đạt được từ 74.1 đến 90 điểm  Điểm 5: cho các bạn đạt từ 90.1 điểm trở lên.Và để có học bổng của Nga cũng như phấn đấu đạt bằng đỏ thì các bạn sẽ không được phép có điểm 3 đâu nhé.Toàn bộ điểm thành phần được quản lý qua ISU và CDO. Đường dẫn về các trang này mình sẽ để ngay dưới đây để các bạn có thể dễ dàng học tập và theo dõi nhé:  https://isu.ifmo.ru/  https://de.ifmo.ru/Thi cuối kỳ và trả zachotChúng ta sẽ có thi cuối kỳ 1 vào tháng 1 và cuối kỳ 2 vào tháng 6. Giữa các môn thi sẽ có thời gian nghỉ từ 3-4 ngày. Điểm số các bạn nhận được phụ thuộc rất lớn vào ngày bạn trả thi vì giáo là người quyết định cuối cùng điểm số của bạn. Thường thì trả hết lab và các bài tập trước ngày thi bạn sẽ có khoảng 70 điểm (trong đó có 10 điểm chuyên cần nhé) và vào ngày thi bạn sẽ nhận được tối đa 20 điểm. Hình thức thi cũng khá phong phú: bốc thăm câu hỏi và chuẩn bị rồi trả lời, trả lời trực tiếp hoặc làm một bài test 20 câu. Đừng sợ khi lần đầu ngồi trực tiếp nói chuyện với giáo nhé vì bạn sẽ phải làm quen và thực hành nhiều lần đấy.Như mình nói ở phía trên để có điểm xuất sắc (điểm 5) bạn cần đạt ít nhất 90.1 điểm. Vậy nên hãy đi học thật chuyên cần và trả bài đúng hạn nhé, giáo sẽ trừ điểm nếu bạn nộp muộn đó.3.3.   	Review về thầy cô và các môn họcVới hai năm đầu các bạn sẽ chủ yếu học về đại cương, các bạn sẽ có những môn học bắt buộc như Toán, Vật lý, Tin học, Tiếng Nga, Lịch sử, Kinh tế, Triết, các môn nhập môn chuyên ngành, một vài môn zatrot học về Logic, Phần cứng và phần mềm, Thiết kế Autocad, Sinh thái học, Văn hóa… Chương trình mới bổ sung 2018 sẽ có thêm các môn học về Kỹ năng sống, Công nghệ sáng tạo trên nền tảng học trực tuyến OpenEdu và Eduado.Vào những năm tiếp theo các bạn sẽ học sâu về hệ thống thông tin, mô hình và các hệ thống thông tin cũng như phương pháp xây dựng và quản lý chúng, cơ sở dữ liệu (Access, Microsoft SQL Server, MySQL) và các môn học lập trình (C#, Java, Python), học về quản trị mạng và mô hình thông tin. Chúng ta cũng sẽ được học cách xây dựng web cơ bản sử dụng HTML và CSS3, PHP với cơ sở dữ liệu MySQL).Nhìn chung các môn học ở mức tương đối, không quá khó nhưng không quá dễ, nắm vững những kiến thức về lập trình thì việc qua môn là rất đơn giản. Giáo viên cũng khá dễ tính, chỉ cần hoàn thành đúng hạn, tiếng Nga ổn (một số giáo vẫn cho trả bằng tiếng Anh). Thường thì các thầy cô sẽ tạo điều kiện tốt nhất cho sinh viên để sinh viên hoàn thành môn học. Vậy nên các bạn hãy xác định ngay từ đầu mục tiêu cho mình để có một kết quả học tập tốt nhất nhé.Các bạn nên học theo nhóm 4-5 người và chủ động làm quen cũng như giúp đỡ các bạn Nga để cũng nhận được sự giúp đỡ của các bạn. Vấn đề giao tiếp luôn là khó khăn lớn nhất khi chúng ta học tập tại Nga vậy nên nếu có sự giúp đỡ của các bạn Nga thì mình tin là sẽ dễ dàng hơn rất nhiều trong việc học. Mình lấy ví dụ với các môn zatrot thường có các bài kiểm tra ngắn 10, 15 phút làm ngay tại lớp. Có thể với ngần nấy thời gian chúng ta chưa kịp đọc xong đề nhưng với các bạn Nga đó lại là những kiến thức cực kì cơ bản. Và các bạn biết là mình định nói gì tiếp rồi đấy…Dưới đây là một số môn học mình đã từng học:  Hệ thống thông tin liên lạc:          Основы сетевых технологий (Các nguyên lý cơ bản của công nghệ mạng).      Основы схемотехники телекоммуникационных устройств (Các nguyên lý cơ bản về mạch của các thiết bị viễn thông).      Основы радиотехники и мобильная связь (Các nguyên lý cơ bản về kỹ thuật vô tuyến và truyền thông di động).      Администрирование в инфокоммуникационных системах (Quản trị hệ thống thông tin liên lạc).      Архитектура сетевых инфокоммуникационных систем (Cấu trúc hệ thống thông tin liên lạc).      Методы моделирования информационных процессов и систем (Phương pháp mô hình hóa hệ thống thông tin).      Цифровая обработка сигналов (Xử lý tín hiệu kỹ thuật số).        Lập trình và ứng dụng.          Прикладное программирование (Lập trình ứng dụng).      Разработка баз данных (Phát triển cơ sở dữ liệu).      Создание клиент-серверных приложений (Xây dựng ứng dụng khách – chủ).      Создание программного обеспечения инфокоммуникационных систем (Xây dựng phần mềm cho hệ thông tin liên lạc).      Разработка переносимых приложений (Phát triển các ứng dụng di động).        Công nghệ truyền thông.          Технологии IP-телефонии (Công nghệ IP điện thoại).      Облачные технологии и услуги (Công nghệ và dịch vụ đám mây).      Мультимедийные технологии (Công nghệ truyền thông đa phương tiện).      Электроника и микропроцессорная техника (Điện tử và công nghệ vi xử lý).      Đọc đến phần này chắc bạn đã hiểu được phần nào đó những gì chúng ta sẽ học phải không nào, hi vọng những điều mình chia sẻ tiếp theo đây sẽ giúp đỡ các bạn trong việc trả bài và hoàn thành môn học đúng hạn. Đừng bỏ lỡ nhé!!4.	NHỮNG CHIA SẺ BÊN LỀTìm kiếm tài liệu học tậpCũng giống như với việc viết một bài báo khoa học cần có những tài liệu tham khảo thì việc học tập của bạn cũng vậy. Tài nguyên ở đây mình nói tới trước hết là những tài liệu có sẵn trên Google và Yandex. Bạn rất cần trau dồi kỹ năng tìm kiếm đấy ạ. Hay tìm theo từ khóa, sắp xếp các từ khóa quan trọng lên phía trước. Với những câu hỏi lý thuyết cho các môn zatrot phải kể đến như Logic hay Kinh tế thì nên ưu tiên Yandex thay vì Google. Còn đối với những bài tập liên quan đến lập trình và công nghệ thì hãy ưu tiên tìm kiếm bằng tiếng Anh trên Google các bạn nhé. Tuy nhiên các bạn cũng không quá lo lắng vì tài liệu tiếng Việt cũng có khá nhiều và dễ hiểu.Ngoài ra các bạn có thể tận dụng thư viện sách giấy và phòng máy tính miễn phí tại trường, tại cả 2 địa điểm là Kronverskiy 49 và Lomonosova 9 đều có sẵn.Học hỏi từ bạn Nga và các anh chị khóa trênHãy hỏi để biết, nếu điều gì đó bạn không chắc chắn hoặc không biết, hãy mạnh dạn đặt câu hỏi. Mọi người sẽ cố gắng giúp đỡ bạn.Vào các tiết học prak và lab thì giáo viên thường sẽ chia các bạn theo các nhóm, nhất là những lúc làm dự án nhỏ. Chính vì vậy hãy tích cực giao lưu và học hỏi từ các bạn Nga, kết bạn và đi chơi cùng nhau cũng là cách tăng khả năng giao tiếp và thiện cảm của các bạn Nga dành cho chúng ta.Ngoài ra các anh chị khóa trên cũng là nơi các bạn có thể đặt câu hỏi. Các anh chị luôn sẵn sàng giúp đỡ trong khả năng vậy nên đừng bao giờ ngần ngại nhé.Và cứu cánh cuối cùng của bạn chính là giáo viên.Hãy chờ thầy cô hết tiết và đến đặt câu hỏi trực tiếp cho thầy cô nhé. Nhớ tạo thiện cảm thật tốt để thầy cô thoải mái và có ấn tượng tốt về bạn nhé.Những lưu ý khi nộp bài và trả labVới mình điều quan trọng nhất mà mình muốn nhắn nhủ với các bạn đó chính là trả bài đúng hạn. Đừng để nước đến chân mới nhảy và đợi đến lúc gần hết hạn mới đi nộp. Vì bạn chưa biết đâu các bạn Nga cũng sẽ chờ gần cuối kì mới nộp. Và khi đó sẽ có những hàng dài chờ trả lab và combo 8 9h tối cùng thời tiết âm 10 độ C. Việc trả bài sớm đúng hạn cũng thể hiện ý thức học tập của bạn, là một trong những tiêu chí quan trọng để giáo quyết định điểm số của bạn.Việc test CDO cũng vậy, bạn sẽ có 3 lần test cho mỗi bài. Nếu chưa thật sự tự tin thì hãy test trước các bài tập ở nhà, tìm kiếm tài liệu test thực tế và hỏi các bạn đã từng test. Với số điểm dưới 60% bạn sẽ phải test lại và đương nhiên CDO cũng có hạn test, không ngoại lệ. Nếu test sau hạn thì rất có thể bạn sẽ bị trừ điểm nhé.Với lab thì bạn sẽ phải bảo vệ lab trực tiếp với giáo viên nếu được yêu cầu. Câu hỏi sẽ liên quan đến nội dung của bạn làm nên chuẩn bị thật kỹ nhé.Trả thi và nợ mônNếu trước kỳ thi bạn đã kiếm được cho mình hơn 60 điểm thì có thể yên tâm phần nào rồi đó vì với số điểm này môn zachot đã xong và môn thi thì cũng đã đủ điều kiện được 3. Với những bạn có yêu cầu cao hơn và thiếu điểm (ví dụ để được 5 bạn cần 90 điểm nhưng trước khi thi mới có 69 điểm=)) kể cả 20 điểm thi cũng không đủ) thì các bạn rất cần xin làm lại test hoặc xin thêm bài tập. Bạn có thể gửi mail cho giáo, gửi tin nhắn qua isu hoặc tốt nhất là đến tận nơi để xin bài nhé.Ở nhóm chung VK của nhóm bạn lớp trưởng sẽ thường xuyên gửi các đường link cũng như file liên quan đến học tập. Vào thời điểm cuối kỳ giáo sẽ cho bộ câu hỏi ôn tập, hãy để ý là chuẩn bị câu hỏi cùng các bạn trong lớp để có một kỳ thi thật tốt nhé.Với các bạn thiếu may mắn chưa đủ điểm qua môn thì hãy nhanh chóng đến gặp trực tiếp giáo để xin thi lại trong thời gian học, tránh để vào kỳ nghỉ bạn sẽ phải trả lại vào học kỳ tới gây ảnh hưởng đến các môn học khác.Trên đây là những chia sẻ của mình và các anh chị đã và đang theo học khoa IKT, ngành Công nghệ thông tin và các hệ thống liên lạc. Chúng mình rất mong nhận được phản hồi của các bạn và luôn chào đón bạn đến học tập và nghiên cứu tại trường Đại học ITMO.  Chúc các bạn học tập tốt và dồi dào sức khỏe!",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-05T04:48:45+03:00'>05 Nov 2021</time><a class='article__image' href='/itmo-ikt'> <img src='/images/itmo2.jpg' alt='Công nghệ thông tin và các hệ thống liên lạc'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/itmo-ikt'>Công nghệ thông tin và các hệ thống liên lạc</a> </h2><p class='article__excerpt'>Lê Đình Vũ</p></div></div></div>"
    } ,
  
    {
      "title"    : "Khoa an toàn thông tin",
      "category" : "",
      "tags"     : "итмо_факультет",
      "url"      : "/itmo-bit",
      "date"     : "Nov 3, 2021",
      "content"  : "1. Giới thiệuXin chào mọi người, mình tên là Đỗ Bảo Hoàng hiện đang là sinh viên thạc sĩ năm 1 chuyên ngành an toàn thông tin (10.04.01) trường đại học ITMO, đã tốt nghiệp chuyên ngành an toàn thông tin (10.03.01) năm 2021. Trong suốt 5 năm ngụp lặn với việc học tập tại ITMO, mình nhận được khá nhiều câu hỏi của các bạn khóa dưới, trong đó câu hỏi thường gặp nhất là: ngành mình học gì vậy anh? :v :v :vNhớ lại sau 1-2 năm học đầu mình cũng không hề có được cái nhìn khái quát về ngành học của chính mình. Lúc đó mình cảm thấy rất bối rối và mông lung không hiểu mình đang học gì và vai trò của các môn học trên trường. Kéo theo đó là bao khó khăn, áp lực và cả chán nản suốt những năm học đại học.Sau khi đã tốt nghiệp cử nhân và có cái nhìn đầy đủ hơn về ngành học này, mình thực sự muốn tóm tắt lại và chia sẻ những điều mình biết để giúp các bạn có được cái nhìn khái quát và hiểu hơn về an toàn thông tin, hy vọng những thông tin này sẽ giúp các bạn giảm bớt phần nào những khó khăn mà mình đã gặp phải trong quá trình học tập trước đó.2. An toàn thông tin là gì?The Confidentiality, Integrity, Availability (CIA) triad.An toàn thông tin (hay InfoSec) là việc bảo vệ bất kì thông tin nào trước các mối nguy hại. An toàn thông tin tập trung vào 3 mục tiêu chính cần bảo vệ thường được gọi là tam giác CIA:  Tính bí mật (Confidentiality): thông tin chỉ được cung cấp hoặc tiết lộ cho những người được cho phép. Ví dụ: bằng cách nào đó, một người khác không có sự cho phép của bạn nhìn thấy mật khẩu tài khoản Facebook hoặc Google. Trong trường hợp đó, mật khẩu của bạn đã bị xâm phạm và tính bí mật bị vi phạm.  Tính toàn vẹn (Integrity): thông tin trong toàn bộ vòng đời của nó được duy trì và đảm bảo chính xác, đầy đủ, không bị thay đổi trái phép. Ví dụ: trong hệ thống kiểm soát không lưu, trạng thái của mỗi chuyến bay phải được cập nhật liên tục và chính xác. Nếu hacker xâm nhập và thay đổi thông tin sẽ dẫn đến những thiệt hại rất lớn.  Tính khả dụng (Availability): thông tin có thể truy cập bất cứ khi nào cần. Ví dụ: trong cuộc tấn công từ chối dịch vụ (DDoS), không thể truy cập dữ liệu của server và Tính khả dụng bị vi phạm.Mục tiêu là vậy thế còn làm sao để đạt được? Hay đúng hơn làm an toàn thông tin là làm gì? Để trả lời được câu hỏi này rất khó vì bất cứ hành động nào giúp đạt được 1 trong 3 mục tiêu nêu trên đều là làm an toàn thông tin. Ngành InfoSec rất rộng và có thể chia làm 4 lĩnh vực nhỏ:  Tổ chức và pháp lý (organisational and legal): nghiên cứu các phương pháp tổ chức thông tin và xây dựng bộ pháp lý phục vụ mục đích bảo mật thông tin  Phần mềm và phần cứng (software and hardware): nghiên cứu, xây dựng các phần mềm (phần mềm diệt virus, phần mềm dò tìm lỗ hổng,…) và phần cứng (camera, máy dò sóng, chặn sóng,…) hoặc bộ công cụ gồm phần mềm-phần cứng kết hợp (máy kiểm tra sinh trắc học, thẻ propusk,…)  Công nghệ và kỹ thuật (engineering and technical): nghiên cứu, xây dựng các công nghệ, kỹ thuật phục vụ mục đích bảo mật thông tin (kỹ thuật tấn công, phòng thủ, dịch ngược, điều tra số,…)  Mật mã (cryptographic): nghiên cứu sự an toàn những loại mật mã hiện tại, xây dựng các thuật toán mật mã mới (Caesar, DES, SHA,… )Tuy vậy khi đi làm thực tế công việc thường sẽ kết hợp sử dụng kiến thức, kỹ năng từ tất cả các lĩnh vực trên chứ không đơn thuần sử dụng một lĩnh vực nào cả. Nếu phân loại theo các ngành áp dụng sẽ có rất nhiều ngành. Trong đó có 4 ngành chính và lớn nhất:  An toàn sản phẩm (product security): làm việc với các đội phát triển sản phẩm để đảm bảo sản phẩm làm ra an toàn cho người dùng và an toàn cho hệ thống của công ty (kiểm định mã nguồn, đào tạo nâng cao nhận thức của nhân viên, phát triển các giải pháp ngăn chặn kỹ thuật tấn công,…)  An toàn vận hành (operations security): đảm bảo sự an toàn cho toàn bộ hệ thống thông tin của doanh nghiệp (đưa ra chính sách, quy định, giám sát an ninh mạng, xử lí sự cố,…)  Phát triển công cụ (applied security): phát triển và cung cấp các công cụ, dịch vụ và thư viện phần mềm có liên quan đến an toàn thông tin cho các nhóm phát triển sản phẩm sử dụng lại.  Tìm diệt mã độc và các nguy cơ khác (threat analysis): phân tích, truy tìm nguồn gốc và tiêu diệt tận gốc mã độc và các tấn công có chủ đích (targeted attack).Chi tiết hơn các bạn có thể tham khảo các đường dẫn mình cung cấp thêm ở cuối bài viết.3. Ngành an toàn thông tin ở ITMOChắc đọc đến đây bạn đã hiểu ngành an toàn thông tin rộng đến thế nào. Quay lại với chủ đề nhận được nhiều sự quan tâm nhất của các bạn sinh viên mới: học an toàn thông tin ở ITMO sẽ được học những gì?Những kỳ đầu ngoài các môn đại cương toán, lý sẽ có thêm những môn cơ bản về lập trình, lý thuyết thông tin, xác suất, an toàn thông tin giúp bạn có kiến thức nền tảng để học chuyên ngành. Có thể liệt kê những môn hay gặp như: Безопасность жизнедеятельности (học về cách lắp đặt an toàn các thiết bị điện trong cuộc sống) hay Программирование (kỹ thuật lập trình), методология защиты информации (các phương pháp bảo mật thông tin). Những năm đầu nên học kĩ các môn cơ bản, nền tảng này, thì lúc học lên năm cao sẽ ko bị đuối. Ngoài ra trên trường dạy khá ít lập trình nên tốt nhất là tự học, và tham gia CLB vs tụi mình.Từ năm 3 trở đi sẽ là những môn chuyên ngành trải dài từ khắp các nhánh của an toàn thông tin. Dưới đây là một số ví dụ các môn học mà mình đã từng học:  Tổ chức và pháp lý: môn Защищенный документооборот (quy trình xử lý tài liệu sao cho an toàn), Проектирование комплексных систем защиты информации (thiết kế hệ thống an toàn thông tin),…  Phần mềm và phần cứng: môn Программно-аппаратные средства защиты информации (hệ thống phần cứng-phần mềm giúp bảo mật thông tin), Инженерно-технические средства защиты информации (phương tiện kỹ thuật và biện pháp giúp bảo mật thông tin),…  Công nghệ và kỹ thuật: Технологии обнаружения уязвимостей в автоматизированных системах (các kỹ thuật phát hiện lỗ hổng trong hệ thống tự động), Технология сертификации средств защиты информации (học về các kỹ thuật tạo, quản lý chứng chỉ số),…  Mật mã: Криптографические методы обеспечения информационной безопасности (áp dụng các phương pháp mật mã để bảo mật), Методы криптографии (các phương pháp về mật mã),…Tuy nhiên trên con đường hội nhập và để leo lên xếp hạng 6 toàn nga (Forbes University Ranking), chương trình học hiện nay đã có nhiều thay đổi. Hiện nay ngành an toàn thông tin ở ITMO gồm 4 ngành nhỏ:  Комплексная защита объектов информатизации: ngành học chung, học mỗi thứ 1 ít.  Проектирование средств защиты информации: tập trung vào tổ chức và quản lý hệ thống bảo mật.  Эксплуатация беспилотных транспортных средств: thiết kế, thử nghiệm, xây dựng hệ thống giám sát không người lái.  Системы надежной передачи информации: bảo mật trong hệ thống truyền thông, học nhiều hơn về sóng và các thuật toán mã hóa.Dù là ngành nào thì bạn vẫn phải học đủ các môn đại cương và lý thuyết cơ bản về an toàn thông tin. Đó đều là các môn học hay và hữu ích nhưng đôi khi sẽ khá hàn lâm và thiếu hứng thú. :P Hãy cùng tìm hiểu làm sao để học tập một cách hiệu quả theo kinh nghiệm của mình nhé!4. Học như thế nào?Thông thường 1 kỳ học tại ITMO sẽ có 2 module, 1 bài kiểm tra giữa kì và 1 bài kiểm tra cuối kì. Trong đó bài kiểm tra cuối kỳ chỉ chiếm 20/100 điểm, chỉ cần đi học đầy đủ bạn đã có đến 10 điểm chuyên cần rồi. Số điểm còn lại sẽ chia cho các bài tập trong module. Để có được điểm 5 (xuất sắc) cho môn học bạn phải đạt trên 90 điểm. Tin mình đi, bạn sẽ không muốn cố gắng cả kì của mình đổ sông đổ bể chỉ vì thiếu 1-2 điểm chuyên cần đâu. Lời khuyên của mình là dù trời có tuyết hay mưa bão, chỉ cần thầy điểm danh là luôn có mặt.Khi tự làm bài tập hẳn có lúc bạn sẽ phải tìm bài mẫu hoặc thông tin trên mạng. Có người dễ dàng tìm được nhưng có người tìm mãi không ra. Đó là lúc cần đến kỹ năng tìm kiếm. Khi tìm kiếm các bạn nên có cái nhìn tổng quát về vấn đề, sau đó chia nhỏ thành nhiều từ khóa, sắp xếp sao cho từ khóa quan trọng lên trước. Đối với bài tập lý thuyết tiếng Nga thì nên ưu tiên Yandex.ru hơn Google.com. Ngược lại các bài tập lập trình nên chọn từ khóa tiếng Anh và tìm kiếm trên Google trước. Ngoài ra những nguồn stackoverflow, geeksforgeeks, github đều có rất nhiều câu hỏi, trả lời sẵn có. Để có thể tự nắm bắt kiến thức một cách hiệu quả nhất bạn nên đọc và tìm tài liệu bằng ngoại ngữ (ưu tiên tiếng Nga) và chỉ dịch ra tiếng Việt khi thật sự cần thiết. Tuy rất khó nhưng ngoại ngữ sẽ là điểm tạo ra khác biệt giữa người đi du học và học ở Việt Nam.Hỏi bài cũng là kỹ năng rất cần thiết khi bạn cảm thấy đã tốn nhiều công sức mà vẫn không thể làm được. Có 2 nguồn chính: bạn Nga cùng khóa và các anh chị khóa trên. Để có thể hỏi bài Nga thì các bạn đừng ngại mà giúp họ bất kì kiến thức nào mình vững, đi chơi, giao lưu mọi lúc có thể. Trong nhóm VK chung của khóa rất hay có tài liệu được các bạn Nga chia sẻ nên cũng cần phải đọc kỹ. Nguồn thứ 2 là các anh chị khóa trên người Việt. Các bạn đừng e dè mà hãy sang gõ cửa, bắt chuyện làm quen nhé. Kinh nghiệm của những người đi trước có thể giúp bạn tự tin hơn trong quá trình học tập đó.Tự làm bài không được, hỏi cũng không ai biết thì làm sao để qua môn? Phương án cuối cùng chính là giáo viên trên lớp. Vì ở Nga điểm số hoàn toàn do giáo viên quyết định nên nếu bạn tạo được ấn tượng tốt về kiến thức, đặc biệt là tinh thần học tập bạn sẽ xin được gợi ý của vô số bài tập khó. Theo kinh nghiệm 5 năm trầy da tróc vẩy để trả bài của mình thì không nên xin điểm (ví dụ xin 3 điểm để đủ 91) mà nên xin thêm bài tập hoặc xin làm bổ sung để nâng điểm. Nếu tỷ lệ thành công nếu xin điểm là 50% thì tỷ lệ thành công nếu xin làm thêm bài phải là 90%. Không có giáo viên nào là không quý một sinh viên có tinh thần học tập và ham học hỏi cả đâu.5. Tản mạn về ngành an toàn thông tinCó nhiều người đã nói với mình là vỡ mộng khi sang ITMO học an toàn thông tin. Chính mình cũng từng vậy :(. Phim ảnh và báo đài thường để lại trong chúng ta hình ảnh các hacker ngầu lòi, những điệp viên ấn vài nút đã có thể điều khiển mọi đèn giao thông, camera khu phố,… Thực tế lại khác rất xa. Kiến thức ở bậc cử nhân dàn trải làm cho chương trình học có nhiều môn lý thuyết trong khi đó những môn lập trình, thực hành lại dạy rất nhanh và qua loa. Mải mê với các lab thực hành và thi cuối kì nhiều khi mình cũng quên đi mục đích chính của việc học là để chuẩn bị sau này đi làm. Chương trình hiện tại 2 năm đầu có khá nhiều kỹ năng mềm (soft-skill) rồi, mọi người nên coi đó như cơ hội phát triển bản thân một cách toàn diện. Những kỹ năng thuyết trình trước đám đông, làm việc nhóm,… rất có ích cho công việc sau này.Hối tiếc lớn nhất của mình trong 5 năm học đại học là đã không có định hướng rõ ràng. Trong những năm học đầu bạn có thể học đều, sâu về mọi môn học liên quan an toàn thông tin. Nhưng đến hết năm 3 hãy lựa chọn cho mình 1 chuyên ngành (có thể là bảo mật web, mật mã thậm chí là luật) để tìm hiểu sâu. Mỗi chuyên ngành đều có cái hay riêng nhưng như đã nói bên trên ngành an toàn thông tin quá rộng để biết tất cả.Thị trường việc làm an toàn thông tin ở Việt Nam chủ yếu là đảm bảo an vận hành (operations security) và web security, những bạn theo quân đội sẽ hay phải làm việc với mật mã nữa. Để có thể bắt kịp với sinh viên cùng ngành ở nhà mình sẽ liệt kê dưới đây những kiến thức chung và cơ bản nhất cần nắm bắt:  Lập trình  Hệ điều hành  Cấu trúc dữ liệu và giải thuật  Mạng máy tính  Mật mã  Computer Science nói chungTập thói quen đọc kỹ yêu cầu, tự chủ động tìm hiểu, lên kế hoạch và thực hiện lab một cách hoàn chỉnh chắc chắn sẽ giúp bạn có thêm nhiều kiến thức và kỹ năng bổ ích không ngờ đó.Trên đây là một số kinh nghiệm của mình đúc kết được trong thời gian học tập tại đại học ITMO. Hy vọng sau khi đọc xong các bạn có một cái nhìn rõ ràng hơn về ngành an toàn thông tin cũng như các khó khăn gặp phải khi học tập. Chúc các bạn học tốt và có khoảng thời gian tuyệt vời tại ITMO nhé!  Keep calm, learn and practice!Nguồn:Làm an toàn thông tin thì học gì? - by thaidnBẮT ĐẦU HỌC AN TOÀN THÔNG TIN NHƯ THẾ NÀO? - by l4wTalkshow - Làm hacker là làm gì? (thaidn, PhươngGàCon, HieuPC, l4w)Reverse Engineering: kienmanowarNhững roadmap của các nhánh: Hack ‘Em AllNhững team kĩ thuật của các tổ chức lớn: VinCSS, Viettel Cyber Security, VNPT, khonggianmang.vn …",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-03T04:48:45+03:00'>03 Nov 2021</time><a class='article__image' href='/itmo-bit'> <img src='/images/itmo2.jpg' alt='Khoa an toàn thông tin'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/itmo-bit'>Khoa an toàn thông tin</a> </h2><p class='article__excerpt'>Đỗ Bảo Hoàng</p></div></div></div>"
    } ,
  
    {
      "title"    : "Intro to Cryptography",
      "category" : "",
      "tags"     : "Infosec",
      "url"      : "/cryptography",
      "date"     : "Nov 3, 2021",
      "content"  : "Intro to CryptographyTrong ngành Bảo mật thông tin, Mật mã học là một phần rất quan trọng và đóng vai trò nền tảng của bảo mật thông tin hiện nay. Khác với các mảng khác, cryptography được sử dụng cách ngày nay rất lâu và đóng vai trò bảo mật trong suốt lịch sử loài người.Bài viết này đề cập tới mã hóa cổ điển(classic cryptography)  là cách mã hóa cổ điển được dùng trước thời kỳ của máy vi tính hiện nay. Thời vì này việc mã hóa và giải mã được thực hiện chủ yếu bằng tay. Mã được sắp xếp để tạo thành một đoạn ciphertext khó hiểu đối với kẻ thâm nhập, nhưng với người nhận nhờ đã nắm rõ quy tắc giải mã thông tin nên việc này dễ dàng hơn rất nhiều. Classic cryptography chia làm 2 nhánh chính đó là :  chuyển vị  thay thế ký tự.1. Chuyển vị kí tựChuyển vị kí tự điển hình mã Caesar được biết đến là người đầu tiên sử dụng mã hóa để truyền thông điệp, Thuật toán caesar để mã hóa 1 đoạn thông điệp gửi đến bên kia đại dương mà đối phương không hề hay biết. Thuật toán Caesar mở đầu bằng việc tịnh tiến ký tự trong bảng chữ cái mở đầu cho những mã hóa bằng kí tự, mật mã sau này:Cryptography → dịch 1 kí tự(ROT1) --&amp;gt; DszquphsbqizMã hóa caesar khá đơn giản, không tốn nhiều thời gian, hơn nữa các dấu câu không hề được mã hóa đã dẫn đến việc kẻ thâm nhập có thể đoán ra quy tắc mã hóa và vấn đề tìm ra thông điệp chỉ còn là vấn đề thời gian. Mình có viết 1 đoạn code để giải mã thuật toán Caesar này khi làm lab trên lớp như sau.text = &quot;IO&amp;lt;NYCMYHINY;YJF?;M=HNY=IH&amp;gt;&quot;for i in range(100):    for key in text:        if ord(key) + i &amp;gt; 126:            print(chr(ord(key) + i - 95), end=&quot;&quot;)        else:            print(chr(ord(key) + i), end=&quot;&quot;)    print(&quot;\n&quot;)Đoạn code đơn giản tấn công triệt để mọi khả năng của mã hóa Caesar và tất nhiên là sẽ thành công.Một số phương pháp khai thác khác trong việc chuyển vị bao gồm:  Dùng ma trận vuông, hoán đổi vị trí phần tử trên cột, hoán đổi phần tử trong hàng,  Hoán đổi vị trí hàng, hoán đổi vị trí cột,  kết hợp nhiều trường hợp trên lại với nhau.Nhìn chung vì là bằng tay nên những thuật toán này gây không ít khó khăn cho người giải mã. Và nó cũng cần vốn hiểu biết khá tốt về ngôn ngữ đang mã hóa.2. Phương pháp thay thế ký tựVới phương pháp thay thế ký tự. Một kí tự đơn giản được thay thế bằng một ký tự khác hoặc số mà không có liên quan nhiều đến các kí tự khác.Một hàm được sử dụng khá lâu đó là bảng mã hóa: khi mà kí tự được viết tương ứng với key mã hóa và chỉ cần đối chiếu với bảng để giải mã:VD: bảng mã: A-19 B-30 C-34 ABC - 193034Một ví dụ về sức mạnh của mật mã học đó là cỗ máy Enigma. Trong chiến tranh thế giới thứ 2, đây là cỗ máy được dùng để mã hoá tất cả những thư tín liên lạc, giữ bảo mật hoàn toàn các thông tin quân sự của Đức. Cùng với năng lực quân sự mạnh mẽ, nước Đức khi đó một mình chiến đấu với toàn bộ châu  u và trước tình thế này, quân đội Anh phải tìm cách phá bộ giải mã của Enigma để tìm kiếm cơ hội ngăn chặn sự bành trướng của người Đức. Cỗ máy đã làm đau đầu hàng nghìn nhà khoa học lúc bâý giờ, và phải nhờ đến một mật ngữ ở cuối mỗi dòng thư tín( Hít le vạn tuế) thì Alan Turing(cha đẻ của mật mã học hiện đại) mới giải mã được. Việc giải mã cỗ máy Enigma đã giúp chấm dứt chiến tranh thế giới thứ 2 sớm hơn khoảng 2 năm. Đóng vai trò quan trọng trong sự phát triển thế giới hiện đại.Khi nghiên cứu sâu hơn về ngôn ngữ, người ta phát triển thêm  thuật toán rất hay về mã hóa: Khi mà ko có bảng giải mã, với 1 lượng lớn ký tự đầu vào đã mã hóa. Qua phân tích số lần xuất hiện, quy tắc và từ vựng đã giúp cho chúng ta có góc nhìn tổng quan hơn về nó. Từ đó lần tìm ra text gốc qua vệc giải mã từng ký tự đã bị thay thế.Trong một thời đại mới, cryptography bước vào kỉ nguyên của thách thức khi mà dữ liệu truyền đi với tốc độ ánh sáng. Thông điệp truyền đi có thể bị bắt bới kẻ xâm nhập ngay tức thời. Những thuật toán mạnh mẽ hơn, đồng thời những cỗ máy giải mã đang cạnh tranh với nhau mỗi ngày. Nếu bạn quan tâm nhiều hơn tới mật mã học, hãy comment dưới bài viết này để CLB có động lực ra thêm nhiều bài viết về vấn đề này nữa nhé!🥳",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-11-03T04:48:45+03:00'>03 Nov 2021</time><a class='article__image' href='/cryptography'> <img src='/images/quantumexplainer3.2-01-10.jpg' alt='Intro to Cryptography'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/cryptography'>Intro to Cryptography</a> </h2><p class='article__excerpt'>ManhLab</p></div></div></div>"
    } ,
  
    {
      "title"    : "A STORY OF PROGRAMMING",
      "category" : "",
      "tags"     : "Programming language",
      "url"      : "/intro",
      "date"     : "Oct 31, 2021",
      "content"  : "Trong kỷ nguyên công nghiệp 4.0, Nhu cầu cao về lập trình viên, nhà phát triển và nhà khoa học dữ liệu đã thu hút nhiều bạn trẻ  tham gia vào lĩnh vực CNTT. Thông thường, những bạn mới bắt đầu có xu hướng bỏ qua một số vấn đề  cốt lõi, cơ bản và tìm thẳng code mẫu để cố gắng rút ngắn thời gian học tập hoặc chạy đua với thời hạn công việc. Tuy nhiên khi một lập trình viên giải quyết một vấn đề về lập trình, hoàn thiện code có lẽ là bước cuối cùng. Trong bài viết này, tôi sẽ hướng dẫn bạn 5 bước mà tôi tin rằng sẽ hướng bạn tới cách tiếp cận chính xác để học lập trình.Tập giải quyết vấn đề trên giấy.Đúng vậy, trước khi bắt đầu thực sự lập trình, bạn cần tóm tắt rõ đầu vào, đầu ra của vấn đề cũng như những hướng giải quyết ra giấy. Việc này không chỉ giúp lập trình viên hiểu rõ hơn vấn đề mà còn tổng hợp những ý tưởng mơ hồ, tạo điều kiện cho phương án giải quyết rõ ràng và tối ưu xuất hiện.Nghiên cứu các thuật toán và cấu trúc dữ liệuThuật toán và cấu trúc dữ liệu có vẻ xa vời nhưng thực ra lại rất gần gũi. Thuật toán là một tập hợp các bước, khi được tuân theo, sẽ giải quyết một vấn đề cụ thể. Cấu trúc dữ liệu nghiên cứu cách để biểu diễn cùng một dữ liệu theo nhiều dạng khác nhau. Nghiên cứu thêm về thuật toán và cấu trúc dữ liệu giúp bạn có thêm nhiều lựa chọn, phương án giải quyết vấn đề.Ví dụ: bài toán tìm phần tử có giá trị xác định của mảng có 1 triệu phần tử, bạn cần 1 triệu phép so sánh để hoàn thành. Nhưng nếu mảng đó đã được sắp xếp, bạn chỉ tốn chưa đến 20 phép so sánh, thậm chí với cấu trúc bảng băm (hash table) bạn chỉ cần 1 phép so sánh duy nhất.Vậy nên, thuật toán và cấu trúc dữ liệu là 2 yếu tố quan trọng nhất mà ai cũng cần học, đúng như câu nói nổi tiếng của Niklaus Wirth:Programs (Chương trình) = Data Structures (Cấu trúc dữ liệu) + Algorithms (Giải thuật)Đọc về lý thuyết độ phức tạp.Khi bạn đã có trong tay nhiều phương án giải quyết rồi, làm cách nào có thể đánh giá phương án nào tốt hơn, tối ưu hơn? Lý thuyết độ phức tạp sẽ giải quyết việc này.Độ phức tạp là một thang đo để đánh giá thuật toán trong trường hợp xấu nhất. Máy tính, mặc dù có khả năng thực hiện lượng phép tính ấn tượng, nhưng có những hạn chế của chúng. Nếu bạn phát triển một thuật toán quá phức tạp mà các máy tính hiện tại không thể chạy nó, thì điều đó là vô nghĩa.Bắt đầu bằng mã giảNhưng trước khi bạn ngồi vào máy tính và bắt đầu viết code, lời khuyên của tôi là hãy triển khai các thuật toán của bạn bằng mã giả trước. Như chúng ta vừa thảo luận, thuật toán là một tập hợp các bước được sử dụng để giải quyết một vấn đề cụ thể. Mã giả được định nghĩa là “mô tả các bước của thuật toán bằng ngôn ngữ đơn giản”. Đó là một cách giải thích quá trình suy nghĩ của bạn với người khác chứ không phải với máy tính. Tuy không trực tiếp giúp giải quyết vấn đề, nhưng khi bạn làm việc với 1 team, việc giúp tất các thành viên hiểu được thuật toán lại mang ý nghĩa rất lớn.Lựa chọn ngôn ngữ lập trìnhKhi bạn đã nắm vững lý thuyết giải quyết vấn đề, thuật toán và độ phức tạp, bạn có thể tự tin áp dụng bằng bất kỳ ngôn ngữ lập trình nào. Giống như khi đến Nga thì phải học tiếng Nga vậy, bạn cần lựa chọn ngôn ngữ lập trình phù hợp từng trường hợp, hoàn cảnh. Có ngôn ngữ chuyên dùng để lập trình thiết bị di động, có ngôn ngữ lại chỉ để lập trình web. Theo wikipedia có tới hơn 700 ngôn ngữ lập trình, tuy nhiên chúng đều có cùng các khái niệm như từ vựng, biến, vòng lặp, kiểu dữ liệu,… Vì vậy, bất kể bạn bắt đầu với ngôn ngữ lập trình nào, bạn cũng có thể học cú pháp khác ngay lập tức, miễn là nền tảng của bạn vững chắc.Bài viết đã nêu lên được 5 bước định hướng tới cách tiếp cận chính xác để học lập trình. Khi nắm được kiến thức nền tảng thì những bài tập lập trình khó nhằn sẽ trở nên dễ dàng hơn rất nhiều.  Tham gia CLB tin học với chúng mình để nhận thêm nhiều lời khuyên hơn tại ITMO BRAIN !!!",
      "article"  : "<div class='article col col-4 col-d-6 col-t-12 animate'> <div class='article__inner'> <div class='article__head'> <time class='article__date' datetime='2021-10-31T04:48:45+03:00'>31 Oct 2021</time><a class='article__image' href='/intro'> <img src='/images/intro.jpeg' alt='A STORY OF PROGRAMMING'> </a></div><div class='article__content'> <h2 class='article__title'> <a href='/intro'>A STORY OF PROGRAMMING</a> </h2><p class='article__excerpt'>ManhLab</p></div></div></div>"
    } 
  
]
