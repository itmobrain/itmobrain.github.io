<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ITMO Brain</title>
        <description>CLB Tin Hoc ITMO Brain</description>
        <link>http://localhost:4000/</link>
        <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
        <pubDate>Mon, 20 Dec 2021 16:14:48 +0300</pubDate>
        <lastBuildDate>Mon, 20 Dec 2021 16:14:48 +0300</lastBuildDate>
        <generator>Jekyll v4.2.1</generator>
        
            <item>
                <title>Intro to Web programming</title>
                <description>&lt;h2 id=&quot;intro-to-web-programming&quot;&gt;Intro to Web-programming&lt;/h2&gt;
&lt;p&gt;Lập trình web cần học những gì? Đây có lẽ là câu hỏi mà các bạn lập trình viên tương lai đang băn khoăn. Có thể nói, nếu Website là một ngôi nhà thì lập trình web là người đảm nhiệm việc xây dựng nên ngôi nhà đó. Lập trình web đơn giản là công việc sử dụng ngôn ngữ lập trình, công nghệ hỗ trợ để tạo ra một website.&lt;/p&gt;

&lt;p&gt;Nghề lập trình web hiện nay đang rất hot và mang lại thu nhập rất cao. Không những thế, đây là nhóm nghề sáng tạo, thu hút rất nhiều tài năng. Gia nhập ngành này là một cơ hội để bạn phát huy hết khả năng của mình dù ở mảng thiết kế hay lập trình thuần túy.&lt;/p&gt;

&lt;p&gt;Chúng ta sẽ bắt đầu tìm hiểu về WEBSITE -  thứ chúng ta tương tác hàng ngày khi sử dụng internet.&lt;/p&gt;

&lt;h3 id=&quot;website-là-gì&quot;&gt;Website là gì?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/Website.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Website là một tập hợp các trang thông tin có chứa nội dung dạng văn bản, chữ số, âm thanh, hình ảnh, video, v.v… được lưu trữ trên máy chủ (web server) và có thể truy cập từ xa thông qua mạng Internet.&lt;/p&gt;

&lt;p&gt;Về mặt tiếng anh, có thể hiểu câu ngữ như sau:&lt;br /&gt;
Web = mạng&lt;br /&gt;
Site = khu vực, trang&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt; Như vậy “website” có thể gọi là “trang mạng” hay “trang thông tin điện tử”.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nhưng bên cạnh đó còn tồn tại một thuật ngữ khiến chúng ta hay hiểu nhầm với website là “trang web”. Thực chất “trang web” (hay còn gọi là “web page”) là một trang của website, đây là một tài liệu được hiển thị trực tiếp trên trình duyệt như Firefox, Google Chrome, Opera,.. Một website sẽ gồm một hoặc nhiều trang web như vậy. Cùng với nhau, tất cả các Website có thể truy cập công cộng tạo thành World Wide Web (WWW).&lt;/p&gt;
&lt;h3 id=&quot;cấu-tạo-và-hoạt-động-của-website&quot;&gt;Cấu tạo và hoạt động của website&lt;/h3&gt;
&lt;h4 id=&quot;các-thành-phần-cơ-bản-tạo-nên-websites&quot;&gt;Các thành phần cơ bản tạo nên websites:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Source Code (mã nguồn): Phần mềm website do các lập trình viên thiết kế xây dựng. Phần này giống như bản thiết kế, vật liệu xây dựng, trang thiết bị nội ngoại thất của ngôi nhà vậy.&lt;/li&gt;
  &lt;li&gt;Web hosting (Lưu trữ web):Dùng để lưu trữ mã nguồn. Thành phần này tương tự như mảnh đất để bạn có thể xây dựng ngôi nhà. Là một dịch vụ lưu trữ nằm trên Server hoặc bạn đủ giàu có thể dùng cả Server cho website của bạn. Là trang web của bạn được đặt trên một máy chủ cùng với nhiều trang web khác. Thông thường, các website này chia sẻ chung tài nguyên từ máy chủ như bộ nhớ RAM và CPU.&lt;/li&gt;
  &lt;li&gt;Domain (Tên miền): Là địa chỉ của website để các máy tính ở các nơi trỏ tới khi muốn truy cập vào website. Tên miền có vai trò giống như địa chỉ ngôi nhà, dựa vào đó thì người khác mới có thể tìm tới thăm nhà bạn được.
Cách website hoạt động:&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;mình-sẽ-mô-tả-cách-hoạt-động-của-website-thông-qua-ví-dụ-sau&quot;&gt;Mình sẽ mô tả cách hoạt động của website thông qua ví dụ sau:&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/website-hoat-dong-nhu-the-nao.jpg&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Đầu tiên người dùng nhập vào trình duyệt một địa chỉ có dạng: https://hocban.vn, thực ra bạn chỉ cần gõ “hocban.vn” là trình duyệt sẽ tự hiểu và đổi thành đường dẫn ở trên.&lt;/li&gt;
  &lt;li&gt;Trình duyệt gửi yêu cầu đến máy chủ DNS.&lt;/li&gt;
  &lt;li&gt;Hệ thống DNS trả kết quả phân tích tên miền trong đường dẫn đã gửi là hocban.vn, nó có địa chỉ máy chủ là 210.211.113.135 (cái này lúc đăng ký người ta đã gán sẵn, máy chủ DNS chỉ cần nhớ thôi).&lt;/li&gt;
  &lt;li&gt;Sau khi nhận được địa chỉ IP – nơi lấy dữ liệu, trình duyệt sẽ tìm đến địa chỉ IP đã nhận – tức máy chủ chứa nội dung website.&lt;/li&gt;
  &lt;li&gt;Máy chủ web nhận được yêu cầu truy xuất nội dung website và nó gửi một tập hợp các file bao gồm HTML, CSS , các tập tin đa phương tiện khác như âm thanh, hình ảnh (nếu có) cho trình duyệt;&lt;/li&gt;
  &lt;li&gt;Trình duyệt “dịch” các file mà máy chủ đã gửi thành trang web mà chúng ta nhìn thấy trên màn hình.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;nhiệm-vụ-của-lập-trình-viên-web-full-stack&quot;&gt;Nhiệm vụ của lập trình viên Web (full stack).&lt;/h3&gt;
&lt;p&gt;Người lập trình web sẽ làm nhiệm vụ cơ bản sau:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Làm việc với bộ phận thiết kế để nhận được bản vẽ mẫu (bản thiết kế website) hoặc đôi khi tự thiết kế.&lt;/li&gt;
  &lt;li&gt;Sau đó sẽ chuyển bản vẽ thiết kế dạng ảnh trở thành dạng web (HTML / CSS / Javascript) (Front - end)&lt;/li&gt;
  &lt;li&gt;Tiếp đó là viết mã ở bên trong để thực hiện đẩy các thông tin, dữ liệu từ trong cơ sở dữ liệu ra phía khách hàng. (Back End)&lt;/li&gt;
  &lt;li&gt;Thực hiện bảo trì, bảo dưỡng và phát triển thêm các tính năng khác cho website.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;là-một-lập-trình-viên-web-thì-cần-học-những-gì&quot;&gt;Là một lập trình viên Web thì cần học những gì?&lt;/h3&gt;
&lt;h4 id=&quot;1-kiến-thức-nền-tảng&quot;&gt;1. Kiến thức nền tảng&lt;/h4&gt;
&lt;p&gt;Trước hết chúng ta cần hiểu một vài khái niệm như domain, client, server là gì. Sau đó cần tích lũy kiến thức cơ bản về HTML, CSS, Javascript. Đây là cơ sở, nền tảng của một lập trình viên Web bắt buộc phải có để có thể học các kiến thức nâng cao khác.&lt;/p&gt;

&lt;p&gt;Sau khi đã có những kiến thức nền tảng rồi, bạn có thể chọn cho mình 1 trong 2 hướng đi sau:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fronback.png&quot; /&gt;&lt;/p&gt;
&lt;h5 id=&quot;hướng-1-lập-trình-web-front-end&quot;&gt;Hướng 1: Lập trình Web Front end&lt;/h5&gt;
&lt;p&gt;Hướng này chịu trách nhiệm thiết kế và xây dựng giao diện cho các trang web hoặc ứng dụng web để người dùng có thể xem và tương tác trực tiếp trên đó. Tất cả mọi thứ bạn nhìn thấy khi điều hướng trên Internet, từ các font chữ, màu sắc, hình ảnh cho tới các menu xổ xuống và các thanh trượt, là một sự kết hợp của HTML, CSS, và JavaScript được điều khiển bởi trình duyệt máy tính của bạn (Hướng này còn được ví như “phần nổi của tảng bằng chìm”)
Sau khi đã học HTML, CSS, JS vững bạn cần học tiếp các công nghệ:
JQuery: là một thư viện JavaScript thu nhỏ. Có tác dụng giúp tạo ra các tương tác, sự kiện, hiệu ứng trên website… một cách dễ dàng.
CSS và các framework front-end hiện nay phổ biến nhất là Bootstrap giúp hỗ trợ thiết kế website nhanh và chuẩn hơn. Đây là Framework mà hầu hết Front End developer đều cần bạn am hiểu và vận dụng tốt.
Các framework của JavaScript: Có kiến thức và kỹ năng sử dụng thành thạo các Framework của Javascript như AngularJS, Backbone, Ember, ReactJS. Các Frameworks này giúp lập trình viên tiết kiệm được thời gian trong quá trình lập trình, tối ưu hóa và dễ dàng tạo ra các tương tác thân thiện với người dùng.
Các kiến thức về UI (User Interface)  / UX (User Experience).&lt;/p&gt;

&lt;h5 id=&quot;hướng-2-lập-trình-web-back-end&quot;&gt;Hướng 2: Lập trình web Back end&lt;/h5&gt;
&lt;p&gt;Hướng này bạn sẽ chịu trách nhiệm thiết kế và lập trình phần logic bên trong website để kết nối phần giao diện với cơ sở dữ liệu, giúp cho website sống động và có thể tương tác với người dùng. (Hướng này chính là phần chìm của tảng băng, là những gì người dùng ko thấy trên giao diện web)
Phần này bạn cần học thêm về cách công nghệ như sau:
Ngôn ngữ lập trình chính: Java, PHP, C#, Javascript, Ruby hoặc Python.
Kiến thức về các hệ quản trị cơ sở dữ liệu là vô cùng cần thiết, quan trọng và không thể thiếu như: MS SQL Server, Oracle, MySql, PostgreSQL, MongoDB, ….
Một Framework / công nghệ phù hợp với ngôn ngữ Backend đã chọn: Spring – Java, ASP.NET – C#, Express/NodeJS – Javascript, Laravel – PHP, …
Deploy: Học cấu hình server, domain, cách publish website lên internet…&lt;/p&gt;

&lt;p&gt;Đến đây có thể bạn đã có thể tạo ra một website hoàn chỉnh. Nhưng không dừng lại ở đó.
Bạn hoàn toàn có thể kết hợp cả 2 hướng để trở thành LẬP TRÌNH VIÊN FULL STACK.
Lập trình viên full stack là hướng đi cuối cùng mà bạn hướng đến trong lập trình web, cho dù ban đầu bạn có chọn đi hướng front-end hay back-end đi chăng nữa. Lập trình viên full stack là người làm hết từ a-z, từ code giao diện web, cho đến xử lý các thuật toán logic, làm việc với cơ sở dữ liệu để web có thể tương tác được với người dùng. Bên cạnh đó, họ còn phải có kiến thức về bên server và biết cách vận hành, bảo trì cho website  hoạt động một cách trơn chu,…&lt;/p&gt;

&lt;h3 id=&quot;tổng-kết&quot;&gt;Tổng kết&lt;/h3&gt;
&lt;p&gt;Như vậy, mình đã chia sẻ những kiến thức về website và những kỹ năng, kiến thức cần có để trở thành một lập trình viên web. Lập trình web là công việc không hề khó khăn như trước giờ chúng ta vẫn nghĩ. Hy vọng, qua bài viết trên, các bạn đã rút ra được điều gì đó mới mẻ và có ích. Chúc bạn thành công trong việc tự tạo ra trang web của mình. 
Thanks for reading!
&lt;a href=&quot;https://niithanoi.edu.vn/nghe-lap-trinh-web.html&quot;&gt;Nghề lập trình web có dành cho mình không? &lt;/a&gt;
&lt;a href=&quot;https://carly.com.vn/blog/website-la-gi/&quot;&gt; Web là gì? Trang web là gì? Có những loại nào?&lt;/a&gt;&lt;/p&gt;
</description>
                <pubDate>Mon, 20 Dec 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/web-pregramming</link>
                <guid isPermaLink="true">http://localhost:4000/web-pregramming</guid>
                
                <category>Infosec</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Tổng kết buổi 5: Con trỏ</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Số lượng thành viên tham gia: 10&lt;br /&gt;
&lt;a href=&quot;https://docs.google.com/presentation/d/1lGVGfcPitNnhdpHqglX7_ZZ_LRWL3HtDFd48pd1pZdM/edit#slide=id.p&quot;&gt;Link slide buổi học&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;&quot;&gt;Link record đang update&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://stepik.org/join-class/76feb8a03f9c57b906687eb1930a0b09398427d4&quot;&gt;Link bài tập lớp buổi 5 CPP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.hackerrank.com/itmo-brain-btvn-4&quot;&gt;Link btvn buổi 4 CPP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.hackerrank.com/itmo-brain-btvn-5&quot;&gt;Link btvn buổi 5 CPP&lt;/a&gt;&lt;br /&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;bản-chất-của-biến-variables&quot;&gt;Bản chất của Biến (Variables):&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/images/pointer2.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;khái-niệm-về-hằng-biến-cục-bộ-và-biến-toàn-cục&quot;&gt;Khái niệm về hằng, biến cục bộ và biến toàn cục:&lt;/h3&gt;
&lt;h4 id=&quot;hằng-constant&quot;&gt;Hằng (constant):&lt;/h4&gt;
&lt;p&gt;Hằng (constant) là từ chỉ những thứ không thay đổi và lặp đi lặp lại.&lt;/p&gt;

&lt;p&gt;Cách khai báo:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const &amp;lt;kiểu dữ liệu&amp;gt; &amp;lt;tên biến&amp;gt; = &amp;lt;giá trị&amp;gt;;
hoặc
&amp;lt;kiểu dữ liệu&amp;gt; const &amp;lt;tên biến&amp;gt; = &amp;lt;giá trị&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;biến-cục-bộ-local-variables&quot;&gt;Biến cục bộ (Local variables):&lt;/h4&gt;
&lt;p&gt;Biến được định nghĩa bên trong khối lệnh được gọi là các biến cục bộ (local variables). Những biến này chỉ có thể được truy cập bên trong các khối lệnh mà nó được định nghĩa (bao gồm các khối lệnh lồng nhau), và bị hủy ngay sau khi các khối lệnh kết thúc.&lt;/p&gt;

&lt;h4 id=&quot;biến-toàn-cục-global-variables&quot;&gt;Biến toàn cục (Global variables):&lt;/h4&gt;
&lt;p&gt;Các biến khai báo bên ngoài của khối lệnh được gọi là biến toàn cục. Biến toàn cục có thời gian tĩnh, nghĩa là chúng được tạo ra khi chương trình bắt đầu và bị hủy khi nó kết thúc. Các biến toàn cục có phạm vi tập tin (file scope), hay gọi là “phạm vi toàn cầu” (global scope).&lt;/p&gt;

&lt;h3 id=&quot;con-trỏ&quot;&gt;Con trỏ:&lt;/h3&gt;
&lt;h4 id=&quot;định-nghĩa&quot;&gt;Định nghĩa:&lt;/h4&gt;
&lt;p&gt;Là biến trỏ tới 1 địa chỉ khác, tức giá trị nó lưu là 1 địa chỉ của 1 ô nhớ khác.
 &lt;img src=&quot;/images/pointer1.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;các-khái-niệm-về-con-trỏ&quot;&gt;Các khái niệm về con trỏ&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;Giá trị của con trỏ: địa chỉ mà con trỏ trỏ đến.&lt;/li&gt;
  &lt;li&gt;Địa chỉ của con trỏ: Địa chỉ của bản thân biến con trỏ đó&lt;/li&gt;
  &lt;li&gt;Giá trị của biến nơi con trỏ đang trỏ tới&lt;/li&gt;
  &lt;li&gt;Địa chỉ của biến nơi con trỏ đang trỏ tới = giá trị của con trỏ.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;làm-việc-với-con-trỏ&quot;&gt;Làm việc với con trỏ:&lt;/h4&gt;
&lt;p&gt;Cách khai báo:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;kiểu dữ liệu&amp;gt; * &amp;lt;tên biến&amp;gt;&lt;/code&gt;&lt;br /&gt;
Cách gán giá trị :&lt;br /&gt;
Ví dụ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int *ptr; // khai báo con trỏ
int val = 5; // khai báo biến digit mang giá trị là 42
ptr = &amp;amp;val; // gán giá trị của con trỏ = địa chỉ của biến digit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Lưu ý:
Con trỏ được khai báo là kiểu dữ liệu gì thì chỉ có thể trỏ tới biến có cùng kiểu giá trị đó&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tham chiếu ngược:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*[tên_con_trỏ]&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;con-trỏ-đặc-biệt&quot;&gt;Con trỏ đặc biệt:&lt;/h4&gt;
&lt;h5 id=&quot;con-trỏ-rác-null-pointer&quot;&gt;Con trỏ rác (Null Pointer):&lt;/h5&gt;
&lt;p&gt;Hãy ghi nhớ rằng chúng ta không nên để một con trỏ là rác ( tức là không được khởi tạo giá trị). Một con trỏ rác là con trỏ không trỏ tới cái gì cả, nếu bạn sử dụng nó thì nó sẽ trỏ tới 1 địa chỉ ` ngẫu nhiên ` nào đó và sẽ thật là nguy hiểm nếu địa chỉ đó đang được sử dụng với 1 mục đích khác&lt;/p&gt;

&lt;h5 id=&quot;con-trỏ-void-void-pointer&quot;&gt;Con trỏ Void (Void Pointer):&lt;/h5&gt;
&lt;p&gt;Một con trỏ void được sử dụng để trỏ tới biến có bất kỳ kiểu dữ liệu nào. Nó có thể tái sử dụng với bất kỳ biến nào mà chúng ta muốn&lt;/p&gt;

&lt;h4 id=&quot;bản-chất-của-con-trỏ&quot;&gt;Bản chất của con trỏ:&lt;/h4&gt;
&lt;p&gt;Con trỏ có thể thay đổi trực tiếp giá trị của biến mà nó đang trỏ tới
Khi thay đổi giá trị của biến, thì rõ ràng nếu tồn tại con trỏ ptr trỏ tới biến đó thì *ptr cũng sẽ thay đổi theo giá trị của biến.&lt;/p&gt;

&lt;h4 id=&quot;các-lỗi-thường-gặp&quot;&gt;Các lỗi thường gặp:&lt;/h4&gt;
&lt;p&gt;Nhầm lẫn giữa địa chỉ và giá trị. Con trỏ là biến trỏ tới địa chỉ, không phải giá trị
Có thể các bạn sẽ không phân biệt được dấu * khi khai báo con trỏ và khi truy cập vào giá trị của địa chỉ mà con trỏ đang trỏ tới.&lt;/p&gt;

&lt;h3 id=&quot;truyền-giá-trị-cho-hàm&quot;&gt;Truyền giá trị cho hàm:&lt;/h3&gt;
&lt;p&gt;Gọi hàm bằng tham trị tức là truyền bản sao của biến vào hàm để xử lý. Bản sao của một biến mang giá trị bằng giá trị của biến đó.
Gọi hàm bằng tham chiếu. Chúng ta truyền địa chỉ hoặc tham chiếu của biến vào hàm, lúc này không có bản sao chép nào được tạo cả, đảm bảo việc không bị lãng phí bộ nhớ. Chúng ta có thể truy cập vào giá trị lưu trong các địa chỉ này bằng toán tử tham chiếu ngược &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;code-bài-tập-trên-lớp&quot;&gt;Code bài tập trên lớp:&lt;/h3&gt;
&lt;h4 id=&quot;swap&quot;&gt;Swap&lt;/h4&gt;
&lt;p&gt;Viết một hàm swap , nhận hai con trỏ int và hoán đổi giá trị của hai biến đó.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;2 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;
void swap(int *a, int *b) {
	int tmp = *a;
*a = *b;
*b = *c; 
}
int main() {
    	int a, b;
    	cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;
    	swap(&amp;amp;a, &amp;amp;b);
    	cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; b;
return 0;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;max3&quot;&gt;Max3&lt;/h4&gt;
&lt;p&gt;Hãy xây dựng một hàm Max3, nhận đầu vào là 3 biến kiểu int a, b, c và một con trỏ Max. Hàm sẽ thực hiện tìm giá trị lớn nhất trong ba số (a, b, c) và gán giá trị đấy vào biến Max.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 30 15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;30
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;

void Max3(int a, int b, int c, int *Max) {
    *Max = a;
    if (b &amp;gt; *Max) *Max = b;
    if (c &amp;gt; *Max) *Max = c;
}

int main() {

    // Không thay đổi code ở hàm main
    int a, b, c;
    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c;
    int ansMax;
    Max3(a, b, c, &amp;amp;ansMax);
    cout &amp;lt;&amp;lt; ansMax;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;sort&quot;&gt;Sort&lt;/h4&gt;
&lt;p&gt;Sau khi đã có hàm swap(int *a, int *b) ở bài tập trước. Hãy ứng dụng nó để xây dựng hàm sort , nhận vào 3 con trỏ và sắp xếp chúng theo thứ tự tăng dần.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8 11 9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;8 9 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;


void swap(int *a, int *b) {
    int c = *a;
    *a = *b;
    *b = c;
    
}

void sort(int *a, int *b, int *c) {
    if (*a &amp;gt; *b) swap(a, b);
    if (*a &amp;gt; *c) swap(a, c);
    if (*b &amp;gt; *c) swap(b, c);
}

int main() {
    int a, b, c;
    cin &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b &amp;gt;&amp;gt; c;
    sort(&amp;amp;a, &amp;amp;b, &amp;amp;c);
    cout &amp;lt;&amp;lt; a &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; b &amp;lt;&amp;lt; &quot; &quot; &amp;lt;&amp;lt; c;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;normalize&quot;&gt;normalize&lt;/h4&gt;
&lt;p&gt;Viết một hàm normalize nhận đầu vào là một con trỏ, hàm thực hiện việc chia số đó với 2 mỗi khi có thể (nếu số đó dương và chia hết cho 2).&lt;br /&gt;
Ví dụ, số 100 sẽ trở thành 25, và số 5 sẽ vẫn là chính nó.
Nó được đảm bảo rằng hàm này sẽ không truyền vào số âm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;100
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;25
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
using namespace std;


void normalize(int *a) {
    while(*a != 0 &amp;amp;&amp;amp; *a % 2 == 0){
        *a /= 2;
    }
}

int main() {
    int a;
    cin &amp;gt;&amp;gt; a;
    normalize(&amp;amp;a);
    cout &amp;lt;&amp;lt; a;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;đường-link-hữu-ích&quot;&gt;Đường Link hữu ích:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cplusplus.com/doc/tutorial/pointers/#:~:text=The%20variable%20that%20stores%20the,uses%20in%20lower%20level%20programming.&quot;&gt;Pointers CPP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.geeksforgeeks.org/pointers-c-examples/&quot;&gt;Pointers in C/C++ with Examples&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://gist.github.com/ericandrewlewis/720c374c29bbafadedc9&quot;&gt;C++ Pointer Tutorial&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
</description>
                <pubDate>Sun, 12 Dec 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/cpp-buoi5</link>
                <guid isPermaLink="true">http://localhost:4000/cpp-buoi5</guid>
                
                <category>Programming language</category>
                
                <category>Learning</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Con trỏ phần 2: Sử dụng con trỏ với hàm trong lập trình C</title>
                <description>&lt;h2 id=&quot;c-sử-dụng-con-trỏ-với-hàm-trong-lập-trình-c&quot;&gt;C. Sử dụng con trỏ với hàm trong lập trình C&lt;/h2&gt;

&lt;h3 id=&quot;truyền-tham-số-cho-hàm-bằng-tham-trị-và-tham-chiếu&quot;&gt;Truyền tham số cho hàm bằng tham trị và tham chiếu&lt;/h3&gt;

&lt;p&gt;Truyền tham số bằng tham trị tức là truyền bản sao của biến vào hàm để xử lý. Bản sao của một biến mang giá trị bằng giá trị của biến đó.&lt;/p&gt;

&lt;p&gt;Ví dụ&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void truyen_tham_tri(int x){
  x++;
  printf(&quot;\nDia chi cua x = %d&quot;, &amp;amp;x);
}

int main(){
int a = 3; 
      printf(&quot;\nDia chi cua a = %d&quot;, &amp;amp;a);
printf(&quot;\nGia tri cua a truoc khi goi ham = %d&quot;, a);
truyen_tham_tri(a);
printf(&quot;\nGia tri cua a sau khi goi ham = %d&quot;, a);

 /* output
Dia chi cua a = -392092044
Gia tri cua a truoc khi goi ham = 3
Dia chi cua x = -392092068
Gia tri cua a sau khi goi ham = 3

*/
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Như bạn thấy, khi hàm được truyền theo tham trị thì:&lt;/p&gt;

&lt;p&gt;Giá trị của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; trong hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; không bị thay đổi.
Địa chỉ của &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; trong hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; và địa chỉ của &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; trong hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;truyen_tham_tri&lt;/code&gt; là khác nhau.&lt;/p&gt;

&lt;p&gt;Vậy là chúng ta đã tạo ra thêm biến x mới trong bộ nhớ và điều này trả giá bằng chi phí bộ nhớ. Chúng ta có cách nào khác để tiết kiệm bộ nhớ hơn không?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Có, đó là gọi hàm bằng tham chiếu. Chúng ta truyền địa chỉ hoặc tham chiếu của biến vào hàm, lúc này không có bản sao chép nào được tạo cả, đảm bảo việc không bị lãng phí bộ nhớ. Chúng ta có thể truy cập vào giá trị lưu trong các địa chỉ này bằng toán tử tham chiếu ngược &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chúng ta có thể viết lại chương trình phía trên bằng cách gọi hàm bằng tham chiếu như sau:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void truyen_tham_chieu(int &amp;amp;x){
  x++;
  printf(&quot;\nDia chi cua x = %d&quot;, &amp;amp;x);
}

int main(){
int a = 3; 
      printf(&quot;\nDia chi cua a = %d&quot;, &amp;amp;a);
printf(&quot;\nGia tri cua a truoc khi goi ham = %d&quot;, a);
truyen_tham_chieu(a);
printf(&quot;\nGia tri cua a sau khi goi ham = %d&quot;, a);

 /* output
Dia chi cua a = 119268420
Gia tri cua a truoc khi goi ham = 3
Dia chi cua x = 119268420
Gia tri cua a sau khi goi ham = 4

*/
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Như bạn thấy, khi hàm nhận tham số là tham chiếu thì:&lt;/p&gt;

&lt;p&gt;Giá trị của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; trong hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; bị thay đổi đúng theo cách biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; bị thay đổi trong hàm truyen_tham_chieu.&lt;br /&gt;
Địa chỉ của &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a&lt;/code&gt; trong hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt; và địa chỉ của &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; trong hàm truyen_tham_chieu là giống nhau =&amp;gt; chúng cùng là 1 biến.&lt;/p&gt;

&lt;p&gt;Tham trị và tham chiếu cần phải được sử dụng chính xác nếu không bạn sẽ gặp phải những lỗi tai hại, hãy cùng xem xét ví dụ sau đây:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#include &amp;lt;stdio.h&amp;gt;

void swap(int &amp;amp;a, int &amp;amp;b){ // ham so nhan tham chieu
  int tmp = a;
  a = b;
  b = tmp;
printf(&quot;\nTrong ham: a = %d, b = %d&quot;, a, b);
}

int main(){
int first = 3,second = 5; 
printf(&quot;\ntruoc khi goi ham: first = %d, second = %d&quot;, first, second);
swap(first,second);
printf(&quot;\n Sau khi thuc thi ham: first = %d, second = %d&quot;, first, second);

 /* output
Truoc khi goi ham: first = 3, second = 5
Trong ham: a = 5, b = 3
Sau khi thuc thi ham: first = 5, second = 3 
*/
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Chương trình trên thực hiện việc hoán đổi giá trị của 2 số &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;first, second&lt;/code&gt; thông qua hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap(int a, int b)&lt;/code&gt; nhận vào 2 tham số là tham chiếu. Do đó, giá trị của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;first, second&lt;/code&gt; được hoán đổi sau khi thực thi hàm.&lt;/p&gt;

&lt;p&gt;Tuy nhiên một lỗi khá thường gặp là bạn sơ ý truyền vào tham trị thay vì tham chiếu.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void swap(int a, int b){ // ham so nhan tham tri
  int tmp = a;
  a = b;
  b = tmp;
printf(&quot;\nTrong ham: a = %d, b = %d&quot;, a, b);
}

main(){
int first = 3,second = 5; 
printf(&quot;\ntruoc khi goi ham: first = %d, second = %d&quot;, first, second);
swap(first,second);
printf(&quot;\n Sau khi thuc thi ham: first = %d, second = %d&quot;, first, second);

 /* output
Truoc khi goi ham: first = 3, second = 5
Trong ham: a = 5, b = 3
Sau khi thuc thi ham: first = 3, second = 5 
*/
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Hàm &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;swap(int a, int b)&lt;/code&gt; nhận vào 2 tham số là tham trị. Do đó, giá trị của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;first, second&lt;/code&gt; không được hoán đổi sau khi thực thi hàm.&lt;/p&gt;

&lt;p&gt;Sử dụng con trỏ để truyền mảng làm tham số của hàm
Trong phần này, chúng ta hãy cùng tìm hiểu các chương trình khác nhau nhưng việc truyền tham số sẽ sử dụng con trỏ.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

 void add(float *a, float *b){
 float c = *a + *b;
 printf(&quot;Addition gives %.2f\n&quot;,c);
}
int main(){
    printf(&quot;Enter two numbers :\n&quot;);
    float a,b;
    scanf(&quot;%f %f&quot;,&amp;amp;a,&amp;amp;b);
    add(&amp;amp;a,&amp;amp;b);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Chúng ta tạo hàm add() để tính tổng của 2 số a và b.&lt;/p&gt;

&lt;p&gt;Địa chỉ của a và b được truyền vào hàm. Bên trong hàm chúng ta sử dụng * để truy cập giá trị của chúng và in ra kết quả.&lt;/p&gt;

&lt;p&gt;Tương tự như vậy, chúng ta có thể truyền 1 mảng làm tham số bằng cách sử dụng con trỏ mà trỏ tới phần tử đầu tiên của nó.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;

void timSoLonNhat( int *p){
 int max = *p;
 for(int i=0; i &amp;lt; 5; i++){
    if(*(p+i) &amp;gt; max)
        max = *(p+i);
 }
 printf(&quot;so lon nhat la %d\n&quot;,max);
 }
main(){
  int myNumbers[5] = { 34, 65, -456, 0, 3455};
  timSoLonNhat(myNumbers);
   /* output:so lon nhat la 3455&quot; */
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Bởi vì tên của mảng, bản thân nó là 1 con trỏ trỏ tới phần tử đầu tiên, chúng ta có thể truyền nó như là 1 tham số tới hàm timSoLonNhat(). Trong hàm số này, chúng ta đã duyệt từng phần tử của mảng bằng con trỏ và vòng lặp để tìm ra số lớn nhất.&lt;/p&gt;

&lt;p&gt;Về phần con trỏ và hàm, còn nhiều ứng dụng nữa mà chúng ta cần phải quan tâm. Tuy nhiên mình cho rằng nó vượt quá mục đích của bài viết này là giới thiệu về con trỏ cho người mới, mình sẽ để link tham khảo cho các bạn đọc thêm nhé. Con trỏ là một phần khó trong C nhưng nếu bạn hiểu và vận dụng được nó tốt thì chắc chắn bạn đang nắm trong tay kiến thức khá vững chắc về ngôn ngữ C cũng như cách tổ chức bộ nhớ đấy!&lt;/p&gt;

&lt;h2 id=&quot;kết-bài&quot;&gt;Kết bài&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt; Vậy là chúng ta đã đi qua các định nghĩa, bản chất, lỗi thường gặp, các toán tử cũng như là ứng dụng của con trỏ. Hy vọng bài viết này đã giúp cho các bạn phần nào hiểu thêm về con trỏ và cách sử dụng nó trong lập trình C. Bản thân mình khi học về con trỏ cũng phải nhào nặn lại kiến thức khá nhiều thì mới có thể tận dụng được sức mạnh của nó. Nên các bạn đừng lo lắng hay ngại ngần mà đọc lại bài viết để nắm rõ hơn phần kiến thức hay và quan trọng này nhé!&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
                <pubDate>Wed, 08 Dec 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/pointer2</link>
                <guid isPermaLink="true">http://localhost:4000/pointer2</guid>
                
                <category>Programming language</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Con trỏ phần 1: Giới thiệu cơ bản về con trỏ</title>
                <description>&lt;h2 id=&quot;cơ-bản&quot;&gt;Cơ bản&lt;/h2&gt;
&lt;h3 id=&quot;lời-mở-đầu&quot;&gt;Lời mở đầu&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Con trỏ thường được nêu ra trong những cuộc tranh cãi là phần khó hiểu nhất của C. Nhưng nó lại là tính năng mà khiến C trở thành một ngôn ngữ mạnh mẽ. Trong bài viết này, chúng ta sẽ cùng đi từ những khái niệm đơn giản nhất về con trỏ và cách sử dụng của nó với mảng, string, hàm.&lt;br /&gt;
Nào, cùng dành khoảng 30 phút, thư giãn, rót một ly coffee, và bắt đầu tìm hiểu về con trỏ nhé&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;khái-niệm-về-biến-giá-trị-của-biến-địa-chỉ-của-biến&quot;&gt;Khái niệm về biến, giá trị của biến, địa chỉ của biến&lt;/h3&gt;
&lt;p&gt;Để hiểu cách sử dụng của con trỏ, chúng ta cần nắm vững khái niệm về địa chỉ ở trong C. &lt;br /&gt;
Điều gì sẽ xảy ra khi chúng ta viết dòng code dưới đây?&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int digit = 42;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ở dòng code trên, chúng ta đã khai báo 1 biến kiểu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt; có tên là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digit&lt;/code&gt; với giá trị là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;42&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Về mặt tổ chức bộ nhớ, chúng ta đã lấy ra 1 khối bộ nhớ (block of memory), đặt tên cho nó là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digit&lt;/code&gt; và gán giá trị cho khối bộ đó là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;42&lt;/code&gt;. Vì được khai báo là kiểu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int&lt;/code&gt; nên khối này chiếm 4 bytes liên tiếp nhau trong bộ nhớ máy tính.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pointer2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Khối bộ nhớ này được gán với 1 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;địa chỉ&lt;/code&gt; (address). Giá trị của địa chỉ này không quá quan trọng với chúng ta, vì nó là 1 giá trị random nào đó mà được máy tính tự động sinh ra. Nhưng, chúng ta có thể truy cập vào địa chỉ này bằng cách sử dụng toán tử &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printf(&quot;dia chi cua bien digit: = %d&quot;,&amp;amp;digit);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Lưu ý: Các bạn có thể nhận được các địa chỉ khác nhau mỗi khi chạy dòng code trên do việc tổ chức bộ nhớ này được ngẫu nhiên thực hiện bởi máy tính.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;truy-cập-giá-trị-của-biến-thông-qua-địa-chi&quot;&gt;Truy cập giá trị của biến thông qua địa chi&lt;/h4&gt;
&lt;p&gt;Để truy cập giá trị của biến thông qua địa chỉ, sử dụng toán tử *.&lt;/p&gt;

&lt;p&gt;Ví dụ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int digit = 42;
printf(&quot;Dia chi cua bien digit: %d\n&quot;, &amp;amp;digit);
printf(&quot;Gia tri cua bien digit: %d\n&quot;, *(&amp;amp;digit));


Output:
dia chi cua bien digit: 6422300
gia tri cua bien digit: 42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vậy tóm lại biến là một thứ dùng để lưu giá trị, biến được lưu trong bộ nhớ và được cấp phát 1 địa chỉ riêng cho biến đó. Muốn biết địa chỉ của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt; là gì thì sử dụng toán tử &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;x&lt;/code&gt;. Muốn truy cập giá trị của biến thông qua địa chỉ, sử dụng toán tử &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;con-trỏ&quot;&gt;Con trỏ&lt;/h3&gt;
&lt;h4 id=&quot;định-nghĩa&quot;&gt;Định nghĩa:&lt;/h4&gt;
&lt;p&gt;Con trỏ trong C cũng chỉ là một biến, mang đầy đủ các chức năng mà một biến bình thường trong C có. Ví dụ như là có thể khai báo, khởi tạo và lưu trữ giá trị cũng như là có giá trị riêng của nó. Nhưng biến con trỏ không chỉ dùng để lưu một giá trị bình thường, nó là biến trỏ tới 1 địa chỉ khác, tức giá trị nó lưu là 1 địa chỉ của 1 ô nhớ khác.
 &lt;img src=&quot;/images/pointer1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chúng ta cùng thống nhất 1 số khái niệm khi làm việc với con trỏ nhé:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Giá trị của con trỏ: địa chỉ mà con trỏ trỏ đến.&lt;/li&gt;
  &lt;li&gt;Địa chỉ của con trỏ: Địa chỉ của bản thân biến con trỏ đó&lt;/li&gt;
  &lt;li&gt;Giá trị của biến nơi con trỏ đang trỏ tới&lt;/li&gt;
  &lt;li&gt;Địa chỉ của biến nơi con trỏ đang trỏ tới = giá trị của con trỏ.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Như ở hình phía trên, các bạn có thể thấy con trỏ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pointer&lt;/code&gt; lưu giá trị và &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;24650&lt;/code&gt; và giá trị này chính xác là địa chỉ của biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digit&lt;/code&gt;. Khi này ta nói, con trỏ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pointer&lt;/code&gt; trỏ đến địa chỉ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;24650&lt;/code&gt; hoặc trỏ tới biến &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digit&lt;/code&gt;.
Cách khai báo&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;` &amp;lt;kiểu dữ liệu&amp;gt; * &amp;lt;tên biến&amp;gt;`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Tương tự như các biến bình thường, con trỏ cũng phải có kiểu dữ liệu và tên biến, tuy nhiên điều khác biệt là dấu * trước tên biến, đây là ký hiệu báo cho trình biên dịch biết ta đang khai báo con trỏ.&lt;/p&gt;

&lt;p&gt;Những kiểu dữ liệu có thể là: void, int, float, double….
Tên con trỏ phải được đặt tuân theo quy tắc đặt tên biến như bình thường.
        - Ví dụ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int *ptr_int; // khai báo con trỏ để trỏ tới biến kiểu int
char *ptr_char; // khai báo con trỏ để trỏ tới biến kiểu char
float *ptr_float;//khai báo con trỏ để trỏ tới biến kiểu float
void *ptr_void; // khai báo con trỏ kiểu void có thể trỏ tới mọi kiểu dữ liệu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;cách-gán-giá-trị&quot;&gt;Cách gán giá trị&lt;/h4&gt;

&lt;p&gt;Sau khi khai báo con trỏ, cũng giống như 1 biến bình thường, ta cần khởi tạo giá tri cho nó. 
Ví dụ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int *ptr; // khai báo con trỏ
int digit = 42; // khai báo biến digit mang giá trị là 42
ptr = &amp;amp;digit; // gán giá trị của con trỏ = địa chỉ của biến digit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hoặc:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;char c = ‘a’; // khai báo biến c kiểu char mang giá trị là ‘a’
char *ptr = &amp;amp;c; // khai báo con trỏ kiểu char đồng thời khởi tạo giá trị của nó bằng địa chỉ của biến c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Lưu ý:&lt;br /&gt;
Con trỏ được khai báo là kiểu dữ liệu gì thì chỉ có thể trỏ tới biến có cùng kiểu giá trị đó ( trừ con trỏ mang kiểu void mà chúng ta sẽ đề cập ngay sau đây)&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;tham-chiếu-ngược-dereference&quot;&gt;Tham chiếu ngược (dereference)&lt;/h4&gt;
&lt;p&gt;Khi chúng ta tham chiếu ngược (dereference) một địa chỉ, nó trả lại giá trị lưu trong địa chỉ ô nhớ đó. Vì bản chất con trỏ lưu địa chỉ, nên việc tham chiếu ngược tới con trỏ sẽ truy cập được giá trị của địa chỉ mà con trỏ trỏ tới.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cú pháp  `*[tên_con_trỏ]`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ví dụ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int digit = 42;//khai báo biến kiểu int mang giá trị là 42
Int *ptr = &amp;amp;digit; // khai báo con trỏ kiểu int đồng thời khởi tạo giá trị của nó bằng địa chỉ của biến digit
printf(&quot;Gia tri khi tham chieu nguoc = %d\n&quot;, *ptr);

Output: Gia tri khi tham chieu nguoc = 42
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;con-trỏ-rác--null-pointer&quot;&gt;Con trỏ rác ( Null Pointer)&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int *null_ptr; // con tro rac
int digit = 42;
int *ptr = &amp;amp;digit;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Hãy ghi nhớ rằng chúng ta không nên để một con trỏ là rác ( tức là không được khởi tạo giá trị). Một con trỏ rác là con trỏ không trỏ tới cái gì cả, nếu bạn sử dụng nó thì nó sẽ trỏ tới 1 địa chỉ ` ngẫu nhiên ` nào đó và sẽ thật là nguy hiểm nếu địa chỉ đó đang được sử dụng với 1 mục đích khác.&lt;/p&gt;

&lt;p&gt;Để đảm bảo rằng chúng ta không có con trỏ rác, hãy khởi tạo cho con trỏ với giá trị &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NULL&lt;/code&gt;, và mục đích là để sử dụng sau này nếu cần thiết.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int *ptr = NULL;
Hoặc
int *ptr = nullptr;


    
        Con trỏ Void ( Void Pointer)
            Một con trỏ void được sử dụng để trỏ tới biến có bất kỳ kiểu dữ liệu nào. Nó có thể tái sử dụng với bất kỳ biến nào mà chúng ta muốn. Nó được khai báo như sau:
        
void *ptr_void = nullptr;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Với sự “tiện lợi”, con trỏ void cũng mang tới những giới hạn ràng buộc. Bạn không thể lấy giá trị của địa chỉ mà con trỏ void trỏ tới nếu không ép kiểu tường minh.&lt;/p&gt;

&lt;p&gt;Ví dụ&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;void *ptr_void = nullptr;
int number = 54;
ptr_void = &amp;amp;number;
printf(&quot;Gia tri cua number = %d\n&quot;, *ptr_void); // bien dich loi
printf(&quot;Gia tri cua number = %d\n&quot;, *(int *)ptr_void);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;bản-chất-của-con-trỏ-trong-c&quot;&gt;Bản chất của con trỏ trong C&lt;/h3&gt;

&lt;p&gt;Để hiểu về sức mạnh của con trỏ, hãy cùng xem xét ví dụ sau:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int number = 54;
int ptr = &amp;amp;number;
printf(&quot;Gia tri cua number = %d\n&quot;, number); // 54
printf(&quot;Dia chi cua number = %d\n&quot;, &amp;amp;number); // 6422300
printf(&quot;Gia tri cua con tro = %d\n&quot;, ptr); // 6422300
printf(&quot;Dia chi cua con tro = %d\n&quot;, &amp;amp;ptr); // 6422296
printf(&quot;Gia tri cua bien ma con tro p dang tro toi = %d\n&quot;, *ptr); // 54

*ptr = 100; // thay doi gia tri cua con tro
printf(“\n”);
printf(&quot;Gia tri cua number = %d\n&quot;, number); //100
printf(&quot;Gia tri cua bien ma con tro p dang tro toi = %d\n&quot;, *ptr); // 100

number = 1000;
printf(“\n”);
printf(&quot;Gia tri cua number = %d\n&quot;, number); //1000
printf(&quot;Gia tri cua bien ma con tro p dang tro toi = %d\n&quot;, *ptr); // 1000

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Qua ví dụ trên chúng ta có thể đưa ra kết luận sau đây:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt; Con trỏ có thể thay đổi trực tiếp giá trị của biến mà nó đang trỏ tới
Khi thay đổi giá trị của biến, thì rõ ràng nếu tồn tại con trỏ ptr trỏ tới biến đó thì *ptr cũng sẽ thay đổi theo giá trị của biến.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;các-lỗi-thường-gặp&quot;&gt;Các lỗi thường gặp&lt;/h4&gt;
&lt;p&gt;Nhầm lẫn giữa địa chỉ và giá trị. Con trỏ là biến trỏ tới địa chỉ, không phải giá trị&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int number = 54;
int *ptr = number; // sai vi number la gia tri
int *ptr = &amp;amp;number; // dung vi number la dia chi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Có thể các bạn sẽ không phân biệt được dấu * khi khai báo con trỏ và khi truy cập vào giá trị của địa chỉ mà con trỏ đang trỏ tới.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int number = 54;
int *ptr = &amp;amp;number; // *ptr mang y nghia la khai bao con tro
*ptr = 100; // *ptr mang y nghia la truy cap gia tri cua dia chi ma con tro dang tro toi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;b-mối-quan-hệ-của-con-trỏ-và-mảng-chuỗi&quot;&gt;B. Mối quan hệ của con trỏ và mảng, chuỗi&lt;/h2&gt;
&lt;h3 id=&quot;tại-sao-lại-là-con-trỏ-và-mảng&quot;&gt;Tại sao lại là con trỏ và mảng?&lt;/h3&gt;
&lt;p&gt;Trong C, con trỏ và mảng có mối quan hệ rất gần gũi và mạnh mẽ với nhau. Thông thường bạn có thể truy cập phần tử mảng bằng cách arrayName[index], tuy nhiên con trỏ cung cấp cho chúng ta cách để truy cập đến các phần tử của mảng nhanh hơn và tối ưu hơn. Cụ thể hãy cùng mình tìm hiểu tiếp nhé!&lt;/p&gt;
&lt;h4 id=&quot;mảng-1-chiều&quot;&gt;Mảng 1 chiều&lt;/h4&gt;
&lt;p&gt;Hãy cùng xem điều gì xảy ra nếu chúng ta viết &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int myArrray[5];&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;5 khối bộ nhớ liên tiếp bắt đầu từ myArray[0] tới myArray[4] được tạo ra với những giá trị rác chứa bên trong nó (do chưa khởi tạo). Mỗi khối bộ nhớ có kích thước là 4 bytes ( do là kiểu int).&lt;/p&gt;

&lt;p&gt;Do đó, nếu địa chỉ của myArray[0] là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;100&lt;/code&gt;, thì địa chỉ của các ô còn lại lần lượt là 104, 108, 112 và 116.&lt;/p&gt;

&lt;p&gt;Hãy cùng xem xét ví dụ sau:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int prime[5] = {2,3,5,7,11};
printf(&quot;Ket qua khi dung &amp;amp;prime = %d\n&quot;,&amp;amp;prime);
printf(&quot;Ket qua khi dung prime = %d\n&quot;,prime);
printf(&quot;Ket qua khi dung &amp;amp;prime[0] = %d\n&quot;,&amp;amp;prime[0]);


/* Output */
Ket qua khi dung &amp;amp;prime = 6422016
Ket qua khi dung prime = 6422016
Ket qua khi dung &amp;amp;prime[0] = 6422016
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;prime, prime và &amp;amp;prime[0]&lt;/code&gt; tất cả cùng trỏ đến một địa chỉ, phải không? Đúng vậy, nhưng đợi đã, có một điều bất ngờ ( nhưng cũng có thể gây bối rối).&lt;/p&gt;

&lt;p&gt;Hãy cùng cộng vào mỗi con trỏ &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;prime, prime, và &amp;amp;prime[0]&lt;/code&gt; thêm 1&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printf(&quot;Ket qua khi dung &amp;amp;prime = %d\n&quot;,&amp;amp;prime + 1);
printf(&quot;Ket qua khi dung prime = %d\n&quot;,prime + 1);
printf(&quot;Ket qua khi dung &amp;amp;prime[0] = %d\n&quot;,&amp;amp;prime[0] + 1);

    /* Output */
Ket qua khi dung &amp;amp;prime = 6422036
Ket qua khi dung prime = 6422020
Ket qua khi dung &amp;amp;prime[0] = 6422020
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wow! Tại sao &amp;amp;prime + 1 lại cho ra giá trị khác với 2 cái còn lại? Và tại sao prime + 1 và &amp;amp;prime[0] + 1 lại vẫn bằng nhau? Hãy cùng trả lời nhé.&lt;/p&gt;

&lt;p&gt;Bản thân biến mảng (trong trường hợp này là &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prime&lt;/code&gt;) là một con trỏ trỏ tới phần tử đầu tiên của mảng (phần tử ở vị trí 0). Do đó trong ví dụ trên chúng ta thấy prime và &amp;amp;prime[0] có giá trị giống nhau. Vì bản chất đều trỏ tới phần tử đầu tiên của mảng. Ở đây, cả hai con trỏ trỏ tới phần tử đầu tiên có kích thước 4 bytes. Khi bạn thêm 1 vào chúng, chúng sẽ trỏ tới phần tử thứ 1 của mảng. Do đó kết quả là địa chỉ được cộng thêm 4.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;prime&lt;/code&gt;, ở khía cạnh khác, là 1 con trỏ tới mảng int có kích thước 5. Nó lưu địa chỉ “gốc” của mảng prime[5], địa chỉ này ban đầu bằng với địa chỉ của phần tử đầu tiên của mảng. Tuy nhiên, khi cộng thêm 1 sẽ có kết quả lại là địa chỉ cũ cộng thêm 5 x 4 = 20 bytes.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Tóm lại, arrayName và arrayName[0] trỏ tới phần tử đầu tiên trong khi &amp;amp;arrayName trỏ tới toàn bộ mảng&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Chúng ta có thể truy cập phần tử của mảng khi sử dụng chỉ số như sau:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int prime[5] = {2,3,5,7,11};
for( int i = 0; i &amp;lt; 5; i++)
{
  printf(&quot;Chi so = %d, Dia chi= %d, Gia tri= %d\n&quot;, i, &amp;amp;prime[i], prime[i]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Chúng ta có thể dùng con trỏ, điều này sẽ nhanh hơn sử dụng chỉ số:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int prime[5] = {2,3,5,7,11};
for( int i = 0; i &amp;lt; 5; i++)
{
  printf(&quot;Chi so = %d, Dia chi= %d, Gia tri= %d\n&quot;, i, prime + i, *(prime + i));
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Cả 2 cách đều cho output là:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Chi so= 0, Dia chi= 6422016, Gia tri= 2
Chi so= 1, Dia chi= 6422020, Gia tri= 3
Chi so= 2, Dia chi= 6422024, Gia tri= 5
Chi so= 3, Dia chi= 6422028, Gia tri= 7
Chi so= 4, Dia chi= 6422032, Gia tri= 11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;string&quot;&gt;String&lt;/h4&gt;
&lt;p&gt;Mỗi chuỗi (string) là 1 mảng 1-chiều gồm các ký tự và được kết thúc bởi ký tự null (\0). Khi chúng ta viết &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;char name[] = “ITMO_BRAIN”;&lt;/code&gt; , mỗi ký tự chiếm 1 byte trong bộ nhớ và mặc định ký tự cuối cùng luôn luôn phải là&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tương tự như với mảng chúng ta đã làm phía trên, name và &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;name[0]&lt;/code&gt; trỏ tới ký từ thứ 0 của chuỗi, trong khi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;name&lt;/code&gt;trỏ tới toàn bộ chuỗi. Tương tự, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name[i]&lt;/code&gt; cũng có thể viết thành &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*(name +i)&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;char champions[] = &quot;Liverpool&quot;;

printf(&quot;Địa chỉ của cả chuỗi = %d\n&quot;, &amp;amp;champions);
printf(&quot;Giá trị sau khi thêm 1 %d\n&quot;, &amp;amp;champions + 1);
/* Output */
Địa chỉ của cả chuỗi = 6421974
Giá trị sau khi thêm 1 =  6421984
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printf(&quot;Địa chỉ của phần tử đầu tiên = %d\n&quot;, &amp;amp;champions[0]);
printf(&quot;Giá trị sau khi cộng 1 vào địa chỉ của phần tử đầu tiên  %d\n&quot;, &amp;amp;champions[0] + 1);
/* Output */
Địa chỉ của phần tử đầu tiên = 6421974
Giá trị sau khi cộng 1 vào địa chỉ của phần tử đầu tiên = 6421975
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printf(&quot;Địa chỉ của phần tử đầu tiên = %d\n&quot;, champions);
printf(&quot;Giá trị sau khi cộng 1 vào địa chỉ của phần tử đầu tiên %d\n&quot;, champions + 1);

/* Output */
Địa chỉ của phần tử đầu tiên = 6421974
Giá trị sau khi cộng 1 vào địa chỉ của phần tử đầu tiên 6421975
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printf(&quot;Giá trị của ký tự thứ 4 = %c\n&quot;, champions[4]);
printf(&quot;Giá trị của ký tự thứ 4 dùng con trỏ = %c\n&quot;, *(champions + 4));

/* Output */
Giá trị của ký tự thứ 4 = r
Giá trị của ký tự thứ 4 dùng còn trỏ = r
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;mảng-các-con-trỏ&quot;&gt;Mảng các con trỏ&lt;/h4&gt;
&lt;p&gt;Như một mảng int và mảng char, chúng ta cũng có mảng các con trỏ. Loại mảng này đơn giản là tập hợp của các địa chỉ ô nhớ. Những ô nhớ này có thể trỏ tới các giá trị riêng lẻ hoặc cũng có thể trỏ tới các mảng khác.&lt;/p&gt;

&lt;p&gt;Cú pháp để khai báo mảng con trỏ:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dataType *variableName[size];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* Examples */
int *example1[5]; // khai báo mảng example1 chứa 5 con trỏ kiểu int
char *example2[8];// khai báo mảng example2 chứa 8 con trỏ kiểu char
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;con-trỏ-trỏ-tới-mảng&quot;&gt;Con trỏ trỏ tới mảng&lt;/h4&gt;
&lt;p&gt;Cũng giống như “con trỏ tới int” hoặc “con trỏ tới char”, chúng ta cũng có con trỏ trỏ tới mảng. Loại con trỏ này trỏ tới toàn mảng hoặc các phần tử của mảng đó.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Note: Kiến thức ở phần trước, &amp;amp;arrayName trỏ tới toàn bộ mảng.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Một con trỏ trỏ tới mảng có thể khai báo như sau:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dataType (*variableName)[size];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* Examples */
int (*ptr1)[5];
char (*ptr2)[15];
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Lưu ý: dấu ngoặc tròn () . Nếu không có nó, những gì chúng ta khai báo sẽ trở thành mảng các con trỏ chứ không phải con trỏ trỏ tới mảng.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Trong ví dụ thứ nhất thì ptr1 là con trỏ trỏ tới mảng chứa 5 số nguyên ( 5 integers).&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int goals[] = { 85,102,66,69,67};
int (*pointerToGoals)[5] = &amp;amp;goals;
printf(&quot;Địa chỉ lưu trong pointerToGoals %d\n&quot;, pointerToGoals);
printf(&quot;giá trị %d\n&quot;,*pointerToGoals);

/* Output */
Địa chỉ lưu trong pointerToGoals 6422016
Giá trị 6422016
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Khi chúng ta tham chiếu ngược (dereference) một con trỏ, nó trả lại giá trị lưu trong địa chỉ ô nhớ đó. Tương tự, khi tham chiếu ngược một con trỏ tới mảng, chúng ta có được mảng và tên của mảng trỏ tới địa chỉ gốc. Nếu chúng ta tham chiếu ngược 1 lần nữa, chúng ta sẽ nhận được giá trị lưu trong địa chỉ đó. Chúng ta thử in chúng ra bằng cách sử dụng &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pointerToGoals&lt;/code&gt; nhé.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for(int i = 0; i &amp;lt; 5; i++)
printf(&quot;%d &quot;, *(*pointerToGoals + i));

/* Output */
85 102 66 69 67
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Xem thêm phần 2: &lt;a href=&quot;https://itmobrain.github.io/pointer2&quot;&gt;Sử dụng con trỏ với hàm trong lập trình C&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;kết-bài&quot;&gt;Kết bài&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt; Vậy là chúng ta đã đi qua các định nghĩa, bản chất, lỗi thường gặp, các toán tử cũng như là ứng dụng của con trỏ. Hy vọng bài viết này đã giúp cho các bạn phần nào hiểu thêm về con trỏ và cách sử dụng nó trong lập trình C. Bản thân mình khi học về con trỏ cũng phải nhào nặn lại kiến thức khá nhiều thì mới có thể tận dụng được sức mạnh của nó. Nên các bạn đừng lo lắng hay ngại ngần mà đọc lại bài viết để nắm rõ hơn phần kiến thức hay và quan trọng này nhé!&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
                <pubDate>Wed, 08 Dec 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/pointer</link>
                <guid isPermaLink="true">http://localhost:4000/pointer</guid>
                
                <category>Programming language</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Giới thiệu về Linux và cách cài đặt</title>
                <description>&lt;h3 id=&quot;tại-sao-tôi-chuyển-sang-linux-sau-một-thời-gian-dài-sử-dụng-windows&quot;&gt;Tại sao tôi chuyển sang Linux sau một thời gian dài sử dụng Windows&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/linux0.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hệ điều hành về cơ bản là bộ phận kết nối giữa tương tác người dùng và các thiết bị phần cứng. Thông thường chúng ta sẽ chọn hệ điều hành phù hợp với mục đích sử dụng của riêng mình. 3 lựa chọn cơ bản của chúng ta đó là: &lt;strong&gt;Windows, linux và MacOS.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Với windows chúng ta có 1 hệ điều hành quen thuộc, dễ dùng, dễ chơi game, hỗ trợ office đầy đủ.&lt;/li&gt;
  &lt;li&gt;Với MacOS chúng ta có 1 hệ điều hành đẹp hơn hẳn, không thích hợp chơi game, hỗ trợ office chỉ vừa đủ, nhưng lại được sử dụng phổ biến tại các công ty lập trình lớn, chi phí đắt đỏ hơn hẳn.&lt;/li&gt;
  &lt;li&gt;Với hệ điều hành nhân Linux chúng ta có 1 hệ điều hành tùy biến cao, mặc định hơi sần sùi nhưng theo mình hoàn toàn có thể customer theo ý bạn muốn, có thể nói là xinh lung linh với 1 chút công sức. OFFice, Adobe,Game, phần mềm phổ thông,.. là những thứ thiếu vắng trên Linux, cũng chính là thứ kéo tụt hệ điều hành này so với 2 hệ điều hành kể trên.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Đọc đến đây các bạn chắc cũng đã có lựa chọn của riêng mình về hệ điều hành mình nên chọn. Tuy nhiên, với kinh nghiệm học lập trình của mình. Lời khuyên của mình là các bạn nên trải nghiệm Linux cho lập trình vì các lí do sau đây:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Sự lựa chọn thay thế cho các phần mềm phổ thông:&lt;br /&gt;
Linux thiếu các phần mềm văn phòng: Office, adobe,.. nhưng lựa chọn thay thế là hoàn toàn đủ để các bạn trải nghiệm. Google Docs đang vươn lên là nơi chia sẻ tài liệu, hệ thống quản lý realtime cho phép nhiều người làm việc cùng lúc. Trong quá trình học chắc chắn bạn sẽ phải làm việc nhóm, nơi mà nhiều người cùng sửa 1 tài liệu, hoặc bạn chia sẻ tài liệu cho người khác. Ưu điểm này hoàn toàn xứng đáng để đánh đổi 1 số chức năng bạn không cần thiết. Với việc thiết kế thì Canva là một lựa chọn tốt cho các bạn không chuyên, Canva Pro cho phép bạn làm mọi thứ nhanh hơn nhờ vào các template sẵn, tối ưu các bước thừa, và cũng nhẹ nhàng, không cần cài đặt như Adobe. Bạn nào không có Canva Pro có thể liên hệ mình để sử dụng bản Pro nhé!&lt;/li&gt;
  &lt;li&gt;Linux lại hỗ trợ các phần mềm lập trình đầy đủ:&lt;br /&gt;
Tất cả các công cụ lập trình đều hỗ trợ rất tốt trên Linux. Hầu hết hệ thống server trên thế giới sử dụng linux, hệ thống quản lý cơ sở dữ liệu,.. vận hành trên linux. Windows là lựa chọn số 1 hiện tại cho người dùng cuối, nhưng ở khía cạnh nhà phát triển, lập trình viên thì Linux là số 1.&lt;/li&gt;
  &lt;li&gt;Linux không có game hay các thứ làm bạn phân tâm.&lt;/li&gt;
  &lt;li&gt;Linux là một hệ điều hành nhẹ, tối ưu bộ nhớ tốt, bạn có thể chạy linux trên các phần cứng cũ mà vẫn đạt hiệu suất cao.&lt;/li&gt;
  &lt;li&gt;Linux cung cấp giao diện người dùng đa dạng, khả năng lựa chọn , customer đa dạng. Thay vì chỉ có 1 như windows thì Linux có rất nhiều bản phân phối, đơn vị phát triển, bản thân bạn cũng có thể viết 1 distribution dựa trên nhân Linux và đặt tên của riêng mình.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;thứ-mạnh-mẽ-nhất-trên-linux-terminal&quot;&gt;Thứ mạnh mẽ nhất trên Linux: TERMINAL&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/linux2.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tìm kiếm, phân tích, chia sẻ file, kết nối mạng, bật tắt tác vụ ngầm, giải nén, mã hóa tệp, truy cập máy tính đám mây, chuyển đổi video sang gif, v.v. Đây là một số thao tác có thể thực hiện với dòng lệnh.&lt;/p&gt;
&lt;h4 id=&quot;thao-tác-với-github-đơn-giản-hơn-trên-linux&quot;&gt;Thao tác với github đơn giản hơn trên linux&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/ter1.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;các-dự-án-được-chạy-nhanh-chóng&quot;&gt;Các dự án được chạy nhanh chóng.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/images/ter2.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;câu-lệnh-cơ-bản&quot;&gt;Câu lệnh cơ bản&lt;/h4&gt;
&lt;p&gt;Trong quá trình học tập của mình, hay làm việc lập trình sau này, các thao tác Linux, viết bash hay script trên terminal là một kỹ năng cơ bản. Hãy cùng tìm hiểu một số câu lệnh đơn giản nhé:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv - di chuyển (đổi tên) tệp
cp - sao chép tệp và thư mục
rm - xóa tệp hoặc thư mục
ls - liệt kê nội dung thư mục
pwd - tên in của thư mục hiện tại/làm việc
mkdir - tạo thư mục
rmdir - xóa các thư mục trống, xóa một thư mục
cat - nối các tệp và in trên đầu ra tiêu chuẩn
chown - thay đổi chủ sở hữu tệp và nhóm, thay đổi quyền sở hữu tệp
chmod - thay đổi các bit chế độ tệp, thay đổi quyền của tệp
curl - chuyển một URL
wget - Trình tải xuống mạng không tương tác.
tar - một tiện ích lưu trữ
gzip - nén hoặc mở rộng tệp, loại Linux &apos;WinRar&apos;
ping - gửi ICMP ECHO_REQUEST tới các máy chủ mạng
ps - báo cáo tác vụ đang chạy.
pkill - tra cứu hoặc báo hiệu các quy trình dựa trên tên và các thuộc tính khác
ssh - Ứng dụng đăng nhập từ xa OpenSSH
git - trình quản lý code theo phiên bản
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;cách-cài-đặt-linux-trên-máy-tính-đang-chạy-windows&quot;&gt;Cách cài đặt Linux trên máy tính đang chạy Windows&lt;/h3&gt;
&lt;p&gt;Nếu bạn đang phân vân về việc chuyển sang Linux, nhưng vẫn chưa muốn sự thay đổi diễn ra quá nhanh. Dualboot là một sự lựa chọn tuyệt vời, bạn vẫn có thể dùng Windows, vẫn có thể thử trải nghiệm Linux.
&lt;img src=&quot;/images/linux3.jpeg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tại sao nên chọn Manjaro: Mình đã sử dụng qua khá nhiều distro Linux như: Ubuntu, Fedora, Mint,Pop_OS. Nhưng Manjaro thực sự là một distro tốt với hệ thống phần mềm đầy đủ, cộng đồng hỗ trợ nhiệt tình, ít lỗi,…&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Chuẩn bị ổ đĩa:
Bạn nên chuẩn bị 1 phân vùng trống tầm 60-100GB&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Tải file iso tại đây:
Tải file ISO tại đây: &lt;a href=&quot;https://manjaro.org/download/&quot;&gt;Manjaro Download&lt;/a&gt;
&lt;img src=&quot;/images/Screenshot 2021-11-30 at 15.00.51.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Sử dụng Win32 Disk Imager để tạo USB Boot:
Tải Win32 Disk Imager tại đây: &lt;a href=&quot;https://sourceforge.net/projects/win32diskimager/&quot;&gt;Win32 Disk Imager&lt;/a&gt;
&lt;img src=&quot;/images/linux14.png&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Cài đặt:
&lt;img src=&quot;/images/linux4.jpeg&quot; /&gt;
&lt;img src=&quot;/images/linux5.jpeg&quot; /&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Ở bước phân vùng bạn nên chọn Manual Parted:
&lt;img src=&quot;/images/linux8.webp&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;boot:fat32 2GB
&lt;img src=&quot;/images/linux9.webp&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Swap memory: 8GB
&lt;img src=&quot;/images/linux12.webp&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/:ext4 30GB
&lt;img src=&quot;/images/linux10.webp&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;/home:ext4 còn lại &amp;gt; 30GB. 
&lt;img src=&quot;/images/linux11.webp&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enjoy&quot;&gt;Enjoy!&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/linux7.jpeg&quot; /&gt;&lt;/p&gt;
</description>
                <pubDate>Tue, 30 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/linux</link>
                <guid isPermaLink="true">http://localhost:4000/linux</guid>
                
                <category>Infosec</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Tổng kết buổi 3: Các kiểu dữ liệu số học, string, hàm</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Số lượng thành viên tham gia: 20&lt;br /&gt;
&lt;a href=&quot;https://docs.google.com/presentation/d/18vmXlhGTcHfPYfxhNy5lQ_NMquOS-izw/edit#slide=id.g1049e571a20_2_54&quot;&gt;Link slide buổi học&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=slA5UYaEV2g&quot;&gt;Link record&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.hackerrank.com/contests/test-week-3/challenges&quot;&gt;Link bài tập lớp buổi 3 CPP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.hackerrank.com/contests/bai-tap-tren-lop-buoi-3/challenges&quot;&gt;Link btvn buổi 3 CPP&lt;/a&gt;&lt;br /&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;xử-lý-số-học&quot;&gt;Xử lý số học:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Cách ép kiểu:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(&amp;lt;tên kiểu dữ liệu&amp;gt;) &amp;lt;tên biến&amp;gt;
Ví dụ: double x=9.75; cout&amp;lt;&amp;lt;(int)x; //lúc này x sau khi ép kiểu thì x sẽ bằng 9;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Một số hàm làm tròn cần nhớ:
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ceil() - tự động làm tròn lên
round() - làm tròn theo mốc 0.5
floor() - làm tròn xuống
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;string-xâu&quot;&gt;String (xâu):&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Định nghĩa: là chuỗi ký tự (string) là tập hợp các ký tự được đặt trong dấu ngoặc kép.&lt;/li&gt;
  &lt;li&gt;Khai báo:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;string &amp;lt;tên xâu&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Cách nhập xuất:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;In xâu: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cout&amp;lt;&amp;lt; &amp;lt;tên xâu&amp;gt;;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Nhập xâu (các kí tự liền nhau và không có dấu cách): &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cin&amp;gt;&amp;gt; &amp;lt;tên xâu&amp;gt;;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Nhập xâu gồm các ký tự trong 1 dòng: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getline(cin, &amp;lt;tên xâu &amp;gt;);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Nhập xâu gồm các ký tự trong nhiều dòng: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;getline(cin,  &amp;lt;tên xâu&amp;gt;, &amp;lt;ký tự kết thúc&amp;gt;);&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Các toán tử, method trong String:
    &lt;ul&gt;
      &lt;li&gt;Cú pháp gán xâu S1 bằng xâu S2: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S1=S2;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Cú pháp ghép xâu S2 và cuối xâu S1: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S1+=S2; hoặc S1=S1+S2;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Cú pháp ghép xâu S2 vào đầu xâu S1: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;S1=S2+S1;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;So sánh 2 xâu s1 và s2:
        &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bool kt = (s1==s2); //kt == true nếu s1 = s2 (tất cả các kí tự s1 bằng tất cả các kí tự s2), ngược lại thì kt == false
bool kt = (s1&amp;gt;s2); //kt==true nếu s1 &amp;gt; s2 ngược lại thì kt == false
bool kt = (s1&amp;lt;=s2); //kt==true nếu s1&amp;lt;=s2 ngược lại thì kt == false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;một-số-hàm-cần-nhớ&quot;&gt;Một số hàm cần nhớ:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Trả về số lượng phần tử trong xâu: strlen(&lt;tên xâu=&quot;&quot;&gt;) hoặc &lt;tên xâu=&quot;&quot;&gt;.length()&lt;/tên&gt;&lt;/tên&gt;&lt;/li&gt;
  &lt;li&gt;Đảo ngược xâu từ vị trí i đến vị trí j: reverse(&lt;tên xâu=&quot;&quot;&gt;.begin()+i , &lt;tên xâu=&quot;&quot;&gt;.end() + j);&lt;/tên&gt;&lt;/tên&gt;&lt;/li&gt;
  &lt;li&gt;Chuyển kí tự hoa thành thường: tolower(&lt;kí tự=&quot;&quot;&gt;);&lt;/kí&gt;&lt;/li&gt;
  &lt;li&gt;Chuyển kí tự thường thành hoa: toupper(&lt;kí tự=&quot;&quot;&gt;);&lt;/kí&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;function&quot;&gt;Function:&lt;/h3&gt;
&lt;p&gt;Định nghĩa: là một hàm con thực hiện một nhiệm vụ nào đó và có thể tái sử dụng nhiều lần.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ưu điểm&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dễ bảo trì: Để thay đổi thuật toán, chỉ cần thay đổi  hàm (so với thay đổi  code trên toàn chương trình).&lt;/li&gt;
  &lt;li&gt;Có thể sử dụng lại: Cho phép người khác sử dụng lại hàm bạn đã viết.&lt;/li&gt;
  &lt;li&gt;Dễ đọc: sqrt (5) rõ ràng và dễ hiểu hơn việc viết một thuật toán để tính căn bậc hai.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;code-bài-tập-trên-lớp&quot;&gt;Code bài tập trên lớp:&lt;/h3&gt;
&lt;h4 id=&quot;ghép-xâu&quot;&gt;Ghép xâu&lt;/h4&gt;
&lt;p&gt;Cho 3 xâu s1,s2 và s3. Cho dãy số gồm 3 số 1 ,2 và 3. Bạn hãy ghép 3 xâu theo thứ tự dãy số đã cho sau đó đảo ngược chúng và in ra.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
3 dòng đầu tiên là 3 xâu s1, s2 và s3. Dòng thứ 4 là dãy số gồm 3 số.&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
Các xâu không quá 100 kí tự&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
In kết quả theo yêu cầu đề bài.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xau_s1
xau_s2
xau_s3
2 3 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1s_uax3s_uax2s_uax
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Explanation 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Xâu s1 là &quot;xau_s1&quot;, xâu s2 là &quot;xau_s2&quot;, xâu s3 là &quot;xau_s3&quot;. Thứ tự dãy là 2 3 1, thì t ghép 3 xâu trên theo thứ tự trên được &quot;xau_s2xau_s3xau_s1&quot;. Sau đó đảo ngược lại thành &quot;1s_uax3s_uax2s_uax&quot;. Đây là kết quả của bài.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from kh280174
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
     string s[4];
    
    int x;
    cin &amp;gt;&amp;gt; s[1]&amp;gt;&amp;gt;s[2]&amp;gt;&amp;gt;s[3] ;
    for(int i = 1; i&amp;lt;4 ;i++){
        cin &amp;gt;&amp;gt; x;
        s[0] += s[x] ;
    }
    reverse(s[0].begin(), s[0].end());
    cout &amp;lt;&amp;lt; s[0];

    return 0;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;số-chia-hết-cho-4&quot;&gt;Số chia hết cho 4&lt;/h4&gt;
&lt;p&gt;Cho n test . Mỗi test là một số x (0 &amp;lt; x &amp;lt; 10^100). Kiểm tra xem x có phải là số chia hết cho 4 không?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
Dòng đầu tiên là số n. n dòng tiếp theo, mỗi dòng là một số x.&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
0 &amp;lt; n &amp;lt; 100. 0 &amp;lt; x &amp;lt; 10^100&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
In ra n dòng. Mỗi dòng in ra “true” nếu số x chia hết cho 4, ngược lại in ra “false”.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;10
153535031
635171885
278445144
644698753
786800418
455212671
983977229
38479823
980297149
876644498
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;false
false
true
false
false
false
false
false
false
false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from danghien719
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;

void ChiaHetChoBon (string st) {

    char cNumber[3];
    cNumber[0] = st[st.size() - 2];
    cNumber[1] = st[st.size() - 1];
    int nNumber = atoi(cNumber);

    if (nNumber % 4 == 0) cout &amp;lt;&amp;lt; &quot;true\n&quot;;
    else cout &amp;lt;&amp;lt; &quot;false\n&quot;;
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    int N;
    cin &amp;gt;&amp;gt; N;
    string st[N];
    for (int i=0; i&amp;lt;N; i++) cin &amp;gt;&amp;gt; st[i];
    //
    for (int i=0; i&amp;lt;N; i++) ChiaHetChoBon(st[i]);
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;christmas-tree&quot;&gt;Christmas tree&lt;/h4&gt;
&lt;p&gt;Cho tên 1 người gồm: Họ, tên đệm và tên. Họ , tên đệm và tên đầu vào luôn là 3 từ riêng biệt ngăn cách bởi dấu cách. Hãy chuẩn hóa tên:
Chỉ có chữ đầu tiên trong từ viết hoa, còn lại viết thường.
Các từ ngăn cách nhau bởi 1 dấu cách.
Đổi vị trí họ, tên đệm và tên thành họ, tên và tên đệm.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
1 dòng duy nhất gồm 3 sâu lần lượt là: họ, tên đệm và tên.&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
tổng số lượng kí tự trong 3 xâu không quá 100&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
In ra theo thứ tự họ, tên và tên đệm đã được chuẩn hóa.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;HO TEN_DEM Te.N.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    Ho Ten Tendem
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from thanhv31u
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;
void xoaKiTu(string &amp;amp;a){
    int len = a.length();
    string temp = &quot;&quot;;
    for(int i =0; i &amp;lt; len; i++){
       if ((a[i] &amp;gt;= &apos;a&apos; &amp;amp;&amp;amp; a[i] &amp;lt;= &apos;z&apos;) || (a[i] &amp;gt;= &apos;A&apos; &amp;amp;&amp;amp; a[i] &amp;lt;= &apos;Z&apos;)) {
            temp = temp + a[i];
        }
    }
    a = temp;}
void vietHoa(string &amp;amp;b){
    int len = b.length();
    b[0] = toupper(b[0]) ;
}
int main() {
    string ten[4];
    for(int i =0; i &amp;lt;3; i++){
        string tmp;
        cin&amp;gt;&amp;gt;tmp;
        xoaKiTu(tmp);
        transform(tmp.begin(), tmp.end(), tmp.begin(), ::tolower);
        ten[i] = tmp;
    }
    for(int i=0; i&amp;lt;3; i++){
        vietHoa(ten[i]);
    }

    cout&amp;lt;&amp;lt;ten[0]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;ten[2]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;ten[1];
    
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;đường-link-hữu-ích&quot;&gt;Đường Link hữu ích:&lt;/h4&gt;
&lt;p&gt;https://www.cplusplus.com/reference/string/string/ &lt;br /&gt;
https://github.com/arduino/ArduinoCore-API/blob/master/api/String.cpp&lt;br /&gt;
https://itmobrain.github.io/function-cpp&lt;br /&gt;
https://www.javatpoint.com/cpp-strings&lt;br /&gt;&lt;/p&gt;
</description>
                <pubDate>Sun, 28 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/cpp-3</link>
                <guid isPermaLink="true">http://localhost:4000/cpp-3</guid>
                
                <category>Programming language</category>
                
                <category>Learning</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>09.03.04 Kỹ thuật phần mềm</title>
                <description>&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/admin/thien.jpg&quot; /&gt;
  &lt;em&gt;Lê Ngọc Thiện / &lt;a href=&quot;https://www.facebook.com/thienkaitouz&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Xin chào mọi người, mình tên là Ngọc Thiện, hiện đang là sinh viên năm hai ngành Kỹ thuật phần mềm (09.03.04) tại trường đại học ITMO.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Mã ngành 09.03.04 Kỹ thuật phần mềm thuộc khoa ПИиКТ (Факультет программной инженерии и компьютерной техники), đây cũng là khoa lớn nhất, xét theo số lượng sinh viên đang theo học (số liệu tháng 4 năm 2021). Tuy nhiên bài viết này của mình sẽ chỉ cung cấp một số thông tin về ngành học Kỹ thuật phần mềm và những kinh nghiệm học tập mà anh Võ Minh Thiên Long (sinh viên năm 3 ngành Kỹ thuật phần mềm) đã đúc kết được. Hy vọng từ những thông tin mình tổng hợp được có thể giúp mọi người có cái nhìn tổng quát về ngành này cũng như biết được định hướng của ngành học này tại ITMO qua đó giảm bớt được phần nào những khó khăn.&lt;/p&gt;

&lt;h3 id=&quot;giới-thiệu-về-ngành-kỹ-thuật-phần-mềm&quot;&gt;Giới thiệu về ngành kỹ thuật phần mềm?&lt;/h3&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/ktpm/istockphoto.jpeg&quot; /&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Hãy mở chiếc smartphone của mình ra và các bạn đếm thử xem mình đang sử dụng bao nhiêu ứng dụng để phục vụ nhu cầu cá nhân của bản thân? Có thể bạn chưa để ý nhưng tất cả những ứng dụng đó đều là sản phẩm của lĩnh vực kỹ thuật phần mềm.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Với sự phát triển không ngừng của các thiết bị điện tử ngày nay, ngành này đang ngày một mở rộng và trở nên quen thuộc cũng như gần gũi với cuộc sống của chúng ta hơn bao giờ hết.
“Phần mềm” (Software) là một chương trình hoặc một tập hợp các chương trình cung cấp chức những năng mà người dùng mong muốn. Và “Kỹ thuật” (Engineering) là quá trình thiết kế và xây dựng, vận hành một thứ gì đó phục vụ một mục đích cụ thể và tìm ra giải pháp hiệu quả về chi phí cho các vấn đề. Và “Kỹ thuật phần mềm” (Software Engineering) sẽ là ngành học phù hợp với những ai yêu thích lập trình thuần túy, ‘phần mềm’, ‘chương trình’ hay ‘ứng dụng’ đều là các sản phẩm của việc lập trình.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Kỹ thuật phần mềm là việc áp dụng phương pháp tiếp cận/nghiên cứu có hệ thống, có kỷ luật để thiết kế, phát triển, vận hành và bảo trì một hệ thống phần mềm. - IEEE.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Và chắc bạn cũng biết, chúng ta sử dụng phần mềm mọi lúc mọi nơi: từ ứng dụng văn phòng cơ bản như Microsoft Word, Excel, Powerpoint đến trình duyệt web Chrome, Firefox, Safari hay hệ điều hành bạn đang sử dụng như Windows, Linux, MacOS hay kể cả trang web mà bạn dùng để đọc bài viết này cũng là một dạng của ứng dụng. Vậy nên có thể thấy phần mềm được ứng dụng rất rộng rãi trong rất nhiều lĩnh vực, và do đó có rất nhiều hướng đi để bạn lựa chọn trong ngành này: phần mềm hệ thống, phần mềm mạng và ứng dụng web, phần mềm giải trí (game, mạng xã hội), phần mềm trí tuệ nhân tạo, phần mềm khoa học (vd: ORCAD, PSPICE, AUTOCAD), phần mềm kinh tế, y học….&lt;/p&gt;

&lt;h3 id=&quot;học-tập-tại-itmo-như-thế-nào&quot;&gt;Học tập tại ITMO như thế nào?&lt;/h3&gt;
&lt;p&gt;Tại ITMO, mã ngành 09.03.04 (Kỹ thuật phần mềm) được chia thành 3 chuyên ngành:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Chuyên ngành 1: &lt;strong&gt;Компьютерные технологии в дизайне (Công nghệ máy tính trong thiết kế)&lt;/strong&gt;&lt;br /&gt;
Mục tiêu chính của chuyên ngành này là đào tạo các chuyên gia trong lĩnh vực công nghệ thông tin và đa phương tiện, lập trình và thiết kế. Chương trình của chuyên ngành được chia thành hai hướng:
    &lt;ul&gt;
      &lt;li&gt;1.«Разработка графических и веб-приложений» (tạm dịch: Thiết kế đồ họa và thiết kế ứng dụng web): sẽ được tìm hiểu các kiến thức về bố cục web, kiểu chữ,.. (frontend), thiết kế giao diện ứng dụng, giao diện game cũng như các hệ thống xử lý hình ảnh, tìm hiểu về công nghệ thực tế ảo (VR), thực tế tăng cường (AR), thực tế hỗn hợp (MR);&lt;/li&gt;
      &lt;li&gt;2.«Трехмерное моделирование и промышленный дизайн» (tạm dịch: Lập trình 3D và Thiết kế Công nghiệp) tìm hiểu về mô hình 3D và đồ họa kỹ thuật (hệ thống CAD/CAM), nâng cao kỹ năng vẽ, thiết kế, cũng như kiến thức trong lĩnh vực thiết kế công nghiệp.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/ktpm/Screenshot 2021-11-26 at 16.39.40.png&quot; /&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Chuyên ngành 2: &lt;strong&gt;Нейротехнологии и программирование (Công nghệ thần kinh và lập trình)&lt;/strong&gt;&lt;br /&gt;
Chương trình của chuyên ngành này mục tiêu là đào tạo nên những lập trình viên có khả năng phát triển và triển khai các công nghệ thần kinh. Sinh viên sẽ học lập trình bằng các ngôn ngữ: Java, C / C ++, Python, JavaScript, PHP, v.v., sử dụng HTML5, CSS3, XML, XSL, ECMAScript, Ajax; các gói phần mềm: Adobe Creative Suite, CorelDRAW, Sound Forge, 3ds Max, v.v.; công nghệ về cơ sở dữ liệu: Oracle Database, MySQL, MongoDB, Apache Derby, Berkeley DB, v.v.; kết hợp cùng với sinh lý học thần kinh: Open BCI, BioRadio Human Physiology Kit, ….&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/ktpm/Screenshot 2021-11-26 at 16.39.49.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Đây là chuyên ngành mà mình đã chọn nên mình sẽ nói kỹ hơn một chút.&lt;/strong&gt; &lt;br /&gt;
Đây là chương trình khá mới tại ITMO (bắt đầu từ năm 2017), và cũng là chương trình đầu tiên tại Nga về sự kết hợp giữ đào tạo về Công nghệ thần kinh và Lập trình. Công nghệ thần kinh: bao gồm những phương pháp giao tiếp với hệ thần kinh thông qua các thiết bị điện tử, xử lý các tín hiệu điện từ vỏ não, khuếch đại chúng để có thể theo dõi hoặc điều chỉnh các hoạt động thần kinh. Hiện nay công nghệ thần kinh đã được ứng dụng trong y học (vd: thiết bị cho phép bệnh nhân bị liệt và vận động viên thể thao điều khiển bộ xương bằng cách sử dụng điện não đồ, tức sóng não: https://neurobotics.ru/), quốc phòng, giải trí (VR brain games) , và giáo dục. Công nghệ thần kinh đứng ở vị trí giao thoa giữa tâm lý học, y học và khoa học kỹ thuật, vì vậy để đáp ứng nhu cầu của lĩnh vực này, một lập trình viên giỏi là chưa đủ, bạn phải biết hệ thống thần kinh trung ương hoạt động như thế nào, hiểu các chức năng của não và các phương tiện để theo dõi tín hiệu của nó,… Và chương trình này được sinh ra để đáp ứng nhu cầu đó của thị trường lao động.&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/ktpm/Screenshot 2021-11-26 at 16.40.01.png&quot; /&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Chuyên ngành 3: &lt;strong&gt;Системное и прикладное программное обеспечение (Hệ thống và phần mềm)&lt;/strong&gt;&lt;br /&gt;
Mục tiêu của chuyên ngành là đào tạo các chuyên gia đẳng cấp thế giới để hình thành nguồn nhân lực trong lĩnh vực tạo nên các nền tảng phần mềm, bao gồm cả hệ thống mạng vật lý và nền kinh tế kỹ thuật số, những lĩnh vực phát triển công nghệ máy tính được thế giới công nhận. Trong quá trình đào tạo, sinh viên sẽ được tìm hiểu về các phương pháp trong thiết kế, phát triển và kiểm thử phần mềm bằng Java, C #, C ++ và các ngôn ngữ khác. Tập trung tìm hiểu cách hoạt động của các hệ điều hành và framework, trình biên dịch, cơ sở dữ liệu và mạng máy tính. Trên cơ sở đó, sinh viên có thể tạo nên phần mềm trên bất kỳ nền tảng nào. Bên cạnh đó, còn được tìm hiểu về nhiều vấn đề liên quan khác như: Làm cách nào để khắc phục sự cố hiệu suất trong một ứng dụng được truy cập nhiều? Làm thế nào để phát triển một nền tảng trong công nghiệp hoặc giải trí có tích hợp công nghệ VR &amp;amp; AR?,….&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/ktpm/p9352.jpeg&quot; /&gt;
&lt;/div&gt;

&lt;h3 id=&quot;học-tập&quot;&gt;Học tập&lt;/h3&gt;
&lt;p&gt;Ở năm học đầu tiên, mọi người sẽ được học chủ yếu là các môn Đại cương như Toán, Lý, Sử,… Bên cạnh đó là những môn nền tảng như Toán rời rạc, Lập Trình, Tin học. Đối với môn Lập trình, kỳ đầu tiên mọi người sẽ được học về C++ cơ bản và Java, OOP. Sang kỳ hai, mọi người sẽ ứng dụng những kiến thức của kỳ một tạo nên một project hoàn chỉnh, bao gồm cả cách phân tích, thiết kế và quản lý dự án. Ở năm học này, nên tập trung học các môn Lập trình (Программирование), Tin học (Информатика), Toán Rời rạc (Дискретная математика). Đây sẽ là những môn học nền tảng cho mọi người ở những năm tiếp theo. Bên cạnh đó, cần rèn luyện tiếng Nga, vì phần lớn giáo viên chỉ sử dụng tiếng Nga, rất ít thầy cô có thể sử dụng tốt tiếng Anh.&lt;/p&gt;

&lt;p&gt;Sang năm 2, mọi người sẽ bắt đầu học một số môn chuyên ngành sâu hơn như: Ngôn ngữ lập trình (ngôn ngữ C), Lập trình Web (Java), Giải thuật và Cấu trúc dữ liệu,… Kết thúc năm 2, sẽ bắt đầu phân chuyên ngành con (специализация). Khoa sẽ có thông báo chi tiết hơn về nội dung học, cũng như là đối tượng học. Việc chọn môn sẽ tuỳ theo định hướng và khả năng của mỗi người.&lt;/p&gt;

&lt;p&gt;Đến năm 3, sau khi đã phân chia chuyên ngành, bên cạnh một số môn chung của ngành như Hệ điều hành, Mạng máy tính, … thì mọi người sẽ học thêm các môn riêng của chuyên ngành con.&lt;/p&gt;

&lt;h3 id=&quot;tản-mạn&quot;&gt;Tản mạn&lt;/h3&gt;

&lt;p&gt;Bài viết này mình sẽ không nói cụ thể về triển vọng nghề nghiệp của ngành này hay xu hướng việc làm sau khi tốt nghiệp, vì như mình cũng đã nêu ở trên, ngành này đã, đang và sẽ được áp dụng vào rất rất nhiều lĩnh vực, và mỗi lĩnh vực đều có những yêu cầu và trải nghiệm riêng. Bên cạnh đó, kiến thức chương trình học ở bậc cử nhân cũng rất rộng, nên sẽ có rất nhiều vị trí công việc phù hợp với khả năng cũng như định hướng của bạn: Software engineer, Developer, Software tester, Application/Systems analyst, UX/UI designer,… Thay vào đó, mình xin được chia sẻ góc nhìn của bản thân đối với ngành này.&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
&lt;p align=&quot;center&quot;&gt;
    &lt;img src=&quot;/images/ktpm/download.png&quot; /&gt;
&lt;/p&gt;
&lt;/div&gt;

&lt;p&gt;Khi mình còn nhỏ, mình đã luôn muốn trở thành một nhà phát minh, đi tìm kiếm những vấn đề xung quanh cuộc sống, rồi thiết kế và xây dựng những công cụ để có thể giải quyết những vấn đề đấy, đóng góp gì đó cho nhân loại =)). Đến khi được tiếp xúc và rồi bắt đầu tìm hiểu về lập trình thì mình nhận ra, có một cách khác đơn giản hơn để có thể biến ước mơ đấy của mình thành hiện thực. Bạn chỉ cần một chiếc máy tính, kết nối Internet, là đã có thể tạo ra những sản phẩm tác động tích cực đến cuộc sống của mọi người trên khắp thế giới. Lập trình cũng không chỉ nhàm chán và đơn điệu như mình từng nghĩ, đây thật sự là một ngành đầy tính sáng tạo, nó giống như việc giải một câu đố, đầy thách thức nhưng cũng rất kích thích tinh thần, tạo động lực để giải quyết vấn đề.&lt;br /&gt; Công nghệ trong ngành phát triển phần mềm cũng thay đổi một cách chóng mặt, nên bạn phải cố gắng tiến hóa để có thể thích nghi được. Nhưng cũng nhờ đấy, được tiếp cận với những công nghệ mới nhất, thay đổi theo từng ngày, bạn sẽ có thể cảm nhận được, thế giới này đang phát triển nhanh chóng như thế nào, cảm nhận được hàng ngàn những lập trình viên khác đang nỗ lực, đóng góp như thế nào để có thể cải thiện cuộc sống của mọi người.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Hy vọng với góc nhìn này cùng những chia sẻ ở trên, có thể giúp bạn có thêm động lực để theo đuổi ngành Kỹ thuật phần mềm. Cảm ơn mọi người đã đọc hết bài viết này ! Trên đây là những chia sẻ của mình và anh Long đang theo học ngành Kỹ thuật phần mềm. Chúng mình rất mong nhận được phản hồi của các bạn. &amp;lt;3 &amp;lt;3 &amp;lt;3 !&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;nguồn&quot;&gt;Nguồn:&lt;/h4&gt;
&lt;p&gt;https://scs.ifmo.ru/ru/page/21723/programmy-razvitiya-i-dokumentaciya.htm
https://news.itmo.ru/en/education/students/news/6526/
https://abit.itmo.ru/file/files/617/617.pdf
https://en.wikipedia.org/wiki/Software_engineering
https://news.itmo.ru/en/education/trend/news/9021/&lt;/p&gt;
</description>
                <pubDate>Thu, 25 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/software-engineer</link>
                <guid isPermaLink="true">http://localhost:4000/software-engineer</guid>
                
                <category>итмо_факультет</category>
                
                
                <category>ITMO</category>
                
            </item>
        
            <item>
                <title>Giới thiệu về Hàm CPP</title>
                <description>&lt;h3 id=&quot;giới-thiệu-về-hàm-function-trong-c&quot;&gt;Giới thiệu về hàm (function) trong C++&lt;/h3&gt;
&lt;p&gt;Trong bài viết này chúng ta cùng tìm hiểu về hàm và biểu thức hàm thông qua các ví dụ.
Trước tiên, hàm là một khối mã thực hiện một nhiệm vụ cụ thể.
Giả sử chúng ta cần tạo một chương trình để vẽ một hình tròn và tô màu cho nó. Chúng ta có thể tạo hai hàm để giải quyết vấn đề này:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Hàm để vẽ hình tròn.&lt;/li&gt;
  &lt;li&gt;Hàm để tô màu cho hình tròn.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Việc chia một vấn đề thành nhiều vấn đề nhỏ hơn giúp chương trình dễ hiểu hơn và có thể tái sử dụng.
Hàm có 2 loại:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Hàm chuẩn, đã được định nghĩa trước ở trong C++.&lt;/li&gt;
  &lt;li&gt;Hàm do người dùng tự định nghĩa.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Trong bài này chúng ta sẽ đi sâu vào các hàm do người tự định nghĩa.&lt;/p&gt;
&lt;h3 id=&quot;hàm-do-người-dùng-tự-định-nghĩa&quot;&gt;Hàm do người dùng tự định nghĩa&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;C++ cho phép lập trình viên tự định nghĩa hàm của riêng họ.&lt;/li&gt;
  &lt;li&gt;Trong hàm sẽ chứa những đoạn mã thực hiện một nhiệm vụ cụ thể nào đó và được đặt tên bởi lập trình viên.&lt;/li&gt;
  &lt;li&gt;Khi hàm được gọi từ bất kì phần nào của chương trình, tất cả các đoạn mã nằm trong nó sẽ được thực thi.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;khai-báo-hàm-c&quot;&gt;Khai báo hàm C++&lt;/h3&gt;
&lt;p&gt;Cú pháp tổng quát để khai báo một hàm là:
&lt;img src=&quot;/images/func_Cpp/Untitled.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Và đây là ví dụ về khai báo hàm
&lt;img src=&quot;/images/func_Cpp/Untitled1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ở đây, chúng ta có:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Tên của hàm là greet()&lt;/li&gt;
  &lt;li&gt;Kiểu trả về của hàm là void&lt;/li&gt;
  &lt;li&gt;Dấu ngoặc đơn trống () có nghĩa là không có bất kì một tham số nào được truyền vào&lt;/li&gt;
  &lt;li&gt;Phần thân hàm (đoạn mã) sẽ được viết bên trong {}&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;gọi-một-hàm&quot;&gt;Gọi một hàm&lt;/h3&gt;
&lt;p&gt;Trong chương trình trên chúng ta đã khai báo một hàm có tên greet(). Để sử dụng hàm greet(), chúng ta cần gọi nó.
Và đây là cách chúng ta có thể gọi hàm greet() trên.
&lt;img src=&quot;/images/func_Cpp/Untitled2.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Cách hoạt động của hàm trong C++
&lt;img src=&quot;/images/func_Cpp/Untitled3.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ví dụ 1: Hiển thị văn bản
&lt;img src=&quot;/images/func_Cpp/Untitled4.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Đầu ra
&lt;img src=&quot;/images/func_Cpp/Untitled5.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Khai báo hàm với tham số
Như đã đề cập ở trên, một hàm có thể khai báo với các tham số (đối số). Tham số là một giá trị được truyền vào khi khai báo một hàm. 
Ví du, chúng ta cùng xem xét hàm sau:
&lt;img src=&quot;/images/func_Cpp/Untitled6.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Biến num là tham số hàm với kiểu dữ liệu được truyền vào là int.	
Cách truyền một giá trị cho hàm khi gọi hàm:
&lt;img src=&quot;/images/func_Cpp/Untitled7.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;VÍ dụ 2: Khai báo hàm với nhiều tham số
&lt;img src=&quot;/images/func_Cpp/Untitled8.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;đầu-ra&quot;&gt;Đầu ra&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/func_Cpp/Untitled9.png&quot; /&gt;
Trong chương trình trên, chúng ta đã sử dụng một hàm với một tham số có kiểu int và một tham số có kiểu float.
Sau đó chúng ta truyền vào hàm biến num1 và num2 dưới dạng đối số. Các giá trị này được lưu trữ bởi các tham số hàm n1 và n2 tương ứng. 
&lt;img src=&quot;/images/func_Cpp/Untitled10.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Lưu ý: Kiểu của các đối số được truyền trong khi gọi hàm phải khớp với các tham số tương ứng được xác định trong khai báo hàm.&lt;/p&gt;

&lt;h3 id=&quot;return-trong-hàm&quot;&gt;Return trong hàm&lt;/h3&gt;
&lt;p&gt;Trong các chương trình trên chúng ta đã sử dụng kiểu void để khai báo hàm. Điều này có nghĩa là hàm không thể trả về bất kì một giá trị nào. 
Trong C++ thì hàm cũng có thể trả về một giá trị. Để làm điều này chúng ta cần xác định returnType của hàm trong khi khai báo hàm.
Sau đó dùng return  để trả về một giá trị từ hàm.
Ví dụ:
&lt;img src=&quot;/images/func_Cpp/Untitled11.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ở đây chúng ta có kiểu dữ liệu của hàm là int thay vì void. Điều này có nghĩa là hàm trả về một giá trị int.
Đoạn mã return(a+b) trả về tổng của hai tham số dưới dạng giá trị của hàm.
Dòng lệnh return thể hiện rằng chức năng đã kết thúc. Bất kì mã nào sau khi return bên trong hàm sẽ không được thực thi.&lt;/p&gt;

&lt;p&gt;Ví dụ 3: Cộng hai số
&lt;img src=&quot;/images/func_Cpp/Untitled12.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;đầu-ra-1&quot;&gt;Đầu ra&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/func_Cpp/Untitled13.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tròn chương trình trên, hàm add() dùng để tính tổng hai số.
Chúng ta truyền vào trong hàm 2 đối số kiểu int với giá trị 100 và 78 trong khi gọi hàm.
Chúng ta lưu giữ giá trị trả về của hàm trong biến sum, và sau đó in ra nó. 
&lt;img src=&quot;/images/func_Cpp/Untitled14.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;nguyên-mẫu-hàm-function-prototype&quot;&gt;Nguyên mẫu hàm (function prototype)&lt;/h3&gt;
&lt;p&gt;Trong C++, mã khai báo hàm phải ở trước lệnh gọi hàm. Tuy nhiên, nếu chúng ta muốn định nghĩa một hàm sau lời gọi hàm, chúng ta cần sử dụng nguyên mẫu hàm.
Ví dụ.
&lt;img src=&quot;/images/func_Cpp/Untitled15.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Trong đoạn mã trên, nguyên mẫu hàm là: 
&lt;img src=&quot;/images/func_Cpp/Untitled16.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Điều này cung cấp cho trình biên dịch về tên hàm và các thông số của nó. Đó là lý do vì sao chúng ta có thể sử dụng mã để gọi một hàm trước khi hàm đã được xác định. 
Cú pháp của một nguyên mẫu hàm là:
&lt;img src=&quot;/images/func_Cpp/Untitled17.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ví dụ 4: Nguyên mẫu hàm C++
&lt;img src=&quot;/images/func_Cpp/Untitled18.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;output:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/func_Cpp/Untitled19.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chương trình trên gần như giống với ví dụ 3. Điều khác biệt duy nhất ở đây là hàm được định nghĩa sau khi gọi hàm. 
Đó là lý do vì sau chúng ta sử dụng nguyên mẫu hàm trong ví dụ này.&lt;/p&gt;

&lt;h3 id=&quot;lợi-ích-của-việc-sử-dụng-các-hàm-do-người-dùng-xác-định&quot;&gt;Lợi ích của việc sử dụng các hàm do người dùng xác định&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Các hàm có thể sử dụng lại. Chúng ta có thể khai báo chúng một lần và sử dụng chúng nhiều lần.&lt;/li&gt;
  &lt;li&gt;Các hàm làm cho chương trình dễ dàng hơn vì mỗi tác vụ nhỏ được chia thành một hàm.&lt;/li&gt;
  &lt;li&gt;Các hàm giúp đọc dễ hiểu hơn.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;các-chức-năng-của-thư-viện-c-&quot;&gt;Các chức năng của thư viện C ++&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Các hàm thư viện là các hàm có sẵn trong lập trình C ++.&lt;/li&gt;
  &lt;li&gt;Người lập trình có thể sử dụng các hàm thư viện bằng cách gọi các hàm trực tiếp Họ không cần phải tự viết các hàm.&lt;/li&gt;
  &lt;li&gt;Một số chức năng thư viện phổ biến trong C ++ là sqrt(), abs(), isdigit(), vv&lt;/li&gt;
  &lt;li&gt;Để sử dụng các hàm thư viện, chúng ta thường cần bao gồm tệp tiêu đề trong đó các hàm thư viện này được định nghĩa.&lt;/li&gt;
  &lt;li&gt;Ví dụ, để sử dụng các hàm toán học như sqrt() và abs(), chúng ta cần bao gồm tệp tiêu đề cmath.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ví dụ 5: Chương trình C++ tìm căn bậc 2 của một số
&lt;img src=&quot;/images/func_Cpp/Untitled20.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Đầu ra&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/func_Cpp/Untitled21.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Trong chương trình này, hàm thư viện sqrt() được sử dụng để tính căn bậc hai của một số.
Khai báo hàm của sqrt() được định nghĩa trong cmath tệp tiêu đề. Đó là lý do tại sao chúng ta cần sử dụng mã #include &lt;cmath&gt; để sử dụng hàm sqrt().&lt;/cmath&gt;&lt;/p&gt;

&lt;h3 id=&quot;lời-kết&quot;&gt;Lời kết&lt;/h3&gt;
&lt;p&gt;Như vậy là chúng mình đã giới thiệu cụ thể cho các bạn thế nào là hàm trong C++ qua các ví dụ, có những loại hàm gì và chúng được sử dụng như thế nào. 
Hi vọng bài viết này đã mang đến cho các bạn những kiến thức mới mẻ và thú vị. Đừng quên ôn tập lại những gì các bạn đã học được nhé. Good luck!&lt;/p&gt;

</description>
                <pubDate>Tue, 23 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/function-cpp</link>
                <guid isPermaLink="true">http://localhost:4000/function-cpp</guid>
                
                <category>Programming language</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Tổng kết buổi 2</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Số lượng thành viên tham gia: 26&lt;br /&gt;
&lt;a href=&quot;https://docs.google.com/presentation/d/11Xwe1lzVH1Vg5_bbok9VV90F1DiVSqN2/edit?usp=sharing&amp;amp;ouid=105791949291394407664&amp;amp;rtpof=true&amp;amp;sd=true&quot;&gt;Link slide buổi học&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://www.youtube.com/watch?v=xbdKMIOqEMw&quot;&gt;Link record&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;www.hackerrank.com/itmo-brain-cpp-2&quot;&gt;Link bài tập lớp buổi 2 CPP&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;www.hackerrank.com/itmo-brain-btvn-2&quot;&gt;Link btvn buổi 2 CPP&lt;/a&gt;&lt;br /&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nội-dung-chia-sẻ&quot;&gt;Nội dung chia sẻ:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Giới thiệu về mảng&lt;/li&gt;
  &lt;li&gt;Giới thiệu về các vòng lặp:
    &lt;ul&gt;
      &lt;li&gt;Vòng lặp for.&lt;/li&gt;
      &lt;li&gt;Vòng lặp while do.&lt;/li&gt;
      &lt;li&gt;Vòng lặp do while.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Một số lệnh thường dùng trong vòng lặp:
    &lt;ul&gt;
      &lt;li&gt;break&lt;/li&gt;
      &lt;li&gt;continue&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mảng&quot;&gt;Mảng&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Định nghĩa: Mảng là tập hợp các phần tử cùng kiểu được lưu trữ tuần tự trong bộ nhớ.&lt;/li&gt;
  &lt;li&gt;Cách khai báo: Type arrayName[dimension];
    - Ví dụ: int a[5]; char a[26];&lt;/li&gt;
  &lt;li&gt;Truy cập vào phần tử thứ i của mảng: arrayName[i]&lt;/li&gt;
  &lt;li&gt;Lưu ý:
    &lt;ul&gt;
      &lt;li&gt;Chỉ số mảng bắt đầu từ 0, 1, 2, 3, 4, … , n-1&lt;/li&gt;
      &lt;li&gt;Nếu gọi phần tử không nằm trong mảng thì sẽ nhận về giá trị bất kì(Buffer overflow).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Mảng hai chiều: type arrayName[dimesion][dimesion];&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;vòng-lặp-for&quot;&gt;Vòng lặp For&lt;/h3&gt;
&lt;h4 id=&quot;cấu-trúc&quot;&gt;Cấu trúc:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for(initialization; condition; incrementation)
{
        	Statement 1;
        	Statement 2;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;ví-dụ&quot;&gt;Ví dụ:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for(int i=1;i&amp;lt;=n;i++)
{
        	res+=1;
        	cout&amp;lt;&amp;lt;res&amp;lt;&amp;lt;” “;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;giải-thích-ví-dụ&quot;&gt;Giải thích ví dụ:&lt;/h4&gt;
&lt;p&gt;Đầu tiên t khai báo biến điểm và gán giá trị: int i = 1;&lt;br /&gt;
Điều kiện để vòng for chạy là i&amp;lt;=5; tức là i còn nhỏ hơn hoặc bằng 5 thì còn chạy.&lt;br /&gt;
Tăng i sau mỗi lần thực hiện các câu lệnh ở trong {}.&lt;/p&gt;

&lt;h3 id=&quot;vòng-lặp-while-do&quot;&gt;Vòng lặp while do&lt;/h3&gt;
&lt;h4 id=&quot;cấu-trúc-1&quot;&gt;Cấu trúc:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;while (condition)
{
        	Statement(s);
        	Updation;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;ví-dụ-1&quot;&gt;Ví dụ:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cin&amp;gt;&amp;gt;x; sl=0;
while (x&amp;gt;0)
{
        	x/=10;
        	sl++;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;giải-thích-ví-dụ-1&quot;&gt;Giải thích ví dụ:&lt;/h4&gt;
&lt;p&gt;Đầu tiên nhập x và gán sl=0;&lt;br /&gt;
Vòng while sẽ xét điều kiện trước rồi mới thực hiện các câu lệnh trong {},&lt;br /&gt; tức là x &amp;gt; 0 tức là x còn lớn hơn 0 thì còn thực hiện các câu lệnh trong ngoặc.&lt;/p&gt;

&lt;h3 id=&quot;vòng-lặp-do-while&quot;&gt;Vòng lặp do while&lt;/h3&gt;
&lt;h4 id=&quot;cấu-trúc-2&quot;&gt;Cấu trúc:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;do
{
 
} while (condition)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;ví-dụ-2&quot;&gt;Ví dụ:&lt;/h4&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;n=-5;
do
{
	n++;
}while(n&amp;gt;0)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;giải-thích-ví-dụ-2&quot;&gt;Giải thích ví dụ:&lt;/h4&gt;
&lt;p&gt;Đầu tiên gán n=-5&lt;br /&gt;
Vòng do while sẽ thực hiện các câu lệnh trong {} trước rồi mới xét điều kiện&lt;/p&gt;

&lt;h3 id=&quot;lệnh-thường-dùng&quot;&gt;Lệnh thường dùng:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Break; - thoái khỏi vòng lặp.&lt;/li&gt;
  &lt;li&gt;Continue; bỏ qua các câu lệnh phía dưới trong vòng lặp và nhảy tới lần lặp tiếp theo.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;bảng-xếp-hạng-hackerrank&quot;&gt;Bảng xếp hạng Hackerrank:&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/Screenshot 2021-11-21 at 19.38.58.png&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;code-bài-tập-trên-lớp&quot;&gt;Code bài tập trên lớp:&lt;/h3&gt;
&lt;h4 id=&quot;số-nguyên-tố&quot;&gt;Số nguyên tố&lt;/h4&gt;
&lt;p&gt;Định nghĩa: số nguyên tố là số lớn hơn 1 và chỉ chia hết cho 1 và chính nó. Hãy viết một chương trình kiểm tra xem một số nhập từ bàn phím có phải số nguyên tố không.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
một số tự nhiên N&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
Subtask 1 (80% testcases): N &amp;lt; 100000000&lt;br /&gt;
Subtask 2 (20% testcases): N &amp;lt; 10000000000000000&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
In ra YES nếu đầu vào là số nguyên tố, NO nếu đầu vào không phải là số nguyên tố.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;YES
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from kh280174
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;


int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    long N, b=0;
    cin &amp;gt;&amp;gt; N;
    if(N==2){cout&amp;lt;&amp;lt;&quot;YES&quot;; return 0;};
    if(N&amp;lt;2){cout&amp;lt;&amp;lt;&quot;NO&quot;; return 0;};
    if(N&amp;gt;2){
        for( int i=2; i&amp;lt;=sqrt(N); i++){
        if(N%i==0){b=1;};
    }};
    if(b==1){cout&amp;lt;&amp;lt;&quot;NO&quot;;}
    else cout&amp;lt;&amp;lt;&quot;YES&quot;;
    return 0; 
    return 0;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;vẽ-hình-chữ-nhật&quot;&gt;Vẽ hình chữ nhật&lt;/h4&gt;
&lt;p&gt;Vẽ một hình chữ nhật nằm thẳng đứng (độ cao sẽ là chiều dài của hình chữ nhật), từ hai số N, M đại diện cho kích thước của hình đấy.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
N, M&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
1 &amp;lt; N, M &amp;lt; 1000&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
hình chữ nhật vẽ bằng ký tự “*“&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5 7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;*****
*****
*****
*****
*****
*****
*****
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from tranduybthv
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;


int main() {
    int a,b;
    cin &amp;gt;&amp;gt;a&amp;gt;&amp;gt;b;
    if(a&amp;gt;b){
        int temp = a;
        a=b;
        b=temp;
    }
    for(int i =0; i&amp;lt;b;i++ ){
        for(int j =0; j&amp;lt;a;j++ ){
            cout &amp;lt;&amp;lt;&quot;*&quot;;
        }
        cout &amp;lt;&amp;lt;endl;
    }   
    return 0;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;christmas-tree&quot;&gt;Christmas tree&lt;/h4&gt;
&lt;p&gt;Vẽ một cây thông noel, có độ cao của phần lá là N, và phần gốc có độ cao cùng với độ rộng là số lẻ gần với N/4 nhất (nếu tồn tại hai số lẻ cùng khoảng cách đến N/4 thì chọn số lớn hơn);&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Input Format:&lt;/strong&gt;&lt;br /&gt;
Một số nguyên N là độ cao của phần lá.&lt;br /&gt;
&lt;strong&gt;Constraints&lt;/strong&gt;&lt;br /&gt;
1 &amp;lt; N &amp;lt; 1000&lt;br /&gt;
&lt;strong&gt;Output Format&lt;/strong&gt;&lt;br /&gt;
Một cây thông được vẽ bằng những dấu *&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;           *
          ***
         *****
        *******
       *********
      ***********
     *************
    ***************
   *****************
  *******************
 *********************
***********************
          ***
          ***
          ***
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Sample Input 0&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;17
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Sample Output 0:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;                *
               ***
              *****
             *******
            *********
           ***********
          *************
         ***************
        *****************
       *******************
      *********************
     ***********************
    *************************
   ***************************
  *****************************
 *******************************
*********************************
              *****
              *****
              *****
              *****
              *****
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// from nguyenkhanhly111
#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;


int main() {
    int n;
    cin&amp;gt;&amp;gt;n;
    for(int i=0; i&amp;lt;n; i++)
    {
        for(int j=1; j&amp;lt;n-i; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}
        for(int j=0; j&amp;lt;i*2+1; j++) {cout&amp;lt;&amp;lt;&quot;*&quot;;}
        for(int j=1; j&amp;lt;n-i; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}  
        cout&amp;lt;&amp;lt;&quot;\n&quot;;
    }
    int than_cay = int(n/4) + int(int(n/4)%2 == 0);
    for(int i=0; i&amp;lt;than_cay; i++)
    {
        for(int j=0; j&amp;lt;n-int(than_cay/2)-1; j++) {cout&amp;lt;&amp;lt;&quot; &quot;;}
        for(int j=0; j&amp;lt;than_cay; j++) {cout&amp;lt;&amp;lt;&quot;*&quot;;}
        cout&amp;lt;&amp;lt;&quot;\n&quot;;
    }
    
    return 0;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;đường-link-hữu-ích&quot;&gt;Đường Link hữu ích:&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://habr.com/ru/post/495444/&quot;&gt;Массивы в C++&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://medium.com/quick-code/a-simple-guide-to-for-while-and-do-while-loops-in-c-c1b3b236d8cb&quot;&gt;A Simple Guide to For, While, and Do While Loops in C++&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://betterprogramming.pub/stop-using-i-in-your-loops-1f906520d548&quot;&gt;Stop Using i++ in Your Loops&lt;/a&gt;&lt;br /&gt;&lt;/p&gt;
</description>
                <pubDate>Sun, 21 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/cpp-buoi2</link>
                <guid isPermaLink="true">http://localhost:4000/cpp-buoi2</guid>
                
                <category>Programming language</category>
                
                <category>Learning</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
            <item>
                <title>Master Google Search</title>
                <description>&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Hello xin chào tất cả các bạn. Mình là Mạnh, cũng như các sinh viên khác mình sử dụng google rất nhiều. Sau quá trình googlelist nhiều năm, mình đã luyện được khá nhiều bí kíp võ công, giúp bản thân thành công xử lý các tiên sinh khó tính ở trường. Bí kíp này mình sẽ giữ cho riêng mình và không chia sẻ cho ai hết nhé. Tạm biệt các bạn! Kết bài đi anh Tuấn ơi! &lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Hê lô mọi người! Mình là Tuấn, mình mới trộm được quyển bí kíp của Mạnh. Nay mạnh dạn chia sẻ cho mọi người, mọi người thấy hay vui lòng gửi ít tiền vào tk: 210397290703&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ông lớn công nghệ Google hiện nay sở hữu công cụ tìm kiếm lớn nhất trên thế giới. Bất cứ thông tin, hình ảnh, video, địa điểm bạn hoàn toàn có thể sử dụng bộ tìm kiếm trên Google, kết quả sẽ có chỉ sau vài giây nhanh nhất. Và thao tác nhập nội dung tìm kiếm trên thanh Search của Google thì chắc chắn ai cũng biết. Tuy nhiên, nếu chúng ta muốn tìm những kết quả phức tạp hơn, chính xác hơn thì cần đến một vài những thủ thuật cần thiết trên Google&lt;/p&gt;
&lt;h3 id=&quot;searching-using-site&quot;&gt;Searching using Site:&lt;/h3&gt;
&lt;p&gt;Với sử dụng &lt;code&gt;site&lt;/code&gt; trong tìm kiếm cho phép bạn thực hiện tìm kiếm trên google cho một trang web cụ thể. bạn cũng có thể sử dụng điều này để kiểm tra xem trang web của bạn có trên google tìm kiếm hay không. Thông thường ta thường sử dụng để tìm kiếm trên các trang uy tín như: medium, stackoverflow, geeksforgeeks.org,….&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.31.19.png&quot; /&gt;
  &lt;em&gt;Search &lt;code&gt;site&lt;/code&gt; / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;
&lt;h3 id=&quot;search-using-quotation&quot;&gt;Search using quotation:&lt;/h3&gt;
&lt;p&gt;Bạn cũng có thể sử dụng dấu ngoặc kép để lấy nội dung chính xác hơn. Thông thường, khi bạn gõ tìm một nội dung bất kỳ, Google sẽ gợi ý đến những chủ đề có từ khóa liên quan. Khi dùng phương pháp này kết quả  yêu cầu chính xác cụm từ cần search.&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.58.34.png&quot; /&gt;
  &lt;em&gt;Search using quotation / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;
&lt;p&gt;Không biết sao chứ mình tìm thì nó lại ra lensovieta mọi người ạ!&lt;/p&gt;
&lt;h3 id=&quot;missing-words-or-phrases&quot;&gt;Missing words or Phrases:&lt;/h3&gt;
&lt;p&gt;Bạn có thể sử dụng dấu * (dấu hoa thị) để điền các từ và cụm từ còn thiếu. Nó rất hữu ích bất cứ khi nào bạn đang cố gắng tìm kiếm một bài hát và bạn không nhớ lời bài hát.&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-18 at 20.44.20.png&quot; /&gt;
  &lt;em&gt;Search * / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;excluding-a-word&quot;&gt;Excluding a word:&lt;/h3&gt;
&lt;p&gt;Sử dụng ‘-’ để loại trừ các từ và cụm từ khỏi tìm kiếm. Kết quả sẽ hiển thị tất cả các trang web và liên kết không có chữ.&lt;/p&gt;

&lt;p&gt;Nếu các bạn không thêm &lt;code&gt;-nguyên&lt;/code&gt; vào phía sau thì kết quả sẽ thu được như sau:&lt;/p&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 21.05.55.png&quot; /&gt;
  &lt;em&gt;Excluding a word / &lt;a href=&quot;https://www.facebook.com/manhlab&quot; target=&quot;_blank&quot;&gt;Facebook&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 21.06.39.png&quot; /&gt;
  &lt;em&gt;Excluding a word / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;filetype-operator-tìm-theo-loại-tệp&quot;&gt;FileType Operator: Tìm theo loại tệp&lt;/h3&gt;
&lt;p&gt;Nếu bạn muốn tìm 1 quyển sách mà nó vẫn đang chơi trò trốn tìm với bạn bạn thì mẹo nhỏ sau đây sẽ hữu ích với bạn. Toán tử này cung cấp cho bạn sức mạnh để tìm kiếm tệp cho một loại tệp cụ thể. Nó rất hữu ích khi bạn đang tìm kiếm pdf hoặc các tệp tin được định dạng ở các loại khác như PPT, XSL.&lt;/p&gt;

&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.53.47.png&quot; /&gt;
  &lt;em&gt;Search filetype / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;thực-hành-tìm-một-quyển-sách&quot;&gt;Thực hành tìm một quyển sách&lt;/h3&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.50.59.png&quot; /&gt;
  &lt;em&gt;Search book / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;thực-hành-tìm-mã-nguồn&quot;&gt;Thực hành tìm mã nguồn&lt;/h3&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.49.49.png&quot; /&gt;
  &lt;em&gt;Search code / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;thực-hành-giải-quyết-lỗi-trong-chương-trình&quot;&gt;Thực hành giải quyết lỗi trong chương trình&lt;/h3&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.34.14.png&quot; /&gt;
  &lt;em&gt;Search error / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;

&lt;h3 id=&quot;thực-hành-tìm-một-bài-hát-dựa-theo-lời&quot;&gt;Thực hành tìm một bài hát dựa theo lời&lt;/h3&gt;
&lt;div class=&quot;gallery-box&quot;&gt;
    &lt;img src=&quot;/images/Screenshot 2021-11-19 at 20.36.27.png&quot; /&gt;
  &lt;em&gt;Search song / &lt;a href=&quot;&quot; target=&quot;_blank&quot;&gt;Google&lt;/a&gt;&lt;/em&gt;
&lt;/div&gt;
&lt;p&gt;Đây là một số thủ thuật tìm kiếm mà mình biết. Nếu bạn còn các cách tìm thông tin hiệu quả khác nữa thì đừng ngần ngại chia sẻ vào comment dưới bài viết nhé.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;cite&gt;Cảm ơn các bạn đã đọc hết bài viết này!&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
                <pubDate>Fri, 19 Nov 2021 04:48:45 +0300</pubDate>
                <link>http://localhost:4000/google-search</link>
                <guid isPermaLink="true">http://localhost:4000/google-search</guid>
                
                <category>Programming language</category>
                
                <category>Tools</category>
                
                
                <category>ITMOBRAIN</category>
                
            </item>
        
    </channel>
</rss>